{"version":3,"sources":["webpack:///./codecs/avif/enc/avif_enc_mt.js","webpack:///./codecs/avif/enc/avif_enc.wasm","webpack:///./codecs/avif/enc/avif_enc_mt.wasm","webpack:///./codecs/avif/enc/avif_enc_mt.worker.js","webpack:///./node_modules/wasm-feature-detect/dist/esm/index.js","webpack:///./src/codecs/avif/encoder.ts"],"names":["module","exports","__webpack_require__","p","d","__webpack_exports__","threads","async","MessageChannel","Promise","resolve","then","e","Error","code","port1","postMessage","SharedArrayBuffer","WebAssembly","validate","Uint8Array","r","encode","file_loader_codecs_avif_enc_avif_enc_mt_js__WEBPACK_IMPORTED_MODULE_0__","file_loader_codecs_avif_enc_avif_enc_mt_js__WEBPACK_IMPORTED_MODULE_0___default","n","_codecs_avif_enc_avif_enc_wasm__WEBPACK_IMPORTED_MODULE_1__","_codecs_avif_enc_avif_enc_wasm__WEBPACK_IMPORTED_MODULE_1___default","_codecs_avif_enc_avif_enc_mt_wasm__WEBPACK_IMPORTED_MODULE_2__","_codecs_avif_enc_avif_enc_mt_wasm__WEBPACK_IMPORTED_MODULE_2___default","_codecs_avif_enc_avif_enc_mt_worker_js__WEBPACK_IMPORTED_MODULE_3__","_codecs_avif_enc_avif_enc_mt_worker_js__WEBPACK_IMPORTED_MODULE_3___default","_util__WEBPACK_IMPORTED_MODULE_4__","wasm_feature_detect__WEBPACK_IMPORTED_MODULE_5__","emscriptenModule","data","options","Object","importScripts","a","avif_enc_mt","t","bind","default","init","result","width","height","buffer"],"mappings":"0CAAAA,EAAOC,QAAUC,EAAAC,EAA0B,uC,mBCA3CH,EAAOC,QAAUC,EAAAC,EAA0B,uB,mBCA3CH,EAAOC,QAAUC,EAAAC,EAA0B,0B,mBCA3CH,EAAOC,QAAUC,EAAAC,EAA0B,+B,+BCA3CD,EAAAE,EAAAC,EAAA,sBAAAC,IAAO,MAA86CA,EAAQ,IAAI,OAACC,IAAU,IAAI,OAAM,IAAK,oBAAoBC,eAAeA,qBAAqBC,QAAAC,UAAAC,KAAA,eAAAC,EAAA,IAAAC,MAAA,6CAAAD,EAAAE,KAAA,mBAAAF,IAAyBD,KAAKC,GAAGA,EAAEJ,kBAAkBO,MAAMC,YAAY,IAAIC,kBAAkB,IAAIC,YAAYC,SAASP,GAAG,MAAMA,GAAG,OAAM,IAA1N,CAAgO,IAAIQ,WAAW,CAAC,EAAE,GAAG,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,GAAG,EAAE,EAAE,GAAG,O,gCCAtwDlB,EAAAmB,EAAAhB,GAAAH,EAAAE,EAAAC,EAAA,2BAAAiB,IAAA,IAAAC,EAAArB,EAAA,IAAAsB,EAAAtB,EAAAuB,EAAAF,GAAAG,EAAAxB,EAAA,IAAAyB,EAAAzB,EAAAuB,EAAAC,GAAAE,EAAA1B,EAAA,IAAA2B,EAAA3B,EAAAuB,EAAAG,GAAAE,EAAA5B,EAAA,IAAA6B,EAAA7B,EAAAuB,EAAAK,GAAAE,EAAA9B,EAAA,GAAA+B,EAAA/B,EAAA,GAWA,IAAIgC,EAkBG3B,eAAee,EAAOa,EAAiBC,GACvCF,IAAkBA,EAjBzB3B,iBACE,aAAU8B,OAAAJ,EAAA,EAAAI,IACRC,cAAcd,EAAAe,GACPF,OAAAL,EAAA,EAAAK,CACLG,YACAX,EAAAU,EACAR,EAAAQ,EACAf,EAAAe,IAGGF,OAAAL,EAAA,EAAAK,QACEnC,EAAAU,EAAA,IAAAD,KAAAT,EAAAuC,EAAAC,KAAA,aAAgDC,QACvDhB,EAAAY,GAKwCK,IAE1C,MACMC,SADeX,GACCZ,OAAOa,EAAKA,KAAMA,EAAKW,MAAOX,EAAKY,OAAQX,GAEjE,IAAKS,EACH,MAAM,IAAIhC,MAAM,kBAIlB,OAAOgC,EAAOG","file":"process-avif-enc.160e9.worker.js","sourcesContent":["module.exports = __webpack_public_path__ + \"411d655ca058312f21d62ee51f99a6f1.js\";","module.exports = __webpack_public_path__ + \"avif_enc.b8089.wasm\";","module.exports = __webpack_public_path__ + \"avif_enc_mt.6eab2.wasm\";","module.exports = __webpack_public_path__ + \"avif_enc_mt.worker.5ce38.js\";","export const bigInt=()=>(async e=>{try{return(await WebAssembly.instantiate(e)).instance.exports.b(BigInt(0))===BigInt(0)}catch(e){return!1}})(new Uint8Array([0,97,115,109,1,0,0,0,1,6,1,96,1,126,1,126,3,2,1,0,7,5,1,1,98,0,0,10,6,1,4,0,32,0,11])),bulkMemory=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,3,1,0,1,10,14,1,12,0,65,0,65,0,65,0,252,10,0,0,11])),exceptions=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,6,64,7,26,11,11])),multiValue=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,6,1,96,0,2,127,127,3,2,1,0,10,8,1,6,0,65,0,65,0,11])),mutableGlobals=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,2,8,1,1,97,1,98,3,127,1,6,6,1,127,1,65,0,11,7,5,1,1,97,3,1])),referenceTypes=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,7,1,5,0,208,112,26,11])),saturatedFloatToInt=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,12,1,10,0,67,0,0,0,0,252,0,26,11])),signExtensions=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,8,1,6,0,65,0,192,26,11])),simd=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])),tailCall=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,6,1,4,0,18,0,11])),threads=()=>(async e=>{try{return(new(\"undefined\"!=typeof MessageChannel?MessageChannel:await import(\"worker_threads\").then(e=>e.MessageChannel))).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(e)}catch(e){return!1}})(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]));\n","import mainUrlWithMT from 'file-loader!../../../codecs/avif/enc/avif_enc_mt.js';\nimport { AVIFModule } from '../../../codecs/avif/enc/avif_enc.js';\nimport wasmUrlWithoutMT from '../../../codecs/avif/enc/avif_enc.wasm';\nimport wasmUrlWithMT from '../../../codecs/avif/enc/avif_enc_mt.wasm';\nimport workerUrl from '../../../codecs/avif/enc/avif_enc_mt.worker.js';\nimport { EncodeOptions } from './encoder-meta';\nimport { initEmscriptenModule, ModuleFactory } from '../util';\nimport { threads } from 'wasm-feature-detect';\n\ndeclare const avif_enc_mt: ModuleFactory<AVIFModule>;\n\nlet emscriptenModule: Promise<AVIFModule>;\n\nasync function init() {\n  if (await threads()) {\n    importScripts(mainUrlWithMT);\n    return initEmscriptenModule<AVIFModule>(\n      avif_enc_mt,\n      wasmUrlWithMT,\n      workerUrl,\n      mainUrlWithMT,\n    );\n  }\n  return initEmscriptenModule(\n    (await import('../../../codecs/avif/enc/avif_enc.js')).default,\n    wasmUrlWithoutMT,\n  );\n}\n\nexport async function encode(data: ImageData, options: EncodeOptions): Promise<ArrayBuffer> {\n  if (!emscriptenModule) emscriptenModule = init();\n\n  const module = await emscriptenModule;\n  const result = module.encode(data.data, data.width, data.height, options);\n\n  if (!result) {\n    throw new Error('Encoding error');\n  }\n\n  // wasm canâ€™t run on SharedArrayBuffers, so we hard-cast to ArrayBuffer.\n  return result.buffer as ArrayBuffer;\n}\n"],"sourceRoot":""}