{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./codecs/oxipng/pkg-parallel/squoosh_oxipng.js","webpack:///./codecs/oxipng/worker.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","wasm","memory","heap","Array","fill","undefined","push","heap_next","length","addHeapObject","obj","idx","cachedTextDecoder","TextDecoder","ignoreBOM","fatal","decode","cachegetUint8Memory0","getUint8Memory0","buffer","__wbindgen_export_0","Uint8Array","takeObject","ret","getObject","dropObject","squoosh_oxipng","async","init","input","maybe_memory","imports","wbg","__wbindgen_module","__wbindgen_wasm_module","__wbindgen_memory","__wbg_of_6510501edc06d65e","arg0","arg1","of","__wbindgen_throw","Error","ptr","len","slice","getStringFromWasm0","Request","URL","fetch","instance","Response","WebAssembly","Memory","initial","maximum","shared","instantiateStreaming","e","headers","console","warn","bytes","arrayBuffer","instantiate","Instance","load","__wbindgen_start","addEventListener","event","postMessage","data","start_worker_thread","once"],"mappings":"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","file":"0.598d7.worker.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\nlet wasm;\nlet memory;\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nlet cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.__wbindgen_export_0.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.__wbindgen_export_0.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().slice(ptr, ptr + len));\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n/**\n* @param {number} num\n* @returns {any}\n*/\nexport function worker_initializer(num) {\n    var ret = wasm.worker_initializer(num);\n    return takeObject(ret);\n}\n\n/**\n*/\nexport function start_main_thread() {\n    wasm.start_main_thread();\n}\n\n/**\n*/\nexport function start_worker_thread() {\n    wasm.start_worker_thread();\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1);\n    getUint8Memory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.__wbindgen_export_0.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.__wbindgen_export_0.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n/**\n* @param {Uint8Array} data\n* @param {number} level\n* @returns {Uint8Array}\n*/\nexport function optimise(data, level) {\n    try {\n        const retptr = wasm.__wbindgen_export_1.value - 16;\n        wasm.__wbindgen_export_1.value = retptr;\n        var ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.optimise(retptr, ptr0, len0, level);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v1 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v1;\n    } finally {\n        wasm.__wbindgen_export_1.value += 16;\n    }\n}\n\nasync function load(module, imports, maybe_memory) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        memory = imports.wbg.memory = new WebAssembly.Memory({initial:17,maximum:16384,shared:true});\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        memory = imports.wbg.memory = maybe_memory;\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nasync function init(input, maybe_memory) {\n    if (typeof input === 'undefined') {\n        \n    }\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbindgen_module = function() {\n        var ret = init.__wbindgen_wasm_module;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_memory = function() {\n        var ret = wasm.__wbindgen_export_0;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_of_6510501edc06d65e = function(arg0, arg1) {\n        var ret = Array.of(takeObject(arg0), takeObject(arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n\n    if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {\n        input = fetch(input);\n    }\n\n    const { instance, module } = await load(await input, imports, maybe_memory);\n\n    wasm = instance.exports;\n    init.__wbindgen_wasm_module = module;\n    wasm.__wbindgen_start();\n    return wasm;\n}\n\nexport default init;\n\n","/// <reference lib=\"webworker\" />\nimport initOxiPNG, { start_worker_thread } from './pkg-parallel';\naddEventListener('message', async (event) => {\n    // Tell the \"main\" thread that we've received the message.\n    //\n    // At this point, the \"main\" thread can run Wasm that\n    // will synchronously block waiting on other atomics.\n    //\n    // Note that we don't need to wait for Wasm instantiation here - it's\n    // better to start main thread as early as possible, and then it blocks\n    // on a shared atomic anyway until Worker is fully ready.\n    postMessage(null);\n    await initOxiPNG(...event.data);\n    start_worker_thread();\n}, { once: true });\n"],"sourceRoot":""}