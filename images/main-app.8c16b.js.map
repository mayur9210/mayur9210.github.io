{"version":3,"sources":["webpack:///./src/lib/util.ts","webpack:///./src/components/Options/style.scss","webpack:///./src/codecs/generic/util.ts","webpack:///./src/codecs/browser-png/encoder-meta.ts","webpack:///./src/codecs/browser-jpeg/encoder-meta.ts","webpack:///./src/codecs/browser-webp/encoder-meta.ts","webpack:///./src/codecs/browser-gif/encoder-meta.ts","webpack:///./src/codecs/browser-tiff/encoder-meta.ts","webpack:///./src/codecs/browser-jp2/encoder-meta.ts","webpack:///./src/codecs/browser-bmp/encoder-meta.ts","webpack:///./src/codecs/browser-pdf/encoder-meta.ts","webpack:///./src/components/Output/custom-els/TwoUp/styles.css","webpack:///./src/components/results/style.scss","webpack:///./src/components/compress/style.scss","webpack:///./src/components/Output/style.scss","webpack:///./src/components/range/style.scss","webpack:///./src/custom-els/RangeInput/styles.css","webpack:///./src/components/checkbox/style.scss","webpack:///./src/components/expander/style.scss","webpack:///./src/components/select/style.scss","webpack:///./src/codecs/processor.ts","webpack:///./src/codecs/processor-worker/index.ts","webpack:///./node_modules/comlink/comlink.js","webpack:///./src/codecs/browser-bmp/encoder.ts","webpack:///./src/codecs/browser-png/encoder.tsx","webpack:///./src/codecs/browser-jpeg/encoder.ts","webpack:///./src/codecs/browser-webp/encoder.ts","webpack:///./src/codecs/browser-gif/encoder.ts","webpack:///./src/codecs/browser-tiff/encoder.ts","webpack:///./src/codecs/browser-jp2/encoder.ts","webpack:///./src/codecs/browser-pdf/encoder.ts","webpack:///./src/components/compress/custom-els/MultiPanel/styles.css","webpack:///./node_modules/pretty-bytes/index.js","webpack:///./src/codecs/resize/util.ts","webpack:///./src/codecs/resize/processor-sync.ts","webpack:///./node_modules/pointer-tracker/dist/PointerTracker.mjs","webpack:///./src/components/Output/custom-els/PinchZoom/index.ts","webpack:///./src/components/Output/custom-els/TwoUp/index.ts","webpack:///./src/lib/icons.tsx","webpack:///./src/lib/clean-modify.ts","webpack:///./src/components/Output/index.tsx","webpack:///./src/custom-els/RangeInput/index.ts","webpack:///./src/codecs/mozjpeg/encoder-meta.ts","webpack:///./src/components/range/index.tsx","webpack:///./src/codecs/oxipng/options.tsx","webpack:///./src/components/checkbox/index.tsx","webpack:///./src/components/expander/index.tsx","webpack:///./src/components/select/index.tsx","webpack:///./node_modules/linkstate/dist/linkstate.es.js","webpack:///./src/codecs/mozjpeg/options.tsx","webpack:///./src/codecs/generic/quality-option.tsx","webpack:///./src/codecs/browser-jpeg/options.ts","webpack:///./src/codecs/webp/encoder-meta.ts","webpack:///./src/codecs/webp/options.tsx","webpack:///./src/codecs/avif/encoder-meta.ts","webpack:///./src/codecs/avif/options.tsx","webpack:///./src/codecs/browser-webp/options.ts","webpack:///./src/codecs/imagequant/options.tsx","webpack:///./src/codecs/resize/processor-meta.ts","webpack:///./src/codecs/resize/options.tsx","webpack:///./src/codecs/identity/encoder-meta.ts","webpack:///./src/codecs/oxipng/encoder-meta.ts","webpack:///./src/codecs/encoders.ts","webpack:///./src/components/Options/index.tsx","webpack:///./src/components/compress/result-cache.ts","webpack:///./src/codecs/imagequant/processor-meta.ts","webpack:///./src/codecs/preprocessors.ts","webpack:///./src/codecs/decoders.ts","webpack:///./src/components/compress/custom-els/MultiPanel/index.ts","webpack:///./src/components/results/FileSize.tsx","webpack:///./src/components/results/index.tsx","webpack:///./src/codecs/rotate/processor-meta.ts","webpack:///./src/codecs/input-processors.ts","webpack:///./src/components/compress/index.tsx"],"names":["shallowEqual","one","two","i","drawDataToCanvas","canvas","data","ctx","getContext","Error","clearRect","width","height","putImageData","async","canvasEncode","type","quality","document","createElement","blob","Promise","r","toBlob","dataUrl","toDataURL","result","exec","outputType","binaryStr","atob","Uint8Array","length","charCodeAt","Blob","__webpack_require__","d","__webpack_exports__","canDecodeImageType","blobToArrayBuffer","blobToText","sniffMimeType","blobToImg","drawableToImageData","builtinDecode","builtinResize","inputFieldValueAsNumber","inputFieldCheckedAsNumber","inputFieldChecked","inputFieldValue","konami","transitionHeight","preventDefault","canDecodeCache","Map","has","resultPromise","picture","img","source","srcset","append","currentSrc","set","get","Response","arrayBuffer","text","magicNumberToMimeType","firstChunk","slice","firstChunkString","Array","from","map","v","String","fromCodePoint","join","detector","mimeType","test","url","URL","createObjectURL","Image","decoding","src","loaded","resolve","reject","onload","onerror","decode","catch","decodeImage","revokeObjectURL","drawable","opts","sx","sy","sw","sh","drawImage","getImageData","self","createImageBitmap","dw","dh","method","canvasSource","canvasDest","imageSmoothingEnabled","imageSmoothingQuality","field","defaultVal","Number","checked","value","rollingPattern","listener","event","keyCode","window","removeEventListener","addEventListener","el","getBoundingClientRect","to","duration","easing","style","getComputedStyle","transform","transition","target","module","exports","options-title","optionsTitle","option-text-first","optionTextFirst","option-one-cell","optionOneCell","option-input-first","optionInputFirst","section-enabler","sectionEnabler","options-section","optionsSection","text-field","textField","options-scroller","optionsScroller","canvasEncodeTest","_lib_util__WEBPACK_IMPORTED_MODULE_0__","Object","ImageData","err","label","extension","defaultOptions","featureTest","_generic_util__WEBPACK_IMPORTED_MODULE_0__","two-up-handle","twoUpHandle","scrubber","results","result-data","resultData","download-right","downloadRight","download-left","downloadLeft","stack-right","stackRight","result-title","resultTitle","size-delta","sizeDelta","size-increase","sizeIncrease","size-decrease","sizeDecrease","download","download-link","downloadLink","action-enter","actionEnter","download-link-disable","downloadLinkDisable","action-leave","actionLeave","download-icon","downloadIcon","copy-icon","copyIcon","spinner","copy-to-other","copyToOther","compress","options","multi-panel","multiPanel","expand-icon","expandIcon","output","alt-background","altBackground","two-up","twoUp","pinch-zoom","pinchZoom","pinch-target","pinchTarget","controls","zoom-controls","zoomControls","button","zoom","active","zoom-value","zoomValue","back","buttons-no-wrap","buttonsNoWrap","range","label-text","labelText","range-wc-container","rangeWcContainer","range-wc","rangeWc","text-input","textInput","input","thumb","thumb-wrapper","thumbWrapper","value-display","valueDisplay","touch-active","touchActive","checkbox","real-checkbox","realCheckbox","icon","children-exiting","childrenExiting","select","builtin-select","builtinSelect","arrow","large","workerTimeout","Processor","[object Object]","this","_busy","_latestJobId","_workerTimeoutId","needsWorker","propertyKey","descriptor","processingFunc","args","jobId","abortCurrent","clearTimeout","_worker","Worker","__webpack__worker__1","name","_workerApi","comlink__WEBPACK_IMPORTED_MODULE_0__","returnVal","race","call","_","_abortRejector","_jobCleanup","setTimeout","terminateWorker","DOMException","undefined","terminate","quantize","rotate","resize","mozjpegEncode","pngBlob","_lib_util__WEBPACK_IMPORTED_MODULE_1__","pngBuffer","oxiPngEncode","webpEncode","webpDecode","avifDecode","avifEncode","_browser_bmp_encoder__WEBPACK_IMPORTED_MODULE_3__","_browser_png_encoder__WEBPACK_IMPORTED_MODULE_4__","_browser_jpeg_encoder__WEBPACK_IMPORTED_MODULE_5__","_browser_webp_encoder__WEBPACK_IMPORTED_MODULE_6__","_browser_gif_encoder__WEBPACK_IMPORTED_MODULE_7__","_browser_tiff_encoder__WEBPACK_IMPORTED_MODULE_8__","_browser_jp2_encoder__WEBPACK_IMPORTED_MODULE_9__","_browser_pdf_encoder__WEBPACK_IMPORTED_MODULE_10__","_resize_processor_sync__WEBPACK_IMPORTED_MODULE_2__","__decorate","_lib_initial_util__WEBPACK_IMPORTED_MODULE_11__","_processingJob","p","proxy","TRANSFERABLE_TYPES","filter","f","uid","Math","floor","random","MAX_SAFE_INTEGER","proxyValueSymbol","Symbol","throwSymbol","transferHandlers","canHandle","obj","serialize","port1","port2","MessageChannel","rootObj","endpoint","isWindow","windowEndpoint","isEndpoint","activateEndpoint","attachMessageHandler","id","callPath","irequest","that","reduce","propName","iresult","argumentsList","unwrapValue","apply","e","proxyValue","property","transferHandler","makeInvocationResult","postMessage","transferableProperties","expose","deserialize","message","stack","assign","pingPongMessageCounter","cbProxy","cb","Proxy","construct","_target","_thisArg","then","bind","concat","_proxy","wrapValue","msg","transferables","handler","detachMessageHandler","pingPongMessage","arg","key","wrappedChildren","item","iterateAllProperties","push","path","wrappedValue","wrappedChild","isRawWrappedValue","wrappedChildValue","newValue","replaceValueInObjectAtPath","newVal","lastKey","w","constructor","transfer","isMessagePort","start","every","prop","isTransferable","thing","some","visited","WeakSet","add","ArrayBuffer","isView","keys","encode","_encoder_meta__WEBPACK_IMPORTED_MODULE_0__","panel-heading","panelHeading","panel-content","panelContent","BYTE_UNITS","BIT_UNITS","toLocaleString","number","locale","isFinite","TypeError","UNITS","bits","signed","isNegative","prefix","exponent","min","log10","pow","toPrecision","getContainOffsets","endAspect","newSh","newSw","browserResize","fitMethod","util","vectorResize","Pointer","nativePointer","pageX","pageY","clientX","clientY","Touch","identifier","isPointerEvent","pointerId","getCoalescedEvents","PointerEvent","noop","dist_PointerTracker","_element","callbacks","startPointers","currentPointers","move","end","_startCallback","_moveCallback","_endCallback","_pointerStart","_touchStart","_move","_triggerPointerEnd","_pointerEnd","_touchEnd","pointer","_triggerPointerStart","setPointerCapture","touch","changedTouches","previousPointers","changedPointers","t","trackedChangedPointers","index","findIndex","splice","getDistance","a","b","sqrt","getMidpoint","getAbsoluteValue","max","trimRight","endsWith","parseFloat","cachedSvg","getSVG","createElementNS","createMatrix","createSVGMatrix","createPoint","createSVGPoint","MIN_SCALE","customElements","define","HTMLElement","super","_transform","MutationObserver","_stageElChange","observe","childList","pointerTracker","_positioningEl","_onPointerMove","_onWheel","x","y","scale","originX","originY","relativeTo","allowChangeEvent","relativeToEl","setTransform","rect","currentRect","left","top","_applyChange","scaleDiff","_updateTransform","thisBounds","positioningElBounds","topLeft","bottomRight","matrix","translate","multiply","inverse","matrixTransform","setProperty","Event","bubbles","dispatchEvent","children","console","warn","deltaY","ctrlKey","deltaMode","prevMidpoint","newMidpoint","prevDistance","newDistance","panX","panY","legacyClipCompatAttr","orientationAttr","_handle","_position","_relativePosition","_positionOnPointerStart","_everConnected","className","TwoUp_styles","_childrenChange","ResizeObserver","_resetPosition","_pointerChange","observedAttributes","innerHTML","requestAnimationFrame","bounds","dimensionAxis","orientation","_setPosition","legacyClipCompat","hasAttribute","val","setAttribute","removeAttribute","getAttribute","toLowerCase","lastElementChild","appendChild","startPoint","currentPoint","pointAxis","Icon","props","preact","viewBox","fill","DownloadIcon","ToggleBackgroundIcon","ToggleBackgroundActiveIcon","RotateIcon","AddIcon","RemoveIcon","UncheckedIcon","CheckedIcon","ExpandIcon","BackIcon","copyAcrossRotations","up","right","down","CopyAcrossIcon","copyDirection","otherProps","__rest","rotation","clip-path","cleanSetOrMerge","toSetOrMerge","merge","splitKeys","isArray","split","last","copy","newObject","lastIndex","entries","cleanMerge","toMerge","cleanSet","scaleToOpts","Output_Output","state","editingScale","retargetedEvents","leftDraw","leftDrawable","rightDraw","rightDrawable","pinchZoomLeft","canvasLeft","canvasRight","prevProps","prevState","prevLeftDraw","prevRightDraw","sourceFileChanged","file","oldSourceData","processed","newSourceData","scaleChange","oldXScaleOffset","oldYScaleOffset","nextProps","nextState","leftCompressed","rightCompressed","setState","scaleTo","inputProcessorState","newState","onInputProcessorChange","scaleInput","focus","percent","isNaN","pinchZoomRight","targetEl","closest","stopImmediatePropagation","clonedEvent","activeElement","blur","mobileView","leftImgContain","rightImgContain","onBack","originalImage","class","Output_style","legacy-clip-compat","onTouchStartCapture","onRetargetableEvent","onTouchEndCapture","onTouchMoveCapture","onPointerDownCapture","onMouseDownCapture","onWheelCapture","onChange","onPinchZoomLeftChange","ref","initial_util","objectFit","onClick","zoomOut","step","round","onInput","onScaleInputChanged","onBlur","onScaleInputBlur","tabIndex","onFocus","onScaleValueFocus","zoomIn","onRotateClick","title","toggleBackground","RETARGETED_EVENTS","UPDATE_EVENTS","REFLECTED_PROPERTIES","REFLECTED_ATTRIBUTES","RangeInput_RangeInputElement","_ignoreChange","_input","RangeInput_styles","tracker","classList","remove","_retargetEvent","_update","contains","insertBefore","firstChild","_valueDisplay","querySelector","labelPrecision","precision","oldValue","_reflectAttributes","retargetted","afterDecimal","getPrescision","displayValue","toFixed","toString","textContent","attributeName","RangeInput_decorate","defineProperty","prototype","MozJpegColorSpace","range_Range","trim","range_rest","range_style","onTextInput","range_decorate","options_OxiPNGEncoderOptions","form","currentTarget","level","Options_style","onSubmit","options_decorate","encoder_meta_mimeType","baseline","arithmetic","progressive","optimize_coding","smoothing","color_space","YCbCr","quant_table","trellis_multipass","trellis_opt_zero","trellis_opt_table","trellis_loops","auto_subsample","chroma_subsample","separate_chroma_quality","chroma_quality","checkbox_Checkbox","checkbox_style","expander_Expander","outgoingChildren","lastElHeight","nextChildren","base","previousProps","previousChildren","overflow","newHeight","expander_style","select_Select","select_rest","select_style","linkstate_es","component","eventPath","cache","__lsc","def","dlv","nodeName","match","options_MozJPEGEncoderOptions","showAdvanced","newOptions","GRAYSCALE","RGB","mozjpeg_options_decorate","qualityOption","QualityOptions","quality_option_decorate","WebPImageHint","browser_jpeg_options","encoder_meta_type","encoder_meta_label","webp_encoder_meta_mimeType","encoder_meta_extension","encoder_meta_defaultOptions","target_size","target_PSNR","sns_strength","filter_strength","filter_sharpness","filter_type","partitions","segments","pass","show_compressed","preprocessing","autofilter","partition_limit","alpha_compression","alpha_filtering","alpha_quality","lossless","exact","image_hint","emulate_jpeg_size","thread_level","low_memory","near_lossless","use_delta_palette","use_sharp_yuv","losslessPresets","losslessPresetDefault","determineLosslessQuality","presetMethod","presetQuality","options_WebPEncoderOptions","losslessPresetValue","lossless_preset","method_input","WEBP_HINT_GRAPH","WEBP_HINT_DEFAULT","_losslessSpecificOptions","_lossySpecificOptions","webp_options_decorate","avif_encoder_meta_type","avif_encoder_meta_label","avif_encoder_meta_mimeType","avif_encoder_meta_extension","avif_encoder_meta_defaultOptions","minQuantizer","maxQuantizer","minQuantizerAlpha","maxQuantizerAlpha","tileColsLog2","tileRowsLog2","speed","subsample","maxQuant","maxSpeed","browser_webp_options","konamiPromise","options_QuantizerOptions","extendedSettings","zx","maxNumColors","dither","imagequant_options_decorate","workerResizeMethods","isWorkerOptions","includes","sizePresets","options_ResizerOptions","maintainAspect","presetWidths","presetHeights","generatePresetValues","inputWidth","inputHeight","checkValidity","resizeMethod","premultiply","linearRGB","reportOptions","getAspect","preset","multiplier","isVector","getPreset","onPresetChange","required","onWidthInput","onHeightInput","resize_options_decorate","identity_encoder_meta_type","identity_encoder_meta_label","identity_encoder_meta_defaultOptions","oxipng_encoder_meta_type","oxipng_encoder_meta_label","oxipng_encoder_meta_mimeType","oxipng_encoder_meta_extension","oxipng_encoder_meta_defaultOptions","encoderMap","identity_encoder_meta_namespaceObject","oxipng_encoder_meta_namespaceObject","encoder_meta_namespaceObject","webp_encoder_meta_namespaceObject","avif_encoder_meta_namespaceObject","encoder_meta","browser_jpeg_encoder_meta","browser_webp_encoder_meta","browser_bmp_encoder_meta","browser_gif_encoder_meta","browser_tiff_encoder_meta","browser_jp2_encoder_meta","browser_pdf_encoder_meta","encoders","values","encodersSupported","all","encoder","isSupported","encoderOptionsComponentMap","_inputChangeCallbacks","_inputChange","formEl","minQuality","maxQuality","minAlphaQuality","maxAlphaQuality","optionState","separateAlpha","losslessAlpha","grayscale","tileCols","tileRows","effort","minQuantizerValue","maxQuantizerValue","minQuantizerAlphaValue","maxQuantizerAlphaValue","data-set-state","Options_Options","encoderSupportMap","onEncoderTypeChange","preprocessor","onPreprocessorOptionsChange","preprocessorState","encoderState","onEncoderOptionsChange","EncoderOptionComponent","enabled","onPreprocessorEnabledChange","Boolean","vectorImage","onResizeOptionsChange","quantizer","onQuantizerOptionsChange","Options_decorate","SIZE","result_cache_ResultCache","_entries","entry","unshift","pop","sourceData","matchingIndex","matchingEntry","preprocessed","defaultPreprocessorState","processor","canDecode","openOneOnlyAttr","getClosestHeading","closestEl","MultiPanel_styles","MultiPanel_close","heading","content","nextElementSibling","_onClick","_onKeyDown","_closeAll","exceptFirst","_toggle","selectedEl","altKey","newHeading","_prevHeading","_nextHeading","_firstHeading","_lastHeading","openOneOnly","MultiPanel_open","els","matches","preserveTabIndex","firstElementChild","randomId","substr","error","previousContent","previousElementSibling","nextContent","lastEl","lastContent","FileSize_FileSize","compareTo","comparison","delta","size","results_style","pretty_bytes","buttonPositionClass","loadingReactionDelay","results_Results","showLoadingState","loadingTimeoutId","loading","onCopyToOtherClick","before","after","imageFile","change","ga","metric1","metric2","metric3","downloadUrl","buttonPosition","href","onDownload","results_decorate","defaultInputProcessorState","processInput","inputProcessData","processedData","stateForNewSourceData","newSource","sides","encodedSettings","resultTitles","buttonPositions","originalDocumentTitle","compress_Compress","widthQuery","matchMedia","loadingCounter","latestSettings","loadedCounter","encodeCache","leftProcessor","codecs_processor","rightProcessor","updateImageTimeoutIds","addListener","onMobileWidthChange","updateFile","mainAppLoaded","newType","filename","updateDocumentTitle","sourceDataChanged","side","prevSettings","encoderChanged","preprocessorChanged","queueUpdateImage","skipPreprocessing","otherIndex","oldSettings","newSettings","showSnack","timeout","actions","orientationChanged","decoded","resizeSettings","startsWith","parser","DOMParser","parseFromString","svg","documentElement","viewboxParts","XMLSerializer","serializeToString","processSvg","updateImage","settings","cacheResult","preprocessData","isHqx","workerResize","pixelOpts","imageQuant","preprocessImage","image","encodeData","sourceFilename","compressedData","browserPngEncode","browserJpegEncode","browserWebpEncode","browserGifEncode","browserTiffEncode","browserJp2Encode","browserBmpEncode","browserPdfEncode","JSON","stringify","replace","compressImage","latestData","leftSide","rightSide","leftImageData","rightImageData","copyDirections","leftDisplaySettings","rightDisplaySettings","open-one-only","compress_decorate"],"mappings":"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","file":"main-app.8c16b.js","sourcesContent":["/** Compare two objects, returning a boolean indicating if\n *  they have the same properties and strictly equal values.\n */\nexport function shallowEqual(one: any, two: any) {\n  for (const i in one) if (one[i] !== two[i]) return false;\n  for (const i in two) if (!(i in one)) return false;\n  return true;\n}\n\n/** Replace the contents of a canvas with the given data */\nexport function drawDataToCanvas(canvas: HTMLCanvasElement, data: ImageData) {\n  const ctx = canvas.getContext('2d');\n  if (!ctx) throw Error('Canvas not initialized');\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.putImageData(data, 0, 0);\n}\n\n/**\n * Encode some image data in a given format using the browser's encoders\n *\n * @param {ImageData} data\n * @param {string} type A mime type, eg image/jpeg.\n * @param {number} [quality] Between 0-1.\n */\nexport async function canvasEncode(data: ImageData, type: string, quality?: number): Promise<Blob> {\n  const canvas = document.createElement('canvas');\n  canvas.width = data.width;\n  canvas.height = data.height;\n  const ctx = canvas.getContext('2d');\n  if (!ctx) throw Error('Canvas not initialized');\n  ctx.putImageData(data, 0, 0);\n\n  let blob: Blob | null;\n\n  if ('toBlob' in canvas) {\n    blob = await new Promise<Blob | null>(r => canvas.toBlob(r, type, quality));\n  } else {\n    // Welcome to Edge.\n    // TypeScript thinks `canvas` is 'never', so it needs casting.\n    const dataUrl = (canvas as HTMLCanvasElement).toDataURL(type, quality);\n    const result = /data:([^;]+);base64,(.*)$/.exec(dataUrl);\n\n    if (!result) throw Error('Data URL reading failed');\n\n    const outputType = result[1];\n    const binaryStr = atob(result[2]);\n    const data = new Uint8Array(binaryStr.length);\n\n    for (let i = 0; i < data.length; i += 1) {\n      data[i] = binaryStr.charCodeAt(i);\n    }\n\n    blob = new Blob([data], { type: outputType });\n  }\n\n  if (!blob) throw Error('Encoding failed');\n  return blob;\n}\n\nasync function decodeImage(url: string): Promise<HTMLImageElement> {\n  const img = new Image();\n  img.decoding = 'async';\n  img.src = url;\n  const loaded = new Promise((resolve, reject) => {\n    img.onload = () => resolve();\n    img.onerror = () => reject(Error('Image loading error'));\n  });\n\n  if (img.decode) {\n    // Nice off-thread way supported in Safari/Chrome.\n    // Safari throws on decode if the source is SVG.\n    // https://bugs.webkit.org/show_bug.cgi?id=188347\n    await img.decode().catch(() => null);\n  }\n\n  // Always await loaded, as we may have bailed due to the Safari bug above.\n  await loaded;\n  return img;\n}\n\n/** Caches results from canDecodeImageType */\nconst canDecodeCache = new Map<string, Promise<boolean>>();\n\n/**\n * Tests whether the browser supports a particular image mime type.\n *\n * @param type Mimetype\n * @example await canDecodeImageType('image/avif')\n */\nexport function canDecodeImageType(type: string): Promise<boolean> {\n  if (!canDecodeCache.has(type)) {\n    const resultPromise = (async () => {\n      const picture = document.createElement('picture');\n      const img = document.createElement('img');\n      const source = document.createElement('source');\n      source.srcset = 'data:,x';\n      source.type = type;\n      picture.append(source, img);\n\n      // Wait a single microtick just for the `img.currentSrc` to get populated.\n      await 0;\n      // At this point `img.currentSrc` will contain \"data:,x\" if format is supported and \"\"\n      // otherwise.\n      return !!img.currentSrc;\n    })();\n\n    canDecodeCache.set(type, resultPromise);\n  }\n\n  return canDecodeCache.get(type)!;\n}\n\nexport function blobToArrayBuffer(blob: Blob): Promise<ArrayBuffer> {\n  return new Response(blob).arrayBuffer();\n}\n\nexport function blobToText(blob: Blob): Promise<string> {\n  return new Response(blob).text();\n}\n\nconst magicNumberToMimeType = new Map<RegExp, string>([\n  [/^%PDF-/, 'application/pdf'],\n  [/^GIF87a/, 'image/gif'],\n  [/^GIF89a/, 'image/gif'],\n  [/^\\x89PNG\\x0D\\x0A\\x1A\\x0A/, 'image/png'],\n  [/^\\xFF\\xD8\\xFF/, 'image/jpeg'],\n  [/^BM/, 'image/bmp'],\n  [/^I I/, 'image/tiff'],\n  [/^II*/, 'image/tiff'],\n  [/^MM\\x00*/, 'image/tiff'],\n  [/^RIFF....WEBPVP8[LX ]/, 'image/webp'],\n  [/^\\x00\\x00\\x00 ftypavif\\x00\\x00\\x00\\x00/, 'image/avif'],\n]);\n\nexport async function sniffMimeType(blob: Blob): Promise<string> {\n  const firstChunk = await blobToArrayBuffer(blob.slice(0, 16));\n  const firstChunkString =\n    Array.from(new Uint8Array(firstChunk))\n      .map(v => String.fromCodePoint(v))\n      .join('');\n  for (const [detector, mimeType] of magicNumberToMimeType) {\n    if (detector.test(firstChunkString)) {\n      return mimeType;\n    }\n  }\n  return '';\n}\n\nexport async function blobToImg(blob: Blob): Promise<HTMLImageElement> {\n  const url = URL.createObjectURL(blob);\n\n  try {\n    return await decodeImage(url);\n  } finally {\n    URL.revokeObjectURL(url);\n  }\n}\n\ninterface DrawableToImageDataOptions {\n  width?: number;\n  height?: number;\n  sx?: number;\n  sy?: number;\n  sw?: number;\n  sh?: number;\n}\n\nexport function drawableToImageData(\n  drawable: ImageBitmap | HTMLImageElement,\n  opts: DrawableToImageDataOptions = {},\n): ImageData {\n  const {\n    width = drawable.width,\n    height = drawable.height,\n    sx = 0,\n    sy = 0,\n    sw = drawable.width,\n    sh = drawable.height,\n  } = opts;\n\n  // Make canvas same size as image\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  // Draw image onto canvas\n  const ctx = canvas.getContext('2d');\n  if (!ctx) throw new Error('Could not create canvas context');\n  ctx.drawImage(drawable, sx, sy, sw, sh, 0, 0, width, height);\n  return ctx.getImageData(0, 0, width, height);\n}\n\nexport async function builtinDecode(blob: Blob): Promise<ImageData> {\n  // Prefer createImageBitmap as it's the off-thread option for Firefox.\n  const drawable = 'createImageBitmap' in self ?\n    await createImageBitmap(blob) : await blobToImg(blob);\n\n  return drawableToImageData(drawable);\n}\n\nexport type BuiltinResizeMethod = 'pixelated' | 'low' | 'medium' | 'high';\n\nexport function builtinResize(\n  data: ImageData,\n  sx: number, sy: number, sw: number, sh: number,\n  dw: number, dh: number,\n  method: BuiltinResizeMethod,\n): ImageData {\n  const canvasSource = document.createElement('canvas');\n  canvasSource.width = data.width;\n  canvasSource.height = data.height;\n  drawDataToCanvas(canvasSource, data);\n\n  const canvasDest = document.createElement('canvas');\n  canvasDest.width = dw;\n  canvasDest.height = dh;\n  const ctx = canvasDest.getContext('2d');\n  if (!ctx) throw new Error('Could not create canvas context');\n\n  if (method === 'pixelated') {\n    ctx.imageSmoothingEnabled = false;\n  } else {\n    ctx.imageSmoothingQuality = method;\n  }\n\n  ctx.drawImage(canvasSource, sx, sy, sw, sh, 0, 0, dw, dh);\n  return ctx.getImageData(0, 0, dw, dh);\n}\n\n/**\n * @param field An HTMLInputElement, but the casting is done here to tidy up onChange.\n * @param defaultVal Value to return if 'field' doesn't exist.\n */\nexport function inputFieldValueAsNumber(field: any, defaultVal: number = 0): number {\n  if (!field) return defaultVal;\n  return Number(inputFieldValue(field));\n}\n\n/**\n * @param field An HTMLInputElement, but the casting is done here to tidy up onChange.\n * @param defaultVal Value to return if 'field' doesn't exist.\n */\nexport function inputFieldCheckedAsNumber(field: any, defaultVal: number = 0): number {\n  if (!field) return defaultVal;\n  return Number(inputFieldChecked(field));\n}\n\n/**\n * @param field An HTMLInputElement, but the casting is done here to tidy up onChange.\n * @param defaultVal Value to return if 'field' doesn't exist.\n */\nexport function inputFieldChecked(field: any, defaultVal: boolean = false): boolean {\n  if (!field) return defaultVal;\n  return (field as HTMLInputElement).checked;\n}\n\n/**\n * @param field An HTMLInputElement, but the casting is done here to tidy up onChange.\n * @param defaultVal Value to return if 'field' doesn't exist.\n */\nexport function inputFieldValue(field: any, defaultVal: string = ''): string {\n  if (!field) return defaultVal;\n  return (field as HTMLInputElement).value;\n}\n\n/**\n * Creates a promise that resolves when the user types the konami code.\n */\nexport function konami(): Promise<void> {\n  return new Promise((resolve) => {\n    // Keycodes for: ↑ ↑ ↓ ↓ ← → ← → B A\n    const expectedPattern = '38384040373937396665';\n    let rollingPattern = '';\n\n    const listener = (event: KeyboardEvent) => {\n      rollingPattern += event.keyCode;\n      rollingPattern = rollingPattern.slice(-expectedPattern.length);\n      if (rollingPattern === expectedPattern) {\n        window.removeEventListener('keydown', listener);\n        resolve();\n      }\n    };\n\n    window.addEventListener('keydown', listener);\n  });\n}\n\ninterface TransitionOptions {\n  from?: number;\n  to?: number;\n  duration?: number;\n  easing?: string;\n}\n\nexport async function transitionHeight(el: HTMLElement, opts: TransitionOptions): Promise<void> {\n  const {\n    from = el.getBoundingClientRect().height,\n    to = el.getBoundingClientRect().height,\n    duration = 1000,\n    easing = 'ease-in-out',\n  } = opts;\n\n  if (from === to || duration === 0) {\n    el.style.height = to + 'px';\n    return;\n  }\n\n  el.style.height = from + 'px';\n  // Force a style calc so the browser picks up the start value.\n  getComputedStyle(el).transform;\n  el.style.transition = `height ${duration}ms ${easing}`;\n  el.style.height = to + 'px';\n\n  return new Promise<void>((resolve) => {\n    const listener = (event: Event) => {\n      if (event.target !== el) return;\n      el.style.transition = '';\n      el.removeEventListener('transitionend', listener);\n      el.removeEventListener('transitioncancel', listener);\n      resolve();\n    };\n\n    el.addEventListener('transitionend', listener);\n    el.addEventListener('transitioncancel', listener);\n  });\n}\n\n/**\n * Simple event listener that prevents the default.\n */\nexport function preventDefault(event: Event) {\n  event.preventDefault();\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"options-title\":\"_bowx\",\"optionsTitle\":\"_bowx\",\"option-text-first\":\"_22nOp\",\"optionTextFirst\":\"_22nOp\",\"option-one-cell\":\"_3bqd9\",\"optionOneCell\":\"_3bqd9\",\"option-input-first\":\"_41Z3W\",\"optionInputFirst\":\"_41Z3W\",\"section-enabler\":\"_2bLMv\",\"sectionEnabler\":\"_2bLMv\",\"options-section\":\"_2O8o1\",\"optionsSection\":\"_2O8o1\",\"text-field\":\"YOpk9\",\"textField\":\"YOpk9\",\"options-scroller\":\"HlR3l\",\"optionsScroller\":\"HlR3l\"};","import { canvasEncode } from '../../lib/util';\n\nexport async function canvasEncodeTest(mimeType: string) {\n  try {\n    const blob = await canvasEncode(new ImageData(1, 1), mimeType);\n    // According to the spec, the blob should be null if the format isn't supported…\n    if (!blob) return false;\n    // …but Safari & Firefox fall back to PNG, so we need to check the mime type.\n    return blob.type === mimeType;\n  } catch (err) {\n    return false;\n  }\n}\n","export interface EncodeOptions {}\nexport interface EncoderState { type: typeof type; options: EncodeOptions; }\n\nexport const type = 'browser-png';\nexport const label = 'Browser PNG';\nexport const mimeType = 'image/png';\nexport const extension = 'png';\nexport const defaultOptions: EncodeOptions = {};\n","export interface EncodeOptions { quality: number; }\nexport interface EncoderState { type: typeof type; options: EncodeOptions; }\n\nexport const type = 'browser-jpeg';\nexport const label = 'Browser JPEG';\nexport const mimeType = 'image/jpeg';\nexport const extension = 'jpg';\nexport const defaultOptions: EncodeOptions = { quality: 0.75 };\n","import { canvasEncodeTest } from '../generic/util';\n\nexport interface EncodeOptions { quality: number; }\nexport interface EncoderState { type: typeof type; options: EncodeOptions; }\n\nexport const type = 'browser-webp';\nexport const label = 'Browser WebP';\nexport const mimeType = 'image/webp';\nexport const extension = 'webp';\nexport const defaultOptions: EncodeOptions = { quality: 0.75 };\nexport const featureTest = () => canvasEncodeTest(mimeType);\n","import { canvasEncodeTest } from '../generic/util';\n\nexport interface EncodeOptions {}\nexport interface EncoderState { type: typeof type; options: EncodeOptions; }\n\nexport const type = 'browser-gif';\nexport const label = 'Browser GIF';\nexport const mimeType = 'image/gif';\nexport const extension = 'gif';\nexport const defaultOptions: EncodeOptions = {};\nexport const featureTest = () => canvasEncodeTest(mimeType);\n","import { canvasEncodeTest } from '../generic/util';\n\nexport interface EncodeOptions { }\nexport interface EncoderState { type: typeof type; options: EncodeOptions; }\n\nexport const type = 'browser-tiff';\nexport const label = 'Browser TIFF';\nexport const mimeType = 'image/tiff';\nexport const extension = 'tiff';\nexport const defaultOptions: EncodeOptions = {};\nexport const featureTest = () => canvasEncodeTest(mimeType);\n","import { canvasEncodeTest } from '../generic/util';\n\nexport interface EncodeOptions { }\nexport interface EncoderState { type: typeof type; options: EncodeOptions; }\n\nexport const type = 'browser-jp2';\nexport const label = 'Browser JPEG 2000';\nexport const mimeType = 'image/jp2';\nexport const extension = 'jp2';\nexport const defaultOptions: EncodeOptions = {};\nexport const featureTest = () => canvasEncodeTest(mimeType);\n","import { canvasEncodeTest } from '../generic/util';\n\nexport interface EncodeOptions { }\nexport interface EncoderState { type: typeof type; options: EncodeOptions; }\n\nexport const type = 'browser-bmp';\nexport const label = 'Browser BMP';\nexport const mimeType = 'image/bmp';\nexport const extension = 'bmp';\nexport const defaultOptions: EncodeOptions = {};\nexport const featureTest = () => canvasEncodeTest(mimeType);\n","import { canvasEncodeTest } from '../generic/util';\n\nexport interface EncodeOptions { }\nexport interface EncoderState { type: typeof type; options: EncodeOptions; }\n\nexport const type = 'browser-pdf';\nexport const label = 'Browser PDF';\nexport const mimeType = 'application/pdf';\nexport const extension = 'pdf';\nexport const defaultOptions: EncodeOptions = {};\nexport const featureTest = () => canvasEncodeTest(mimeType);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"two-up-handle\":\"fKaHr\",\"twoUpHandle\":\"fKaHr\",\"scrubber\":\"_1N4rr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"results\":\"_2Za09\",\"result-data\":\"hc73a\",\"resultData\":\"hc73a\",\"download-right\":\"_3XDaq\",\"downloadRight\":\"_3XDaq\",\"download-left\":\"_1wmPh\",\"downloadLeft\":\"_1wmPh\",\"stack-right\":\"_2I565\",\"stackRight\":\"_2I565\",\"result-title\":\"_3ikiG\",\"resultTitle\":\"_3ikiG\",\"size-delta\":\"_1eNmr\",\"sizeDelta\":\"_1eNmr\",\"size-increase\":\"_21jT-\",\"sizeIncrease\":\"_21jT-\",\"size-decrease\":\"_1U8bE\",\"sizeDecrease\":\"_1U8bE\",\"download\":\"_1Lw5i\",\"download-link\":\"_2pDQm\",\"downloadLink\":\"_2pDQm\",\"action-enter\":\"_1EMMz\",\"actionEnter\":\"_1EMMz\",\"download-link-disable\":\"yznmM\",\"downloadLinkDisable\":\"yznmM\",\"action-leave\":\"_1udtV\",\"actionLeave\":\"_1udtV\",\"download-icon\":\"_1bBjU\",\"downloadIcon\":\"_1bBjU\",\"copy-icon\":\"_9VG14\",\"copyIcon\":\"_9VG14\",\"spinner\":\"_2EVrV\",\"copy-to-other\":\"_1BPNG LdCmd _1Lw5i\",\"copyToOther\":\"_1BPNG LdCmd _1Lw5i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"compress\":\"_2wucw\",\"options\":\"_1vnTp\",\"multi-panel\":\"_1iYR2\",\"multiPanel\":\"_1iYR2\",\"expand-icon\":\"qUjf-\",\"expandIcon\":\"qUjf-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"output\":\"_3wY6x _2H7gL\",\"alt-background\":\"_2SEwr\",\"altBackground\":\"_2SEwr\",\"two-up\":\"_367Xl _2H7gL\",\"twoUp\":\"_367Xl _2H7gL\",\"pinch-zoom\":\"_1Bd5a _2H7gL\",\"pinchZoom\":\"_1Bd5a _2H7gL\",\"pinch-target\":\"_3P3SZ\",\"pinchTarget\":\"_3P3SZ\",\"controls\":\"_3YuEs\",\"zoom-controls\":\"_17ipg\",\"zoomControls\":\"_17ipg\",\"button\":\"_2snFQ\",\"zoom\":\"_2mErH\",\"active\":\"lb8rE\",\"zoom-value\":\"_1FTAH\",\"zoomValue\":\"_1FTAH\",\"back\":\"_2_rma\",\"buttons-no-wrap\":\"_1BEC8\",\"buttonsNoWrap\":\"_1BEC8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"QqOS4\",\"label-text\":\"_3hiaw\",\"labelText\":\"_3hiaw\",\"range-wc-container\":\"_15Ptg\",\"rangeWcContainer\":\"_15Ptg\",\"range-wc\":\"_1grfT\",\"rangeWc\":\"_1grfT\",\"text-input\":\"nPuUh\",\"textInput\":\"nPuUh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"_2x7lc\",\"thumb\":\"_1gtTt\",\"thumb-wrapper\":\"hL76v\",\"thumbWrapper\":\"hL76v\",\"value-display\":\"_3JmdS\",\"valueDisplay\":\"_3JmdS\",\"touch-active\":\"_3dAl-\",\"touchActive\":\"_3dAl-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"_3LmVE\",\"real-checkbox\":\"hoUbY\",\"realCheckbox\":\"hoUbY\",\"icon\":\"K0_Fo\",\"checked\":\"_2njZE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"children-exiting\":\"_3Jzxx\",\"childrenExiting\":\"_3Jzxx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"_1Xahn\",\"builtin-select\":\"RkbM3\",\"builtinSelect\":\"RkbM3\",\"arrow\":\"fbftt\",\"large\":\"_19hmM\"};","import { proxy } from 'comlink';\nimport { QuantizeOptions } from './imagequant/processor-meta';\nimport { canvasEncode, blobToArrayBuffer } from '../lib/util';\nimport { EncodeOptions as MozJPEGEncoderOptions } from './mozjpeg/encoder-meta';\nimport { EncodeOptions as OxiPNGEncoderOptions } from './oxipng/encoder-meta';\nimport { EncodeOptions as WebPEncoderOptions } from './webp/encoder-meta';\nimport { EncodeOptions as AvifEncoderOptions } from './avif/encoder-meta';\nimport { EncodeOptions as BrowserJPEGOptions } from './browser-jpeg/encoder-meta';\nimport { EncodeOptions as BrowserWebpEncodeOptions } from './browser-webp/encoder-meta';\nimport { BrowserResizeOptions, VectorResizeOptions } from './resize/processor-meta';\nimport { browserResize, vectorResize } from './resize/processor-sync';\nimport * as browserBMP from './browser-bmp/encoder';\nimport * as browserPNG from './browser-png/encoder';\nimport * as browserJPEG from './browser-jpeg/encoder';\nimport * as browserWebP from './browser-webp/encoder';\nimport * as browserGIF from './browser-gif/encoder';\nimport * as browserTIFF from './browser-tiff/encoder';\nimport * as browserJP2 from './browser-jp2/encoder';\nimport * as browserPDF from './browser-pdf/encoder';\nimport { bind } from '../lib/initial-util';\n\ntype ProcessorWorkerApi = import('./processor-worker').ProcessorWorkerApi;\n\n/** How long the worker should be idle before terminating. */\nconst workerTimeout = 10000;\n\ninterface ProcessingJobOptions {\n  needsWorker?: boolean;\n}\n\nexport default class Processor {\n  /** Worker instance associated with this processor. */\n  private _worker?: Worker;\n  /** Comlinked worker API. */\n  private _workerApi?: ProcessorWorkerApi;\n  /** Rejector for a pending promise. */\n  private _abortRejector?: (err: Error) => void;\n  /** Is work currently happening? */\n  private _busy = false;\n  /** Incementing ID so we can tell if a job has been superseded. */\n  private _latestJobId: number = 0;\n  /** setTimeout ID for killing the worker when idle. */\n  private _workerTimeoutId: number = 0;\n\n  /**\n   * Decorator that manages the (re)starting of the worker and aborting existing jobs. Not all\n   * processing jobs require a worker (e.g. the main thread canvas encodes), use the needsWorker\n   * option to control this.\n   */\n  private static _processingJob(options: ProcessingJobOptions = {}) {\n    const { needsWorker = false } = options;\n\n    return (target: Processor, propertyKey: string, descriptor: PropertyDescriptor): void => {\n      const processingFunc = descriptor.value;\n\n      descriptor.value = async function (this: Processor, ...args: any[]) {\n        this._latestJobId += 1;\n        const jobId = this._latestJobId;\n        this.abortCurrent();\n\n        if (needsWorker) self.clearTimeout(this._workerTimeoutId);\n\n        if (!this._worker && needsWorker) {\n          // worker-loader does magic here.\n          this._worker = new Worker(\n            './processor-worker',\n            { name: 'processor-worker', type: 'module' },\n          );\n          // Need to do some TypeScript trickery to make the type match.\n          this._workerApi = proxy(this._worker) as any as ProcessorWorkerApi;\n        }\n\n        this._busy = true;\n\n        const returnVal = Promise.race([\n          processingFunc.call(this, ...args),\n          new Promise((_, reject) => { this._abortRejector = reject; }),\n        ]);\n\n        // Wait for the operation to settle.\n        await returnVal.catch(() => {});\n\n        // If no other jobs are happening, cleanup.\n        if (jobId === this._latestJobId) this._jobCleanup();\n\n        return returnVal;\n      };\n    };\n  }\n\n  private _jobCleanup(): void {\n    this._busy = false;\n\n    if (!this._worker) return;\n\n    // If the worker is unused for 10 seconds, remove it to save memory.\n    this._workerTimeoutId = self.setTimeout(this.terminateWorker, workerTimeout);\n  }\n\n  /** Abort the current job, if any */\n  abortCurrent() {\n    if (!this._busy) return;\n    if (!this._abortRejector) throw Error(\"There must be a rejector if it's busy\");\n    this._abortRejector(new DOMException('Aborted', 'AbortError'));\n    this._abortRejector = undefined;\n    this._busy = false;\n    this.terminateWorker();\n  }\n\n  @bind\n  terminateWorker() {\n    if (!this._worker) return;\n    this._worker.terminate();\n    this._worker = undefined;\n  }\n\n  // Off main thread jobs:\n  @Processor._processingJob({ needsWorker: true })\n  imageQuant(data: ImageData, opts: QuantizeOptions): Promise<ImageData> {\n    return this._workerApi!.quantize(data, opts);\n  }\n\n  @Processor._processingJob({ needsWorker: true })\n  rotate(\n    data: ImageData, opts: import('./rotate/processor-meta').RotateOptions,\n  ): Promise<ImageData> {\n    return this._workerApi!.rotate(data, opts);\n  }\n\n  @Processor._processingJob({ needsWorker: true })\n  workerResize(\n    data: ImageData, opts: import('./resize/processor-meta').WorkerResizeOptions,\n  ): Promise<ImageData> {\n    return this._workerApi!.resize(data, opts);\n  }\n\n  @Processor._processingJob({ needsWorker: true })\n  mozjpegEncode(\n    data: ImageData, opts: MozJPEGEncoderOptions,\n  ): Promise<ArrayBuffer> {\n    return this._workerApi!.mozjpegEncode(data, opts);\n  }\n\n  @Processor._processingJob({ needsWorker: true })\n  async oxiPngEncode(\n    data: ImageData, opts: OxiPNGEncoderOptions,\n  ): Promise<ArrayBuffer> {\n    // OxiPNG expects PNG input.\n    const pngBlob = await canvasEncode(data, 'image/png');\n    const pngBuffer = await blobToArrayBuffer(pngBlob);\n    return this._workerApi!.oxiPngEncode(pngBuffer, opts);\n  }\n\n  @Processor._processingJob({ needsWorker: true })\n  webpEncode(data: ImageData, opts: WebPEncoderOptions): Promise<ArrayBuffer> {\n    return this._workerApi!.webpEncode(data, opts);\n  }\n\n  @Processor._processingJob({ needsWorker: true })\n  async webpDecode(blob: Blob): Promise<ImageData> {\n    const data = await blobToArrayBuffer(blob);\n    return this._workerApi!.webpDecode(data);\n  }\n\n  @Processor._processingJob({ needsWorker: true })\n  async avifDecode(blob: Blob): Promise<ImageData> {\n    const data = await blobToArrayBuffer(blob);\n    return this._workerApi!.avifDecode(data);\n  }\n\n  @Processor._processingJob({ needsWorker: true })\n  avifEncode(data: ImageData, opts: AvifEncoderOptions): Promise<ArrayBuffer> {\n    return this._workerApi!.avifEncode(data, opts);\n  }\n\n  // Not-worker jobs:\n\n  @Processor._processingJob()\n  browserBmpEncode(data: ImageData): Promise<Blob> {\n    return browserBMP.encode(data);\n  }\n\n  @Processor._processingJob()\n  browserPngEncode(data: ImageData): Promise<Blob> {\n    return browserPNG.encode(data);\n  }\n\n  @Processor._processingJob()\n  browserJpegEncode(data: ImageData, opts: BrowserJPEGOptions): Promise<Blob> {\n    return browserJPEG.encode(data, opts);\n  }\n\n  @Processor._processingJob()\n  browserWebpEncode(data: ImageData, opts: BrowserWebpEncodeOptions): Promise<Blob> {\n    return browserWebP.encode(data, opts);\n  }\n\n  @Processor._processingJob()\n  browserGifEncode(data: ImageData): Promise<Blob> {\n    return browserGIF.encode(data);\n  }\n\n  @Processor._processingJob()\n  browserTiffEncode(data: ImageData): Promise<Blob> {\n    return browserTIFF.encode(data);\n  }\n\n  @Processor._processingJob()\n  browserJp2Encode(data: ImageData): Promise<Blob> {\n    return browserJP2.encode(data);\n  }\n\n  @Processor._processingJob()\n  browserPdfEncode(data: ImageData): Promise<Blob> {\n    return browserPDF.encode(data);\n  }\n\n  // Synchronous jobs\n\n  resize(data: ImageData, opts: BrowserResizeOptions) {\n    this.abortCurrent();\n    return browserResize(data, opts);\n  }\n\n  vectorResize(data: HTMLImageElement, opts: VectorResizeOptions) {\n    this.abortCurrent();\n    return vectorResize(data, opts);\n  }\n}\n","module.exports = __webpack_public_path__ + \"processor-worker.acf8b.worker.js\"","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst TRANSFERABLE_TYPES = [\"ArrayBuffer\", \"MessagePort\", \"OffscreenCanvas\"]\n    .filter(f => f in self)\n    .map(f => self[f]);\nconst uid = Math.floor(Math.random() * Number.MAX_SAFE_INTEGER);\nconst proxyValueSymbol = Symbol(\"proxyValue\");\nconst throwSymbol = Symbol(\"throw\");\nconst proxyTransferHandler = {\n    canHandle: (obj) => obj && obj[proxyValueSymbol],\n    serialize: (obj) => {\n        const { port1, port2 } = new MessageChannel();\n        expose(obj, port1);\n        return port2;\n    },\n    deserialize: (obj) => {\n        return proxy(obj);\n    }\n};\nconst throwTransferHandler = {\n    canHandle: (obj) => obj && obj[throwSymbol],\n    serialize: (obj) => {\n        const message = obj && obj.message;\n        const stack = obj && obj.stack;\n        return Object.assign({}, obj, { message, stack });\n    },\n    deserialize: (obj) => {\n        throw Object.assign(Error(), obj);\n    }\n};\nexport const transferHandlers = new Map([\n    [\"PROXY\", proxyTransferHandler],\n    [\"THROW\", throwTransferHandler]\n]);\nlet pingPongMessageCounter = 0;\nexport function proxy(endpoint, target) {\n    if (isWindow(endpoint))\n        endpoint = windowEndpoint(endpoint);\n    if (!isEndpoint(endpoint))\n        throw Error(\"endpoint does not have all of addEventListener, removeEventListener and postMessage defined\");\n    activateEndpoint(endpoint);\n    return cbProxy(async (irequest) => {\n        let args = [];\n        if (irequest.type === \"APPLY\" || irequest.type === \"CONSTRUCT\")\n            args = irequest.argumentsList.map(wrapValue);\n        const response = await pingPongMessage(endpoint, Object.assign({}, irequest, { argumentsList: args }), transferableProperties(args));\n        const result = response.data;\n        return unwrapValue(result.value);\n    }, [], target);\n}\nexport function proxyValue(obj) {\n    obj[proxyValueSymbol] = true;\n    return obj;\n}\nexport function expose(rootObj, endpoint) {\n    if (isWindow(endpoint))\n        endpoint = windowEndpoint(endpoint);\n    if (!isEndpoint(endpoint))\n        throw Error(\"endpoint does not have all of addEventListener, removeEventListener and postMessage defined\");\n    activateEndpoint(endpoint);\n    attachMessageHandler(endpoint, async function (event) {\n        if (!event.data.id || !event.data.callPath)\n            return;\n        const irequest = event.data;\n        let that = await irequest.callPath\n            .slice(0, -1)\n            .reduce((obj, propName) => obj[propName], rootObj);\n        let obj = await irequest.callPath.reduce((obj, propName) => obj[propName], rootObj);\n        let iresult = obj;\n        let args = [];\n        if (irequest.type === \"APPLY\" || irequest.type === \"CONSTRUCT\")\n            args = irequest.argumentsList.map(unwrapValue);\n        if (irequest.type === \"APPLY\") {\n            try {\n                iresult = await obj.apply(that, args);\n            }\n            catch (e) {\n                iresult = e;\n                iresult[throwSymbol] = true;\n            }\n        }\n        if (irequest.type === \"CONSTRUCT\") {\n            try {\n                iresult = new obj(...args); // eslint-disable-line new-cap\n                iresult = proxyValue(iresult);\n            }\n            catch (e) {\n                iresult = e;\n                iresult[throwSymbol] = true;\n            }\n        }\n        if (irequest.type === \"SET\") {\n            obj[irequest.property] = irequest.value;\n            // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n            // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n            iresult = true;\n        }\n        iresult = makeInvocationResult(iresult);\n        iresult.id = irequest.id;\n        return endpoint.postMessage(iresult, transferableProperties([iresult]));\n    });\n}\nfunction wrapValue(arg) {\n    // Is arg itself handled by a TransferHandler?\n    for (const [key, transferHandler] of transferHandlers) {\n        if (transferHandler.canHandle(arg)) {\n            return {\n                type: key,\n                value: transferHandler.serialize(arg)\n            };\n        }\n    }\n    // If not, traverse the entire object and find handled values.\n    let wrappedChildren = [];\n    for (const item of iterateAllProperties(arg)) {\n        for (const [key, transferHandler] of transferHandlers) {\n            if (transferHandler.canHandle(item.value)) {\n                wrappedChildren.push({\n                    path: item.path,\n                    wrappedValue: {\n                        type: key,\n                        value: transferHandler.serialize(item.value)\n                    }\n                });\n            }\n        }\n    }\n    for (const wrappedChild of wrappedChildren) {\n        const container = wrappedChild.path\n            .slice(0, -1)\n            .reduce((obj, key) => obj[key], arg);\n        container[wrappedChild.path[wrappedChild.path.length - 1]] = null;\n    }\n    return {\n        type: \"RAW\",\n        value: arg,\n        wrappedChildren\n    };\n}\nfunction unwrapValue(arg) {\n    if (transferHandlers.has(arg.type)) {\n        const transferHandler = transferHandlers.get(arg.type);\n        return transferHandler.deserialize(arg.value);\n    }\n    else if (isRawWrappedValue(arg)) {\n        for (const wrappedChildValue of arg.wrappedChildren || []) {\n            if (!transferHandlers.has(wrappedChildValue.wrappedValue.type))\n                throw Error(`Unknown value type \"${arg.type}\" at ${wrappedChildValue.path.join(\".\")}`);\n            const transferHandler = transferHandlers.get(wrappedChildValue.wrappedValue.type);\n            const newValue = transferHandler.deserialize(wrappedChildValue.wrappedValue.value);\n            replaceValueInObjectAtPath(arg.value, wrappedChildValue.path, newValue);\n        }\n        return arg.value;\n    }\n    else {\n        throw Error(`Unknown value type \"${arg.type}\"`);\n    }\n}\nfunction replaceValueInObjectAtPath(obj, path, newVal) {\n    const lastKey = path.slice(-1)[0];\n    const lastObj = path\n        .slice(0, -1)\n        .reduce((obj, key) => obj[key], obj);\n    lastObj[lastKey] = newVal;\n}\nfunction isRawWrappedValue(arg) {\n    return arg.type === \"RAW\";\n}\nfunction windowEndpoint(w) {\n    if (self.constructor.name !== \"Window\")\n        throw Error(\"self is not a window\");\n    return {\n        addEventListener: self.addEventListener.bind(self),\n        removeEventListener: self.removeEventListener.bind(self),\n        postMessage: (msg, transfer) => w.postMessage(msg, \"*\", transfer)\n    };\n}\nfunction isEndpoint(endpoint) {\n    return (\"addEventListener\" in endpoint &&\n        \"removeEventListener\" in endpoint &&\n        \"postMessage\" in endpoint);\n}\nfunction activateEndpoint(endpoint) {\n    if (isMessagePort(endpoint))\n        endpoint.start();\n}\nfunction attachMessageHandler(endpoint, f) {\n    // Checking all possible types of `endpoint` manually satisfies TypeScript’s\n    // type checker. Not sure why the inference is failing here. Since it’s\n    // unnecessary code I’m going to resort to `any` for now.\n    // if(isWorker(endpoint))\n    //   endpoint.addEventListener('message', f);\n    // if(isMessagePort(endpoint))\n    //   endpoint.addEventListener('message', f);\n    // if(isOtherWindow(endpoint))\n    //   endpoint.addEventListener('message', f);\n    endpoint.addEventListener(\"message\", f);\n}\nfunction detachMessageHandler(endpoint, f) {\n    // Same as above.\n    endpoint.removeEventListener(\"message\", f);\n}\nfunction isMessagePort(endpoint) {\n    return endpoint.constructor.name === \"MessagePort\";\n}\nfunction isWindow(endpoint) {\n    // TODO: This doesn’t work on cross-origin iframes.\n    // return endpoint.constructor.name === 'Window';\n    return [\"window\", \"length\", \"location\", \"parent\", \"opener\"].every(prop => prop in endpoint);\n}\n/**\n * `pingPongMessage` sends a `postMessage` and waits for a reply. Replies are\n * identified by a unique id that is attached to the payload.\n */\nfunction pingPongMessage(endpoint, msg, transferables) {\n    const id = `${uid}-${pingPongMessageCounter++}`;\n    return new Promise(resolve => {\n        attachMessageHandler(endpoint, function handler(event) {\n            if (event.data.id !== id)\n                return;\n            detachMessageHandler(endpoint, handler);\n            resolve(event);\n        });\n        // Copy msg and add `id` property\n        msg = Object.assign({}, msg, { id });\n        endpoint.postMessage(msg, transferables);\n    });\n}\nfunction cbProxy(cb, callPath = [], target = function () { }) {\n    return new Proxy(target, {\n        construct(_target, argumentsList, proxy) {\n            return cb({\n                type: \"CONSTRUCT\",\n                callPath,\n                argumentsList\n            });\n        },\n        apply(_target, _thisArg, argumentsList) {\n            // We use `bind` as an indicator to have a remote function bound locally.\n            // The actual target for `bind()` is currently ignored.\n            if (callPath[callPath.length - 1] === \"bind\")\n                return cbProxy(cb, callPath.slice(0, -1));\n            return cb({\n                type: \"APPLY\",\n                callPath,\n                argumentsList\n            });\n        },\n        get(_target, property, proxy) {\n            if (property === \"then\" && callPath.length === 0) {\n                return { then: () => proxy };\n            }\n            else if (property === \"then\") {\n                const r = cb({\n                    type: \"GET\",\n                    callPath\n                });\n                return Promise.resolve(r).then.bind(r);\n            }\n            else {\n                return cbProxy(cb, callPath.concat(property), _target[property]);\n            }\n        },\n        set(_target, property, value, _proxy) {\n            return cb({\n                type: \"SET\",\n                callPath,\n                property,\n                value\n            });\n        }\n    });\n}\nfunction isTransferable(thing) {\n    return TRANSFERABLE_TYPES.some(type => thing instanceof type);\n}\nfunction* iterateAllProperties(value, path = [], visited = null) {\n    if (!value)\n        return;\n    if (!visited)\n        visited = new WeakSet();\n    if (visited.has(value))\n        return;\n    if (typeof value === \"string\")\n        return;\n    if (typeof value === \"object\")\n        visited.add(value);\n    if (ArrayBuffer.isView(value))\n        return;\n    yield { value, path };\n    const keys = Object.keys(value);\n    for (const key of keys)\n        yield* iterateAllProperties(value[key], [...path, key], visited);\n}\nfunction transferableProperties(obj) {\n    const r = [];\n    for (const prop of iterateAllProperties(obj)) {\n        if (isTransferable(prop.value))\n            r.push(prop.value);\n    }\n    return r;\n}\nfunction makeInvocationResult(obj) {\n    for (const [type, transferHandler] of transferHandlers) {\n        if (transferHandler.canHandle(obj)) {\n            const value = transferHandler.serialize(obj);\n            return {\n                value: { type, value }\n            };\n        }\n    }\n    return {\n        value: {\n            type: \"RAW\",\n            value: obj\n        }\n    };\n}\n","import { mimeType } from './encoder-meta';\nimport { canvasEncode } from '../../lib/util';\n\nexport function encode(data: ImageData) {\n  return canvasEncode(data, mimeType);\n}\n","import { mimeType } from './encoder-meta';\nimport { canvasEncode } from '../../lib/util';\n\nexport function encode(data: ImageData) {\n  return canvasEncode(data, mimeType);\n}\n","import { EncodeOptions, mimeType } from './encoder-meta';\nimport { canvasEncode } from '../../lib/util';\n\nexport function encode(data: ImageData, { quality }: EncodeOptions) {\n  return canvasEncode(data, mimeType, quality);\n}\n","import { EncodeOptions, mimeType } from './encoder-meta';\nimport { canvasEncode } from '../../lib/util';\n\nexport function encode(data: ImageData, { quality }: EncodeOptions) {\n  return canvasEncode(data, mimeType, quality);\n}\n","import { mimeType } from './encoder-meta';\nimport { canvasEncode } from '../../lib/util';\n\nexport function encode(data: ImageData) {\n  return canvasEncode(data, mimeType);\n}\n","import { mimeType } from './encoder-meta';\nimport { canvasEncode } from '../../lib/util';\n\nexport function encode(data: ImageData) {\n  return canvasEncode(data, mimeType);\n}\n","import { mimeType } from './encoder-meta';\nimport { canvasEncode } from '../../lib/util';\n\nexport function encode(data: ImageData) {\n  return canvasEncode(data, mimeType);\n}\n","import { mimeType } from './encoder-meta';\nimport { canvasEncode } from '../../lib/util';\n\nexport function encode(data: ImageData) {\n  return canvasEncode(data, mimeType);\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panel-heading\":\"ED-CD\",\"panelHeading\":\"ED-CD\",\"panel-content\":\"_10baD\",\"panelContent\":\"_10baD\"};","'use strict';\n\nconst BYTE_UNITS = [\n\t'B',\n\t'kB',\n\t'MB',\n\t'GB',\n\t'TB',\n\t'PB',\n\t'EB',\n\t'ZB',\n\t'YB'\n];\n\nconst BIT_UNITS = [\n\t'b',\n\t'kbit',\n\t'Mbit',\n\t'Gbit',\n\t'Tbit',\n\t'Pbit',\n\t'Ebit',\n\t'Zbit',\n\t'Ybit'\n];\n\n/*\nFormats the given number using `Number#toLocaleString`.\n- If locale is a string, the value is expected to be a locale-key (for example: `de`).\n- If locale is true, the system default locale is used for translation.\n- If no value for locale is specified, the number is returned unmodified.\n*/\nconst toLocaleString = (number, locale) => {\n\tlet result = number;\n\tif (typeof locale === 'string') {\n\t\tresult = number.toLocaleString(locale);\n\t} else if (locale === true) {\n\t\tresult = number.toLocaleString();\n\t}\n\n\treturn result;\n};\n\nmodule.exports = (number, options) => {\n\tif (!Number.isFinite(number)) {\n\t\tthrow new TypeError(`Expected a finite number, got ${typeof number}: ${number}`);\n\t}\n\n\toptions = Object.assign({bits: false}, options);\n\tconst UNITS = options.bits ? BIT_UNITS : BYTE_UNITS;\n\n\tif (options.signed && number === 0) {\n\t\treturn ' 0 ' + UNITS[0];\n\t}\n\n\tconst isNegative = number < 0;\n\tconst prefix = isNegative ? '-' : (options.signed ? '+' : '');\n\n\tif (isNegative) {\n\t\tnumber = -number;\n\t}\n\n\tif (number < 1) {\n\t\tconst numberString = toLocaleString(number, options.locale);\n\t\treturn prefix + numberString + ' ' + UNITS[0];\n\t}\n\n\tconst exponent = Math.min(Math.floor(Math.log10(number) / 3), UNITS.length - 1);\n\t// eslint-disable-next-line unicorn/prefer-exponentiation-operator\n\tnumber = Number((number / Math.pow(1000, exponent)).toPrecision(3));\n\tconst numberString = toLocaleString(number, options.locale);\n\n\tconst unit = UNITS[exponent];\n\n\treturn prefix + numberString + ' ' + unit;\n};\n","export function getContainOffsets(sw: number, sh: number, dw: number, dh: number) {\n  const currentAspect = sw / sh;\n  const endAspect = dw / dh;\n\n  if (endAspect > currentAspect) {\n    const newSh = sw / endAspect;\n    const newSy = (sh - newSh) / 2;\n    return { sw, sh: newSh, sx: 0, sy: newSy };\n  }\n\n  const newSw = sh * endAspect;\n  const newSx = (sw - newSw) / 2;\n  return { sh, sw: newSw, sx: newSx, sy: 0 };\n}\n","import { builtinResize, BuiltinResizeMethod, drawableToImageData } from '../../lib/util';\nimport { BrowserResizeOptions, VectorResizeOptions } from './processor-meta';\nimport { getContainOffsets } from './util';\n\nexport function browserResize(data: ImageData, opts: BrowserResizeOptions): ImageData {\n  let sx = 0;\n  let sy = 0;\n  let sw = data.width;\n  let sh = data.height;\n\n  if (opts.fitMethod === 'contain') {\n    ({ sx, sy, sw, sh } = getContainOffsets(sw, sh, opts.width, opts.height));\n  }\n\n  return builtinResize(\n    data, sx, sy, sw, sh, opts.width, opts.height,\n    opts.method.slice('browser-'.length) as BuiltinResizeMethod,\n  );\n}\n\nexport function vectorResize(data: HTMLImageElement, opts: VectorResizeOptions): ImageData {\n  let sx = 0;\n  let sy = 0;\n  let sw = data.width;\n  let sh = data.height;\n\n  if (opts.fitMethod === 'contain') {\n    ({ sx, sy, sw, sh } = getContainOffsets(sw, sh, opts.width, opts.height));\n  }\n\n  return drawableToImageData(data, {\n    sx, sy, sw, sh,\n    width: opts.width, height: opts.height,\n  });\n}\n","class Pointer {\r\n    constructor(nativePointer) {\r\n        /** Unique ID for this pointer */\r\n        this.id = -1;\r\n        this.nativePointer = nativePointer;\r\n        this.pageX = nativePointer.pageX;\r\n        this.pageY = nativePointer.pageY;\r\n        this.clientX = nativePointer.clientX;\r\n        this.clientY = nativePointer.clientY;\r\n        if (self.Touch && nativePointer instanceof Touch) {\r\n            this.id = nativePointer.identifier;\r\n        }\r\n        else if (isPointerEvent(nativePointer)) { // is PointerEvent\r\n            this.id = nativePointer.pointerId;\r\n        }\r\n    }\r\n    /**\r\n     * Returns an expanded set of Pointers for high-resolution inputs.\r\n     */\r\n    getCoalesced() {\r\n        if ('getCoalescedEvents' in this.nativePointer) {\r\n            return this.nativePointer.getCoalescedEvents().map(p => new Pointer(p));\r\n        }\r\n        return [this];\r\n    }\r\n}\r\nconst isPointerEvent = (event) => self.PointerEvent && event instanceof PointerEvent;\r\nconst noop = () => { };\r\n/**\r\n * Track pointers across a particular element\r\n */\r\nclass PointerTracker {\r\n    /**\r\n     * Track pointers across a particular element\r\n     *\r\n     * @param element Element to monitor.\r\n     * @param callbacks\r\n     */\r\n    constructor(_element, callbacks) {\r\n        this._element = _element;\r\n        /**\r\n         * State of the tracked pointers when they were pressed/touched.\r\n         */\r\n        this.startPointers = [];\r\n        /**\r\n         * Latest state of the tracked pointers. Contains the same number\r\n         * of pointers, and in the same order as this.startPointers.\r\n         */\r\n        this.currentPointers = [];\r\n        const { start = () => true, move = noop, end = noop, } = callbacks;\r\n        this._startCallback = start;\r\n        this._moveCallback = move;\r\n        this._endCallback = end;\r\n        // Bind methods\r\n        this._pointerStart = this._pointerStart.bind(this);\r\n        this._touchStart = this._touchStart.bind(this);\r\n        this._move = this._move.bind(this);\r\n        this._triggerPointerEnd = this._triggerPointerEnd.bind(this);\r\n        this._pointerEnd = this._pointerEnd.bind(this);\r\n        this._touchEnd = this._touchEnd.bind(this);\r\n        // Add listeners\r\n        if (self.PointerEvent) {\r\n            this._element.addEventListener('pointerdown', this._pointerStart);\r\n        }\r\n        else {\r\n            this._element.addEventListener('mousedown', this._pointerStart);\r\n            this._element.addEventListener('touchstart', this._touchStart);\r\n            this._element.addEventListener('touchmove', this._move);\r\n            this._element.addEventListener('touchend', this._touchEnd);\r\n        }\r\n    }\r\n    /**\r\n     * Call the start callback for this pointer, and track it if the user wants.\r\n     *\r\n     * @param pointer Pointer\r\n     * @param event Related event\r\n     * @returns Whether the pointer is being tracked.\r\n     */\r\n    _triggerPointerStart(pointer, event) {\r\n        if (!this._startCallback(pointer, event))\r\n            return false;\r\n        this.currentPointers.push(pointer);\r\n        this.startPointers.push(pointer);\r\n        return true;\r\n    }\r\n    /**\r\n     * Listener for mouse/pointer starts. Bound to the class in the constructor.\r\n     *\r\n     * @param event This will only be a MouseEvent if the browser doesn't support\r\n     * pointer events.\r\n     */\r\n    _pointerStart(event) {\r\n        if (event.button !== 0 /* Left */)\r\n            return;\r\n        if (!this._triggerPointerStart(new Pointer(event), event))\r\n            return;\r\n        // Add listeners for additional events.\r\n        // The listeners may already exist, but no harm in adding them again.\r\n        if (isPointerEvent(event)) {\r\n            this._element.setPointerCapture(event.pointerId);\r\n            this._element.addEventListener('pointermove', this._move);\r\n            this._element.addEventListener('pointerup', this._pointerEnd);\r\n        }\r\n        else { // MouseEvent\r\n            window.addEventListener('mousemove', this._move);\r\n            window.addEventListener('mouseup', this._pointerEnd);\r\n        }\r\n    }\r\n    /**\r\n     * Listener for touchstart. Bound to the class in the constructor.\r\n     * Only used if the browser doesn't support pointer events.\r\n     */\r\n    _touchStart(event) {\r\n        for (const touch of Array.from(event.changedTouches)) {\r\n            this._triggerPointerStart(new Pointer(touch), event);\r\n        }\r\n    }\r\n    /**\r\n     * Listener for pointer/mouse/touch move events.\r\n     * Bound to the class in the constructor.\r\n     */\r\n    _move(event) {\r\n        const previousPointers = this.currentPointers.slice();\r\n        const changedPointers = ('changedTouches' in event) ? // Shortcut for 'is touch event'.\r\n            Array.from(event.changedTouches).map(t => new Pointer(t)) :\r\n            [new Pointer(event)];\r\n        const trackedChangedPointers = [];\r\n        for (const pointer of changedPointers) {\r\n            const index = this.currentPointers.findIndex(p => p.id === pointer.id);\r\n            if (index === -1)\r\n                continue; // Not a pointer we're tracking\r\n            trackedChangedPointers.push(pointer);\r\n            this.currentPointers[index] = pointer;\r\n        }\r\n        if (trackedChangedPointers.length === 0)\r\n            return;\r\n        this._moveCallback(previousPointers, trackedChangedPointers, event);\r\n    }\r\n    /**\r\n     * Call the end callback for this pointer.\r\n     *\r\n     * @param pointer Pointer\r\n     * @param event Related event\r\n     */\r\n    _triggerPointerEnd(pointer, event) {\r\n        const index = this.currentPointers.findIndex(p => p.id === pointer.id);\r\n        // Not a pointer we're interested in?\r\n        if (index === -1)\r\n            return false;\r\n        this.currentPointers.splice(index, 1);\r\n        this.startPointers.splice(index, 1);\r\n        this._endCallback(pointer, event);\r\n        return true;\r\n    }\r\n    /**\r\n     * Listener for mouse/pointer ends. Bound to the class in the constructor.\r\n     * @param event This will only be a MouseEvent if the browser doesn't support\r\n     * pointer events.\r\n     */\r\n    _pointerEnd(event) {\r\n        if (!this._triggerPointerEnd(new Pointer(event), event))\r\n            return;\r\n        if (isPointerEvent(event)) {\r\n            if (this.currentPointers.length)\r\n                return;\r\n            this._element.removeEventListener('pointermove', this._move);\r\n            this._element.removeEventListener('pointerup', this._pointerEnd);\r\n        }\r\n        else { // MouseEvent\r\n            window.removeEventListener('mousemove', this._move);\r\n            window.removeEventListener('mouseup', this._pointerEnd);\r\n        }\r\n    }\r\n    /**\r\n     * Listener for touchend. Bound to the class in the constructor.\r\n     * Only used if the browser doesn't support pointer events.\r\n     */\r\n    _touchEnd(event) {\r\n        for (const touch of Array.from(event.changedTouches)) {\r\n            this._triggerPointerEnd(new Pointer(touch), event);\r\n        }\r\n    }\r\n}\n\nexport default PointerTracker;\n","import PointerTracker, { Pointer } from 'pointer-tracker';\nimport './styles.css';\n\ninterface Point {\n  clientX: number;\n  clientY: number;\n}\n\ninterface ChangeOptions {\n  /**\n   * Fire a 'change' event if values are different to current values\n   */\n  allowChangeEvent?: boolean;\n}\n\ninterface ApplyChangeOpts extends ChangeOptions {\n  panX?: number;\n  panY?: number;\n  scaleDiff?: number;\n  originX?: number;\n  originY?: number;\n}\n\ninterface SetTransformOpts extends ChangeOptions {\n  scale?: number;\n  x?: number;\n  y?: number;\n}\n\ntype ScaleRelativeToValues = 'container' | 'content';\n\nexport interface ScaleToOpts extends ChangeOptions {\n  /** Transform origin. Can be a number, or string percent, eg \"50%\" */\n  originX?: number | string;\n  /** Transform origin. Can be a number, or string percent, eg \"50%\" */\n  originY?: number | string;\n  /** Should the transform origin be relative to the container, or content? */\n  relativeTo?: ScaleRelativeToValues;\n}\n\nfunction getDistance(a: Point, b?: Point): number {\n  if (!b) return 0;\n  return Math.sqrt((b.clientX - a.clientX) ** 2 + (b.clientY - a.clientY) ** 2);\n}\n\nfunction getMidpoint(a: Point, b?: Point): Point {\n  if (!b) return a;\n\n  return {\n    clientX: (a.clientX + b.clientX) / 2,\n    clientY: (a.clientY + b.clientY) / 2,\n  };\n}\n\nfunction getAbsoluteValue(value: string | number, max: number): number {\n  if (typeof value === 'number') return value;\n\n  if (value.trimRight().endsWith('%')) {\n    return max * parseFloat(value) / 100;\n  }\n  return parseFloat(value);\n}\n\n// I'd rather use DOMMatrix/DOMPoint here, but the browser support isn't good enough.\n// Given that, better to use something everything supports.\nlet cachedSvg: SVGSVGElement;\n\nfunction getSVG(): SVGSVGElement {\n  return cachedSvg || (cachedSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg'));\n}\n\nfunction createMatrix(): SVGMatrix {\n  return getSVG().createSVGMatrix();\n}\n\nfunction createPoint(): SVGPoint {\n  return getSVG().createSVGPoint();\n}\n\nconst MIN_SCALE = 0.01;\n\nexport default class PinchZoom extends HTMLElement {\n  // The element that we'll transform.\n  // Ideally this would be shadow DOM, but we don't have the browser\n  // support yet.\n  private _positioningEl?: Element;\n  // Current transform.\n  private _transform: SVGMatrix = createMatrix();\n\n  constructor() {\n    super();\n\n    // Watch for children changes.\n    // Note this won't fire for initial contents,\n    // so _stageElChange is also called in connectedCallback.\n    new MutationObserver(() => this._stageElChange())\n      .observe(this, { childList: true });\n\n    // Watch for pointers\n    const pointerTracker: PointerTracker = new PointerTracker(this, {\n      start: (pointer, event) => {\n        // We only want to track 2 pointers at most\n        if (pointerTracker.currentPointers.length === 2 || !this._positioningEl) return false;\n        event.preventDefault();\n        return true;\n      },\n      move: (previousPointers) => {\n        this._onPointerMove(previousPointers, pointerTracker.currentPointers);\n      },\n    });\n\n    this.addEventListener('wheel', event => this._onWheel(event));\n  }\n\n  connectedCallback() {\n    this._stageElChange();\n  }\n\n  get x() {\n    return this._transform.e;\n  }\n\n  get y() {\n    return this._transform.f;\n  }\n\n  get scale() {\n    return this._transform.a;\n  }\n\n  /**\n   * Change the scale, adjusting x/y by a given transform origin.\n   */\n  scaleTo(scale: number, opts: ScaleToOpts = {}) {\n    let {\n      originX = 0,\n      originY = 0,\n    } = opts;\n\n    const {\n      relativeTo = 'content',\n      allowChangeEvent = false,\n    } = opts;\n\n    const relativeToEl = (relativeTo === 'content' ? this._positioningEl : this);\n\n    // No content element? Fall back to just setting scale\n    if (!relativeToEl || !this._positioningEl) {\n      this.setTransform({ scale, allowChangeEvent });\n      return;\n    }\n\n    const rect = relativeToEl.getBoundingClientRect();\n    originX = getAbsoluteValue(originX, rect.width);\n    originY = getAbsoluteValue(originY, rect.height);\n\n    if (relativeTo === 'content') {\n      originX += this.x;\n      originY += this.y;\n    } else {\n      const currentRect = this._positioningEl.getBoundingClientRect();\n      originX -= currentRect.left;\n      originY -= currentRect.top;\n    }\n\n    this._applyChange({\n      allowChangeEvent,\n      originX,\n      originY,\n      scaleDiff: scale / this.scale,\n    });\n  }\n\n  /**\n   * Update the stage with a given scale/x/y.\n   */\n  setTransform(opts: SetTransformOpts = {}) {\n    const {\n      scale = this.scale,\n      allowChangeEvent = false,\n    } = opts;\n\n    let {\n      x = this.x,\n      y = this.y,\n    } = opts;\n\n    // If we don't have an element to position, just set the value as given.\n    // We'll check bounds later.\n    if (!this._positioningEl) {\n      this._updateTransform(scale, x, y, allowChangeEvent);\n      return;\n    }\n\n    // Get current layout\n    const thisBounds = this.getBoundingClientRect();\n    const positioningElBounds = this._positioningEl.getBoundingClientRect();\n\n    // Not displayed. May be disconnected or display:none.\n    // Just take the values, and we'll check bounds later.\n    if (!thisBounds.width || !thisBounds.height) {\n      this._updateTransform(scale, x, y, allowChangeEvent);\n      return;\n    }\n\n    // Create points for _positioningEl.\n    let topLeft = createPoint();\n    topLeft.x = positioningElBounds.left - thisBounds.left;\n    topLeft.y = positioningElBounds.top - thisBounds.top;\n    let bottomRight = createPoint();\n    bottomRight.x = positioningElBounds.width + topLeft.x;\n    bottomRight.y = positioningElBounds.height + topLeft.y;\n\n    // Calculate the intended position of _positioningEl.\n    const matrix = createMatrix()\n      .translate(x, y)\n      .scale(scale)\n      // Undo current transform\n      .multiply(this._transform.inverse());\n\n    topLeft = topLeft.matrixTransform(matrix);\n    bottomRight = bottomRight.matrixTransform(matrix);\n\n    // Ensure _positioningEl can't move beyond out-of-bounds.\n    // Correct for x\n    if (topLeft.x > thisBounds.width) {\n      x += thisBounds.width - topLeft.x;\n    } else if (bottomRight.x < 0) {\n      x += -bottomRight.x;\n    }\n\n    // Correct for y\n    if (topLeft.y > thisBounds.height) {\n      y += thisBounds.height - topLeft.y;\n    } else if (bottomRight.y < 0) {\n      y += -bottomRight.y;\n    }\n\n    this._updateTransform(scale, x, y, allowChangeEvent);\n  }\n\n  /**\n   * Update transform values without checking bounds. This is only called in setTransform.\n   */\n  private _updateTransform(scale: number, x: number, y: number, allowChangeEvent: boolean) {\n    // Avoid scaling to zero\n    if (scale < MIN_SCALE) return;\n\n    // Return if there's no change\n    if (\n      scale === this.scale &&\n      x === this.x &&\n      y === this.y\n    ) return;\n\n    this._transform.e = x;\n    this._transform.f = y;\n    this._transform.d = this._transform.a = scale;\n\n    this.style.setProperty('--x', this.x + 'px');\n    this.style.setProperty('--y', this.y + 'px');\n    this.style.setProperty('--scale', this.scale + '');\n\n    if (allowChangeEvent) {\n      const event = new Event('change', { bubbles: true });\n      this.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * Called when the direct children of this element change.\n   * Until we have have shadow dom support across the board, we\n   * require a single element to be the child of <pinch-zoom>, and\n   * that's the element we pan/scale.\n   */\n  private _stageElChange() {\n    this._positioningEl = undefined;\n\n    if (this.children.length === 0) return;\n\n    this._positioningEl = this.children[0];\n\n    if (this.children.length > 1) {\n      console.warn('<pinch-zoom> must not have more than one child.');\n    }\n\n    // Do a bounds check\n    this.setTransform({ allowChangeEvent: true });\n  }\n\n  private _onWheel(event: WheelEvent) {\n    if (!this._positioningEl) return;\n    event.preventDefault();\n\n    const currentRect = this._positioningEl.getBoundingClientRect();\n    let { deltaY } = event;\n    const { ctrlKey, deltaMode } = event;\n\n    if (deltaMode === 1) { // 1 is \"lines\", 0 is \"pixels\"\n      // Firefox uses \"lines\" for some types of mouse\n      deltaY *= 15;\n    }\n\n    // ctrlKey is true when pinch-zooming on a trackpad.\n    const divisor = ctrlKey ? 100 : 300;\n    const scaleDiff = 1 - deltaY / divisor;\n\n    this._applyChange({\n      scaleDiff,\n      originX: event.clientX - currentRect.left,\n      originY: event.clientY - currentRect.top,\n      allowChangeEvent: true,\n    });\n  }\n\n  private _onPointerMove(previousPointers: Pointer[], currentPointers: Pointer[]) {\n    if (!this._positioningEl) return;\n\n    // Combine next points with previous points\n    const currentRect = this._positioningEl.getBoundingClientRect();\n\n    // For calculating panning movement\n    const prevMidpoint = getMidpoint(previousPointers[0], previousPointers[1]);\n    const newMidpoint = getMidpoint(currentPointers[0], currentPointers[1]);\n\n    // Midpoint within the element\n    const originX = prevMidpoint.clientX - currentRect.left;\n    const originY = prevMidpoint.clientY - currentRect.top;\n\n    // Calculate the desired change in scale\n    const prevDistance = getDistance(previousPointers[0], previousPointers[1]);\n    const newDistance = getDistance(currentPointers[0], currentPointers[1]);\n    const scaleDiff = prevDistance ? newDistance / prevDistance : 1;\n\n    this._applyChange({\n      originX, originY, scaleDiff,\n      panX: newMidpoint.clientX - prevMidpoint.clientX,\n      panY: newMidpoint.clientY - prevMidpoint.clientY,\n      allowChangeEvent: true,\n    });\n  }\n\n  /** Transform the view & fire a change event */\n  private _applyChange(opts: ApplyChangeOpts = {}) {\n    const {\n      panX = 0, panY = 0,\n      originX = 0, originY = 0,\n      scaleDiff = 1,\n      allowChangeEvent = false,\n    } = opts;\n\n    const matrix = createMatrix()\n      // Translate according to panning.\n      .translate(panX, panY)\n      // Scale about the origin.\n      .translate(originX, originY)\n      // Apply current translate\n      .translate(this.x, this.y)\n      .scale(scaleDiff)\n      .translate(-originX, -originY)\n      // Apply current scale.\n      .scale(this.scale);\n\n    // Convert the transform into basic translate & scale.\n    this.setTransform({\n      allowChangeEvent,\n      scale: matrix.a,\n      x: matrix.e,\n      y: matrix.f,\n    });\n  }\n}\n\ncustomElements.define('pinch-zoom', PinchZoom);\n","import PointerTracker, { Pointer } from 'pointer-tracker';\nimport * as styles from './styles.css';\n\nconst legacyClipCompatAttr = 'legacy-clip-compat';\nconst orientationAttr = 'orientation';\n\ntype TwoUpOrientation = 'horizontal' | 'vertical';\n\n/**\n * A split view that the user can adjust. The first child becomes\n * the left-hand side, and the second child becomes the right-hand side.\n */\nexport default class TwoUp extends HTMLElement {\n  static get observedAttributes() { return [orientationAttr]; }\n\n  private readonly _handle = document.createElement('div');\n  /**\n   * The position of the split in pixels.\n   */\n  private _position = 0;\n  /**\n   * The position of the split in %.\n   */\n  private _relativePosition = 0.5;\n  /**\n   * The value of _position when the pointer went down.\n   */\n  private _positionOnPointerStart = 0;\n  /**\n   * Has connectedCallback been called yet?\n   */\n  private _everConnected = false;\n\n  constructor () {\n    super();\n    this._handle.className = styles.twoUpHandle;\n\n    // Watch for children changes.\n    // Note this won't fire for initial contents,\n    // so _childrenChange is also called in connectedCallback.\n    new MutationObserver(() => this._childrenChange())\n      .observe(this, { childList: true });\n\n    // Watch for element size changes.\n    if ('ResizeObserver' in window) {\n      new ResizeObserver(() => this._resetPosition())\n        .observe(this);\n    } else {\n      window.addEventListener('resize', () => this._resetPosition());\n    }\n\n    // Watch for pointers on the handle.\n    const pointerTracker: PointerTracker = new PointerTracker(this._handle, {\n      start: (_, event) => {\n        // We only want to track 1 pointer.\n        if (pointerTracker.currentPointers.length === 1) return false;\n        event.preventDefault();\n        this._positionOnPointerStart = this._position;\n        return true;\n      },\n      move: () => {\n        this._pointerChange(\n          pointerTracker.startPointers[0],\n          pointerTracker.currentPointers[0],\n        );\n      },\n    });\n  }\n\n  connectedCallback() {\n    this._childrenChange();\n\n    this._handle.innerHTML = `<div class=\"${styles.scrubber}\">${\n      `<svg viewBox=\"0 0 27 20\" fill=\"currentColor\">${\n        '<path d=\"M17 19.2l9.5-9.6L16.9 0zM9.6 0L0 9.6l9.6 9.6z\"/>'\n      }</svg>`\n    }</div>`;\n\n    if (!this._everConnected) {\n      this._resetPosition();\n      this._everConnected = true;\n    }\n  }\n\n  attributeChangedCallback(name: string) {\n    if (name === orientationAttr) {\n      this._resetPosition();\n    }\n  }\n\n  private _resetPosition() {\n    // Set the initial position of the handle.\n    requestAnimationFrame(() => {\n      const bounds = this.getBoundingClientRect();\n      const dimensionAxis = this.orientation === 'vertical' ? 'height' : 'width';\n      this._position = bounds[dimensionAxis] * this._relativePosition;\n      this._setPosition();\n    });\n  }\n\n  /**\n   * If true, this element works in browsers that don't support clip-path (Edge).\n   * However, this means you'll have to set the height of this element manually.\n   */\n  get legacyClipCompat() {\n    return this.hasAttribute(legacyClipCompatAttr);\n  }\n\n  set legacyClipCompat(val: boolean) {\n    if (val) {\n      this.setAttribute(legacyClipCompatAttr, '');\n    } else {\n      this.removeAttribute(legacyClipCompatAttr);\n    }\n  }\n\n  /**\n   * Split vertically rather than horizontally.\n   */\n  get orientation(): TwoUpOrientation {\n    const value = this.getAttribute(orientationAttr);\n\n    // This mirrors the behaviour of input.type, where setting just sets the attribute, but getting\n    // returns the value only if it's valid.\n    if (value && value.toLowerCase() === 'vertical') return 'vertical';\n    return 'horizontal';\n  }\n\n  set orientation(val: TwoUpOrientation) {\n    this.setAttribute(orientationAttr, val);\n  }\n\n  /**\n   * Called when element's child list changes\n   */\n  private _childrenChange() {\n    // Ensure the handle is the last child.\n    // The CSS depends on this.\n    if (this.lastElementChild !== this._handle) {\n      this.appendChild(this._handle);\n    }\n  }\n\n  /**\n   * Called when a pointer moves.\n   */\n  private _pointerChange(startPoint: Pointer, currentPoint: Pointer) {\n    const pointAxis = this.orientation === 'vertical' ? 'clientY' : 'clientX';\n    const dimensionAxis = this.orientation === 'vertical' ? 'height' : 'width';\n    const bounds = this.getBoundingClientRect();\n\n    this._position = this._positionOnPointerStart +\n      (currentPoint[pointAxis] - startPoint[pointAxis]);\n\n    // Clamp position to element bounds.\n    this._position = Math.max(0, Math.min(this._position, bounds[dimensionAxis]));\n    this._relativePosition = this._position / bounds[dimensionAxis];\n    this._setPosition();\n  }\n\n  private _setPosition() {\n    this.style.setProperty('--split-point', `${this._position}px`);\n  }\n}\n\ncustomElements.define('two-up', TwoUp);\n","import { h } from 'preact';\n\n// tslint:disable:max-line-length variable-name\n\nconst Icon = (props: JSX.HTMLAttributes) => (\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" {...props} />\n);\n\nexport const DownloadIcon = (props: JSX.HTMLAttributes) => (\n  <Icon {...props}>\n    <path d=\"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14a2 2 0 0 0 2-2v-7h-2zm-6 .7l2.6-2.6 1.4 1.4-5 5-5-5 1.4-1.4 2.6 2.6V3h2z\"/>\n  </Icon>\n);\n\nexport const ToggleBackgroundIcon = (props: JSX.HTMLAttributes) => (\n  <Icon {...props}>\n    <path d=\"M3 13h2v-2H3v2zm0 4h2v-2H3v2zm2 4v-2H3c0 1.1.9 2 2 2zM3 9h2V7H3v2zm12 12h2v-2h-2v2zm4-18H9a2 2 0 0 0-2 2v10c0 1.1.9 2 2 2h10a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2zm0 12H9V5h10v10zm-8 6h2v-2h-2v2zm-4 0h2v-2H7v2z\"/>\n  </Icon>\n);\n\nexport const ToggleBackgroundActiveIcon = (props: JSX.HTMLAttributes) => (\n  <Icon {...props}>\n    <path d=\"M9 7H7v2h2V7zm0 4H7v2h2v-2zm0-8a2 2 0 0 0-2 2h2V3zm4 12h-2v2h2v-2zm6-12v2h2a2 2 0 0 0-2-2zm-6 0h-2v2h2V3zM9 17v-2H7c0 1.1.9 2 2 2zm10-4h2v-2h-2v2zm0-4h2V7h-2v2zm0 8a2 2 0 0 0 2-2h-2v2zM5 7H3v12c0 1.1.9 2 2 2h12v-2H5V7zm10-2h2V3h-2v2zm0 12h2v-2h-2v2z\"/>\n  </Icon>\n);\n\nexport const RotateIcon = (props: JSX.HTMLAttributes) => (\n  <Icon {...props}>\n    <path d=\"M15.6 5.5L11 1v3a8 8 0 0 0 0 16v-2a6 6 0 0 1 0-12v4l4.5-4.5zm4.3 5.5a8 8 0 0 0-1.6-3.9L17 8.5c.5.8.9 1.6 1 2.5h2zM13 17.9v2a8 8 0 0 0 3.9-1.6L15.5 17c-.8.5-1.6.9-2.5 1zm3.9-2.4l1.4 1.4A8 8 0 0 0 20 13h-2c-.1.9-.5 1.7-1 2.5z\"/>\n  </Icon>\n);\n\nexport const AddIcon = (props: JSX.HTMLAttributes) => (\n  <Icon {...props}>\n    <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"/>\n  </Icon>\n);\n\nexport const RemoveIcon = (props: JSX.HTMLAttributes) => (\n  <Icon {...props}>\n    <path d=\"M19 13H5v-2h14v2z\"/>\n  </Icon>\n);\n\nexport const UncheckedIcon = (props: JSX.HTMLAttributes) => (\n  <Icon {...props}>\n    <path d=\"M21.3 2.7v18.6H2.7V2.7h18.6m0-2.7H2.7A2.7 2.7 0 0 0 0 2.7v18.6A2.7 2.7 0 0 0 2.7 24h18.6a2.7 2.7 0 0 0 2.7-2.7V2.7A2.7 2.7 0 0 0 21.3 0z\"/>\n  </Icon>\n);\n\nexport const CheckedIcon = (props: JSX.HTMLAttributes) => (\n  <Icon {...props}>\n    <path d=\"M21.3 0H2.7A2.7 2.7 0 0 0 0 2.7v18.6A2.7 2.7 0 0 0 2.7 24h18.6a2.7 2.7 0 0 0 2.7-2.7V2.7A2.7 2.7 0 0 0 21.3 0zm-12 18.7L2.7 12l1.8-1.9L9.3 15 19.5 4.8l1.8 1.9z\"/>\n  </Icon>\n);\n\nexport const ExpandIcon = (props: JSX.HTMLAttributes) => (\n  <Icon {...props}>\n    <path d=\"M16.6 8.6L12 13.2 7.4 8.6 6 10l6 6 6-6z\"/>\n  </Icon>\n);\n\nexport const BackIcon = (props: JSX.HTMLAttributes) => (\n  <Icon {...props}>\n    <path d=\"M20 11H7.8l5.6-5.6L12 4l-8 8 8 8 1.4-1.4L7.8 13H20v-2z\"/>\n  </Icon>\n);\n\nconst copyAcrossRotations = {\n  up: 90, right: 180, down: -90, left: 0,\n};\n\nexport interface CopyAcrossIconProps extends JSX.HTMLAttributes {\n  copyDirection: keyof typeof copyAcrossRotations;\n}\n\nexport const CopyAcrossIcon = (props: CopyAcrossIconProps) => {\n  const { copyDirection, ...otherProps } = props;\n  const id = 'point-' + copyDirection;\n  const rotation = copyAcrossRotations[copyDirection];\n\n  return (\n    <Icon {...otherProps}>\n      <defs>\n        <clipPath id={id}>\n          <path d=\"M-12-12v24h24v-24zM4.5 2h-4v3l-5-5 5-5v3h4z\" transform={`translate(12 13) rotate(${rotation})`}/>\n        </clipPath>\n      </defs>\n      <path clip-path={`url(#${id})`} d=\"M19 3h-4.2c-.4-1.2-1.5-2-2.8-2s-2.4.8-2.8 2H5a2 2 0 0 0-2 2v14c0 1.1.9 2 2 2h14a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2zm-7 0a1 1 0 0 1 0 2c-.6 0-1-.4-1-1s.4-1 1-1z\"/>\n    </Icon>\n  );\n};\n","function cleanSetOrMerge<A extends any[] | object>(\n  source: A,\n  keys: string | number | string[],\n  toSetOrMerge: any[] | object,\n  merge: boolean,\n): A {\n  const splitKeys = Array.isArray(keys) ? keys : ('' + keys).split('.');\n\n  // Going off road in terms of types, otherwise TypeScript doesn't like the access-by-index.\n  // The assumptions in this code break if the object contains things which aren't arrays or\n  // plain objects.\n  let last = copy(source) as any;\n  const newObject = last;\n\n  const lastIndex = splitKeys.length - 1;\n\n  for (const [i, key] of splitKeys.entries()) {\n    if (i !== lastIndex) {\n      // Copy everything along the path.\n      last = last[key] = copy(last[key]);\n    } else {\n      // Merge or set.\n      last[key] = merge ?\n        Object.assign(copy(last[key]), toSetOrMerge) :\n        toSetOrMerge;\n    }\n  }\n\n  return newObject;\n}\n\nfunction copy<A extends any[] | object>(source: A): A {\n  // Some type cheating here, as TypeScript can't infer between generic types.\n  if (Array.isArray(source)) return [...source] as any;\n  return { ...(source as any) };\n}\n\n/**\n * @param source Object to copy from.\n * @param keys Path to modify, eg \"foo.bar.baz\".\n * @param toMerge A value to merge into the value at the path.\n */\nexport function cleanMerge<A extends any[] | object>(\n  source: A,\n  keys: string | number | string[],\n  toMerge: any[] | object,\n): A {\n  return cleanSetOrMerge(source, keys, toMerge, true);\n}\n\n/**\n * @param source Object to copy from.\n * @param keys Path to modify, eg \"foo.bar.baz\".\n * @param newValue A value to set at the path.\n */\nexport function cleanSet<A extends any[] | object>(\n  source: A,\n  keys: string | number | string[],\n  newValue: any,\n): A {\n  return cleanSetOrMerge(source, keys, newValue, false);\n}\n","import { h, Component } from 'preact';\nimport PinchZoom, { ScaleToOpts } from './custom-els/PinchZoom';\nimport './custom-els/PinchZoom';\nimport './custom-els/TwoUp';\nimport * as style from './style.scss';\nimport { bind, linkRef } from '../../lib/initial-util';\nimport { shallowEqual, drawDataToCanvas } from '../../lib/util';\nimport {\n    ToggleBackgroundIcon,\n    AddIcon,\n    RemoveIcon,\n    BackIcon,\n    ToggleBackgroundActiveIcon,\n    RotateIcon,\n} from '../../lib/icons';\nimport { twoUpHandle } from './custom-els/TwoUp/styles.css';\nimport { InputProcessorState } from '../../codecs/input-processors';\nimport { cleanSet } from '../../lib/clean-modify';\nimport { SourceImage } from '../compress';\n\ninterface Props {\n  source?: SourceImage;\n  inputProcessorState?: InputProcessorState;\n  mobileView: boolean;\n  leftCompressed?: ImageData;\n  rightCompressed?: ImageData;\n  leftImgContain: boolean;\n  rightImgContain: boolean;\n  onBack: () => void;\n  onInputProcessorChange: (newState: InputProcessorState) => void;\n}\n\ninterface State {\n  scale: number;\n  editingScale: boolean;\n  altBackground: boolean;\n}\n\nconst scaleToOpts: ScaleToOpts = {\n  originX: '50%',\n  originY: '50%',\n  relativeTo: 'container',\n  allowChangeEvent: true,\n};\n\nexport default class Output extends Component<Props, State> {\n  state: State = {\n    scale: 1,\n    editingScale: false,\n    altBackground: false,\n  };\n  canvasLeft?: HTMLCanvasElement;\n  canvasRight?: HTMLCanvasElement;\n  pinchZoomLeft?: PinchZoom;\n  pinchZoomRight?: PinchZoom;\n  scaleInput?: HTMLInputElement;\n  retargetedEvents = new WeakSet<Event>();\n\n  componentDidMount() {\n    const leftDraw = this.leftDrawable();\n    const rightDraw = this.rightDrawable();\n\n    // Reset the pinch zoom, which may have an position set from the previous view, after pressing\n    // the back button.\n    this.pinchZoomLeft!.setTransform({\n      allowChangeEvent: true,\n      x: 0,\n      y: 0,\n      scale: 1,\n    });\n\n    if (this.canvasLeft && leftDraw) {\n      drawDataToCanvas(this.canvasLeft, leftDraw);\n    }\n    if (this.canvasRight && rightDraw) {\n      drawDataToCanvas(this.canvasRight, rightDraw);\n    }\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    const prevLeftDraw = this.leftDrawable(prevProps);\n    const prevRightDraw = this.rightDrawable(prevProps);\n    const leftDraw = this.leftDrawable();\n    const rightDraw = this.rightDrawable();\n    const sourceFileChanged =\n      // Has the value become (un)defined?\n      (!!this.props.source !== !!prevProps.source) ||\n      // Or has the file changed?\n      (this.props.source && prevProps.source && this.props.source.file !== prevProps.source.file);\n\n    const oldSourceData = prevProps.source && prevProps.source.processed;\n    const newSourceData = this.props.source && this.props.source.processed;\n    const pinchZoom = this.pinchZoomLeft!;\n\n    if (sourceFileChanged) {\n      // New image? Reset the pinch-zoom.\n      pinchZoom.setTransform({\n        allowChangeEvent: true,\n        x: 0,\n        y: 0,\n        scale: 1,\n      });\n    } else if (oldSourceData && newSourceData && oldSourceData !== newSourceData) {\n      // Since the pinch zoom transform origin is the top-left of the content, we need to flip\n      // things around a bit when the content size changes, so the new content appears as if it were\n      // central to the previous content.\n      const scaleChange = 1 - pinchZoom.scale;\n      const oldXScaleOffset = oldSourceData.width / 2 * scaleChange;\n      const oldYScaleOffset = oldSourceData.height / 2 * scaleChange;\n\n      pinchZoom.setTransform({\n        allowChangeEvent: true,\n        x: pinchZoom.x - oldXScaleOffset + oldYScaleOffset,\n        y: pinchZoom.y - oldYScaleOffset + oldXScaleOffset,\n      });\n    }\n\n    if (leftDraw && leftDraw !== prevLeftDraw && this.canvasLeft) {\n      drawDataToCanvas(this.canvasLeft, leftDraw);\n    }\n    if (rightDraw && rightDraw !== prevRightDraw && this.canvasRight) {\n      drawDataToCanvas(this.canvasRight, rightDraw);\n    }\n  }\n\n  shouldComponentUpdate(nextProps: Props, nextState: State) {\n    return !shallowEqual(this.props, nextProps) || !shallowEqual(this.state, nextState);\n  }\n\n  private leftDrawable(props: Props = this.props): ImageData | undefined {\n    return props.leftCompressed || (props.source && props.source.processed);\n  }\n\n  private rightDrawable(props: Props = this.props): ImageData | undefined {\n    return props.rightCompressed || (props.source && props.source.processed);\n  }\n\n  @bind\n  private toggleBackground() {\n    this.setState({\n      altBackground: !this.state.altBackground,\n    });\n  }\n\n  @bind\n  private zoomIn() {\n    if (!this.pinchZoomLeft) throw Error('Missing pinch-zoom element');\n\n    this.pinchZoomLeft.scaleTo(this.state.scale * 1.25, scaleToOpts);\n  }\n\n  @bind\n  private zoomOut() {\n    if (!this.pinchZoomLeft) throw Error('Missing pinch-zoom element');\n\n    this.pinchZoomLeft.scaleTo(this.state.scale / 1.25, scaleToOpts);\n  }\n\n  @bind\n  private onRotateClick() {\n    const { inputProcessorState } = this.props;\n    if (!inputProcessorState) return;\n\n    const newState = cleanSet(\n      inputProcessorState,\n      'rotate.rotate',\n      (inputProcessorState.rotate.rotate + 90) % 360,\n    );\n\n    this.props.onInputProcessorChange(newState);\n  }\n\n  @bind\n  private onScaleValueFocus() {\n    this.setState({ editingScale: true }, () => {\n      if (this.scaleInput) {\n        // Firefox unfocuses the input straight away unless I force a style calculation here. I have\n        // no idea why, but it's late and I'm quite tired.\n        getComputedStyle(this.scaleInput).transform;\n        this.scaleInput.focus();\n      }\n    });\n  }\n\n  @bind\n  private onScaleInputBlur() {\n    this.setState({ editingScale: false });\n  }\n\n  @bind\n  private onScaleInputChanged(event: Event) {\n    const target = event.target as HTMLInputElement;\n    const percent = parseFloat(target.value);\n    if (isNaN(percent)) return;\n    if (!this.pinchZoomLeft) throw Error('Missing pinch-zoom element');\n\n    this.pinchZoomLeft.scaleTo(percent / 100, scaleToOpts);\n  }\n\n  @bind\n  private onPinchZoomLeftChange(event: Event) {\n    if (!this.pinchZoomRight || !this.pinchZoomLeft) throw Error('Missing pinch-zoom element');\n    this.setState({\n      scale: this.pinchZoomLeft.scale,\n    });\n    this.pinchZoomRight.setTransform({\n      scale: this.pinchZoomLeft.scale,\n      x: this.pinchZoomLeft.x,\n      y: this.pinchZoomLeft.y,\n    });\n  }\n\n  /**\n   * We're using two pinch zoom elements, but we want them to stay in sync. When one moves, we\n   * update the position of the other. However, this is tricky when it comes to multi-touch, when\n   * one finger is on one pinch-zoom, and the other finger is on the other. To overcome this, we\n   * redirect all relevant pointer/touch/mouse events to the first pinch zoom element.\n   *\n   * @param event Event to redirect\n   */\n  @bind\n  private onRetargetableEvent(event: Event) {\n    const targetEl = event.target as HTMLElement;\n    if (!this.pinchZoomLeft) throw Error('Missing pinch-zoom element');\n    // If the event is on the handle of the two-up, let it through,\n    // unless it's a wheel event, in which case always let it through.\n    if (event.type !== 'wheel' && targetEl.closest(`.${twoUpHandle}`)) return;\n    // If we've already retargeted this event, let it through.\n    if (this.retargetedEvents.has(event)) return;\n    // Stop the event in its tracks.\n    event.stopImmediatePropagation();\n    event.preventDefault();\n    // Clone the event & dispatch\n    // Some TypeScript trickery needed due to https://github.com/Microsoft/TypeScript/issues/3841\n    const clonedEvent = new (event.constructor as typeof Event)(event.type, event);\n    this.retargetedEvents.add(clonedEvent);\n    this.pinchZoomLeft.dispatchEvent(clonedEvent);\n\n    // Unfocus any active element on touchend. This fixes an issue on (at least) Android Chrome,\n    // where the software keyboard is hidden, but the input remains focused, then after interaction\n    // with this element the keyboard reappears for NO GOOD REASON. Thanks Android.\n    if (\n      event.type === 'touchend' &&\n      document.activeElement &&\n      document.activeElement instanceof HTMLElement\n    ) {\n      document.activeElement.blur();\n    }\n  }\n\n  render(\n    { mobileView, leftImgContain, rightImgContain, source, onBack }: Props,\n    { scale, editingScale, altBackground }: State,\n  ) {\n    const leftDraw = this.leftDrawable();\n    const rightDraw = this.rightDrawable();\n    // To keep position stable, the output is put in a square using the longest dimension.\n    const originalImage = source && source.processed;\n\n    return (\n      <div class={`${style.output} ${altBackground ? style.altBackground : ''}`}>\n        <two-up\n          legacy-clip-compat\n          class={style.twoUp}\n          orientation={mobileView ? 'vertical' : 'horizontal'}\n          // Event redirecting. See onRetargetableEvent.\n          onTouchStartCapture={this.onRetargetableEvent}\n          onTouchEndCapture={this.onRetargetableEvent}\n          onTouchMoveCapture={this.onRetargetableEvent}\n          onPointerDownCapture={this.onRetargetableEvent}\n          onMouseDownCapture={this.onRetargetableEvent}\n          onWheelCapture={this.onRetargetableEvent}\n        >\n          <pinch-zoom\n            class={style.pinchZoom}\n            onChange={this.onPinchZoomLeftChange}\n            ref={linkRef(this, 'pinchZoomLeft')}\n          >\n            <canvas\n              class={style.pinchTarget}\n              ref={linkRef(this, 'canvasLeft')}\n              width={leftDraw && leftDraw.width}\n              height={leftDraw && leftDraw.height}\n              style={{\n                width: originalImage && originalImage.width,\n                height: originalImage && originalImage.height,\n                objectFit: leftImgContain ? 'contain' : '',\n              }}\n            />\n          </pinch-zoom>\n          <pinch-zoom class={style.pinchZoom} ref={linkRef(this, 'pinchZoomRight')}>\n            <canvas\n              class={style.pinchTarget}\n              ref={linkRef(this, 'canvasRight')}\n              width={rightDraw && rightDraw.width}\n              height={rightDraw && rightDraw.height}\n              style={{\n                width: originalImage && originalImage.width,\n                height: originalImage && originalImage.height,\n                objectFit: rightImgContain ? 'contain' : '',\n              }}\n            />\n          </pinch-zoom>\n        </two-up>\n\n        <div class={style.back}>\n          <button class={style.button} onClick={onBack}>\n            <BackIcon />\n          </button>\n        </div>\n\n        <div class={style.controls}>\n          <div class={style.zoomControls}>\n            <button class={style.button} onClick={this.zoomOut}>\n              <RemoveIcon />\n            </button>\n            {editingScale ? (\n              <input\n                type=\"number\"\n                step=\"1\"\n                min=\"1\"\n                max=\"1000000\"\n                ref={linkRef(this, 'scaleInput')}\n                class={style.zoom}\n                value={Math.round(scale * 100)}\n                onInput={this.onScaleInputChanged}\n                onBlur={this.onScaleInputBlur}\n              />\n            ) : (\n              <span class={style.zoom} tabIndex={0} onFocus={this.onScaleValueFocus}>\n                <span class={style.zoomValue}>{Math.round(scale * 100)}</span>\n                %\n              </span>\n            )}\n            <button class={style.button} onClick={this.zoomIn}>\n              <AddIcon />\n            </button>\n          </div>\n          <div class={style.buttonsNoWrap}>\n            <button class={style.button} onClick={this.onRotateClick} title=\"Rotate image\">\n              <RotateIcon />\n            </button>\n            <button\n              class={`${style.button} ${altBackground ? style.active : ''}`}\n              onClick={this.toggleBackground}\n              title=\"Change canvas color\"\n            >\n              {altBackground\n                ? <ToggleBackgroundActiveIcon />\n                : <ToggleBackgroundIcon />\n              }\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import PointerTracker from 'pointer-tracker';\nimport { bind } from '../../lib/initial-util';\nimport * as style from './styles.css';\n\nconst RETARGETED_EVENTS = ['focus', 'blur'];\nconst UPDATE_EVENTS = ['input', 'change'];\nconst REFLECTED_PROPERTIES = ['name', 'min', 'max', 'step', 'value', 'disabled'];\nconst REFLECTED_ATTRIBUTES = ['name', 'min', 'max', 'step', 'value', 'disabled'];\n\nfunction getPrescision(value: string): number {\n  const afterDecimal = value.split('.')[1];\n  return afterDecimal ? afterDecimal.length : 0;\n}\n\nclass RangeInputElement extends HTMLElement {\n  private _input: HTMLInputElement;\n  private _valueDisplay?: HTMLDivElement;\n  private _ignoreChange = false;\n\n  static get observedAttributes() {\n    return REFLECTED_ATTRIBUTES;\n  }\n\n  constructor() {\n    super();\n    this._input = document.createElement('input');\n    this._input.type = 'range';\n    this._input.className = style.input;\n\n    const tracker = new PointerTracker(this._input, {\n      start: (): boolean => {\n        if (tracker.currentPointers.length !== 0) return false;\n        this._input.classList.add(style.touchActive);\n        return true;\n      },\n      end: () => {\n        this._input.classList.remove(style.touchActive);\n      },\n    });\n\n    for (const event of RETARGETED_EVENTS) {\n      this._input.addEventListener(event, this._retargetEvent, true);\n    }\n\n    for (const event of UPDATE_EVENTS) {\n      this._input.addEventListener(event, this._update, true);\n    }\n  }\n\n  connectedCallback() {\n    if (this.contains(this._input)) return;\n    this.innerHTML =\n      `<div class=\"${style.thumbWrapper}\">` +\n        `<div class=\"${style.thumb}\"></div>` +\n        `<div class=\"${style.valueDisplay}\"></div>` +\n      '</div>';\n\n    this.insertBefore(this._input, this.firstChild);\n    this._valueDisplay = this.querySelector('.' + style.valueDisplay) as HTMLDivElement;\n    // Set inline styles (this is useful when used with frameworks which might clear inline styles)\n    this._update();\n  }\n\n  get labelPrecision(): string {\n    return this.getAttribute('label-precision') || '';\n  }\n\n  set labelPrecision(precision: string) {\n    this.setAttribute('label-precision', precision);\n  }\n\n  attributeChangedCallback(name: string, oldValue: string, newValue: string | null) {\n    if (this._ignoreChange) return;\n    if (newValue === null) {\n      this._input.removeAttribute(name);\n    } else {\n      this._input.setAttribute(name, newValue);\n    }\n    this._reflectAttributes();\n    this._update();\n  }\n\n  @bind\n  private _retargetEvent(event: Event) {\n    event.stopImmediatePropagation();\n    const retargetted = new Event(event.type, event);\n    this.dispatchEvent(retargetted);\n  }\n\n  @bind\n  private _update() {\n    const value = Number(this.value) || 0;\n    const min = Number(this.min) || 0;\n    const max = Number(this.max) || 100;\n    const labelPrecision = Number(this.labelPrecision) || getPrescision(this.step) || 0;\n    const percent = 100 * (value - min) / (max - min);\n    const displayValue = labelPrecision ? value.toFixed(labelPrecision) :\n      Math.round(value).toString();\n\n    this._valueDisplay!.textContent = displayValue;\n    this.style.setProperty('--value-percent', percent + '%');\n    this.style.setProperty('--value-width', '' + displayValue.length);\n  }\n\n  private _reflectAttributes() {\n    this._ignoreChange = true;\n    for (const attributeName of REFLECTED_ATTRIBUTES) {\n      if (this._input.hasAttribute(attributeName)) {\n        this.setAttribute(attributeName, this._input.getAttribute(attributeName)!);\n      } else {\n        this.removeAttribute(attributeName);\n      }\n    }\n    this._ignoreChange = false;\n  }\n}\n\ninterface RangeInputElement {\n  name: string;\n  min: string;\n  max: string;\n  step: string;\n  value: string;\n  disabled: boolean;\n}\n\nfor (const prop of REFLECTED_PROPERTIES) {\n  Object.defineProperty(RangeInputElement.prototype, prop, {\n    get() {\n      return this._input[prop];\n    },\n    set(val) {\n      this._input[prop] = val;\n      this._reflectAttributes();\n      this._update();\n    },\n  });\n}\n\nexport default RangeInputElement;\n\ncustomElements.define('range-input', RangeInputElement);\n","export enum MozJpegColorSpace {\n  GRAYSCALE = 1,\n  RGB,\n  YCbCr,\n}\n\nexport interface EncodeOptions {\n  quality: number;\n  baseline: boolean;\n  arithmetic: boolean;\n  progressive: boolean;\n  optimize_coding: boolean;\n  smoothing: number;\n  color_space: MozJpegColorSpace;\n  quant_table: number;\n  trellis_multipass: boolean;\n  trellis_opt_zero: boolean;\n  trellis_opt_table: boolean;\n  trellis_loops: number;\n  auto_subsample: boolean;\n  chroma_subsample: number;\n  separate_chroma_quality: boolean;\n  chroma_quality: number;\n}\n\nexport interface EncoderState { type: typeof type; options: EncodeOptions; }\n\nexport const type = 'mozjpeg';\nexport const label = 'MozJPEG';\nexport const mimeType = 'image/jpeg';\nexport const extension = 'jpg';\nexport const defaultOptions: EncodeOptions = {\n  quality: 75,\n  baseline: false,\n  arithmetic: false,\n  progressive: true,\n  optimize_coding: true,\n  smoothing: 0,\n  color_space: MozJpegColorSpace.YCbCr,\n  quant_table: 3,\n  trellis_multipass: false,\n  trellis_opt_zero: false,\n  trellis_opt_table: false,\n  trellis_loops: 1,\n  auto_subsample: true,\n  chroma_subsample: 2,\n  separate_chroma_quality: false,\n  chroma_quality: 75,\n};\n","import { h, Component } from 'preact';\nimport * as style from './style.scss';\nimport RangeInputElement from '../../custom-els/RangeInput';\nimport '../../custom-els/RangeInput';\nimport { linkRef, bind } from '../../lib/initial-util';\n\ninterface Props extends JSX.HTMLAttributes {}\ninterface State {}\n\nexport default class Range extends Component<Props, State> {\n  rangeWc?: RangeInputElement;\n\n  @bind\n  private onTextInput(event: Event) {\n    const input = event.target as HTMLInputElement;\n    const value = input.value.trim();\n    if (!value) return;\n    this.rangeWc!.value = input.value;\n    const { onInput } = this.props;\n    if (onInput) onInput(event);\n  }\n\n  render(props: Props) {\n    const {\n      children,\n      ...otherProps\n    } = props;\n\n    const {\n      value, min, max, step,\n    } = props;\n\n    return (\n      <label class={style.range}>\n        <span class={style.labelText}>{children}</span>\n        {/* On interaction, Safari gives focus to the first element in the label, so the\n        <range-input> is deliberately first. */}\n        <div class={style.rangeWcContainer}>\n          <range-input\n            ref={linkRef(this, 'rangeWc')}\n            class={style.rangeWc}\n            {...otherProps}\n          />\n        </div>\n        <input\n          type=\"number\"\n          class={style.textInput}\n          value={value}\n          min={min}\n          max={max}\n          step={step}\n          onInput={this.onTextInput}\n        />\n      </label>\n    );\n  }\n}\n","import { h, Component } from 'preact';\nimport { bind } from '../../lib/initial-util';\nimport { inputFieldValueAsNumber, preventDefault } from '../../lib/util';\nimport { EncodeOptions } from './encoder-meta';\nimport Range from '../../components/range';\nimport * as style from '../../components/Options/style.scss';\n\ntype Props = {\n  options: EncodeOptions;\n  onChange(newOptions: EncodeOptions): void;\n};\n\nexport default class OxiPNGEncoderOptions extends Component<Props, {}> {\n  @bind\n  onChange(event: Event) {\n    const form = (event.currentTarget as HTMLInputElement).closest('form') as HTMLFormElement;\n\n    const options: EncodeOptions = {\n      level: inputFieldValueAsNumber(form.level),\n    };\n    this.props.onChange(options);\n  }\n\n  render({ options }: Props) {\n    return (\n      <form class={style.optionsSection} onSubmit={preventDefault}>\n        <div class={style.optionOneCell}>\n          <Range\n            name=\"level\"\n            min=\"0\"\n            max=\"3\"\n            step=\"1\"\n            value={options.level}\n            onInput={this.onChange}\n          >\n            Effort:\n          </Range>\n        </div>\n      </form>\n    );\n  }\n}\n","import { h, Component } from 'preact';\nimport * as style from './style.scss';\nimport { UncheckedIcon, CheckedIcon } from '../../lib/icons';\n\ninterface Props extends JSX.HTMLAttributes {}\ninterface State {}\n\nexport default class Checkbox extends Component<Props, State> {\n  render(props: Props) {\n    return (\n      <div class={style.checkbox}>\n        {props.checked\n          ? <CheckedIcon class={`${style.icon} ${style.checked}`} />\n          : <UncheckedIcon class={style.icon} />\n        }\n        <input class={style.realCheckbox} type=\"checkbox\" {...props}/>\n      </div>\n    );\n  }\n}\n","import { h, Component, ComponentChild, ComponentChildren } from 'preact';\nimport * as style from './style.scss';\nimport { transitionHeight } from '../../lib/util';\n\ninterface Props {\n  children: ComponentChildren;\n}\ninterface State {\n  outgoingChildren: ComponentChild[];\n}\n\nexport default class Expander extends Component<Props, State> {\n  state: State = {\n    outgoingChildren: [],\n  };\n  private lastElHeight: number = 0;\n\n  componentWillReceiveProps(nextProps: Props) {\n    const children = this.props.children as ComponentChild[];\n    const nextChildren = nextProps.children as ComponentChild[];\n\n    if (!nextChildren[0] && children[0]) {\n      // Cache the current children for the shrink animation.\n      this.setState({ outgoingChildren: children });\n    }\n  }\n\n  componentWillUpdate(nextProps: Props) {\n    const children = this.props.children as ComponentChild[];\n    const nextChildren = nextProps.children as ComponentChild[];\n\n    // Only interested if going from empty to not-empty, or not-empty to empty.\n    if ((children[0] && nextChildren[0]) || (!children[0] && !nextChildren[0])) return;\n    this.lastElHeight = this.base!.getBoundingClientRect().height;\n  }\n\n  async componentDidUpdate(previousProps: Props) {\n    const children = this.props.children as ComponentChild[];\n    const previousChildren = previousProps.children as ComponentChild[];\n\n    // Only interested if going from empty to not-empty, or not-empty to empty.\n    if ((children[0] && previousChildren[0]) || (!children[0] && !previousChildren[0])) return;\n\n    // What height do we need to transition to?\n    this.base!.style.height = '';\n    this.base!.style.overflow = 'hidden';\n    const newHeight = children[0] ? this.base!.getBoundingClientRect().height : 0;\n\n    await transitionHeight(this.base!, {\n      duration: 300,\n      from: this.lastElHeight,\n      to: newHeight,\n    });\n\n    // Unset the height & overflow, so element changes do the right thing.\n    this.base!.style.height = '';\n    this.base!.style.overflow = '';\n    if (this.state.outgoingChildren[0]) this.setState({ outgoingChildren: [] });\n  }\n\n  render(props: Props, { outgoingChildren }: State) {\n    const children = props.children as ComponentChild[];\n    const childrenExiting = !children[0] && outgoingChildren[0];\n\n    return (\n      <div class={childrenExiting ? style.childrenExiting : ''}>\n        {children[0] ? children : outgoingChildren}\n      </div>\n    );\n  }\n}\n","import { h, Component } from 'preact';\nimport * as style from './style.scss';\n\ninterface Props extends JSX.HTMLAttributes {\n  large?: boolean;\n}\ninterface State {}\n\nexport default class Select extends Component<Props, State> {\n  render(props: Props) {\n    const { large, ...otherProps } = props;\n\n    return (\n      <div class={style.select}>\n        <select class={`${style.builtinSelect} ${large ? style.large : ''}`} {...otherProps} />\n        <svg class={style.arrow} viewBox=\"0 0 10 5\"><path d=\"M0 0l5 5 5-5z\" /></svg>\n      </div>\n    );\n  }\n}\n","function dlv(obj, key, def, p) {\n\tp = 0;\n\tkey = key.split ? key.split('.') : key;\n\twhile (obj && p<key.length) { obj = obj[key[p++]]; }\n\treturn obj===undefined ? def : obj;\n}\n\n/** Create an Event handler function that sets a given state property.\n *\t@param {Component} component\tThe component whose state should be updated\n *\t@param {string} key\t\t\t\tA dot-notated key path to update in the component's state\n *\t@param {string} eventPath\t\tA dot-notated key path to the value that should be retrieved from the Event or component\n *\t@returns {function} linkedStateHandler\n */\nfunction linkState(component, key, eventPath) {\n\tvar path = key.split('.'),\n\t\tcache = component.__lsc || (component.__lsc = {});\n\n\treturn cache[key+eventPath] || (cache[key+eventPath] = function(e) {\n\t\tvar t = e && e.target || this,\n\t\t\tstate = {},\n\t\t\tobj = state,\n\t\t\tv = typeof eventPath==='string' ? dlv(e, eventPath) : t.nodeName ? (t.type.match(/^che|rad/) ? t.checked : t.value) : e,\n\t\t\ti = 0;\n\t\tfor ( ; i<path.length-1; i++) {\n\t\t\tobj = obj[path[i]] || (obj[path[i]] = !i && component.state[path[i]] || {});\n\t\t}\n\t\tobj[path[i]] = v;\n\t\tcomponent.setState(state);\n\t});\n}\n\nexport default linkState;\n//# sourceMappingURL=linkstate.es.js.map\n","import { h, Component } from 'preact';\nimport { bind } from '../../lib/initial-util';\nimport { inputFieldChecked, inputFieldValueAsNumber, preventDefault } from '../../lib/util';\nimport { EncodeOptions, MozJpegColorSpace } from './encoder-meta';\nimport * as style from '../../components/Options/style.scss';\nimport Checkbox from '../../components/checkbox';\nimport Expander from '../../components/expander';\nimport Select from '../../components/select';\nimport Range from '../../components/range';\nimport linkState from 'linkstate';\n\ninterface Props {\n  options: EncodeOptions;\n  onChange(newOptions: EncodeOptions): void;\n}\n\ninterface State {\n  showAdvanced: boolean;\n}\n\nexport default class MozJPEGEncoderOptions extends Component<Props, State> {\n  state: State = {\n    showAdvanced: false,\n  };\n\n  @bind\n  onChange(event: Event) {\n    const form = (event.currentTarget as HTMLInputElement).closest('form') as HTMLFormElement;\n    const { options } = this.props;\n\n    const newOptions: EncodeOptions = {\n      // Copy over options the form doesn't currently care about, eg arithmetic\n      ...this.props.options,\n      // And now stuff from the form:\n      // .checked\n      baseline: inputFieldChecked(form.baseline, options.baseline),\n      progressive: inputFieldChecked(form.progressive, options.progressive),\n      optimize_coding: inputFieldChecked(form.optimize_coding, options.optimize_coding),\n      trellis_multipass: inputFieldChecked(form.trellis_multipass, options.trellis_multipass),\n      trellis_opt_zero: inputFieldChecked(form.trellis_opt_zero, options.trellis_opt_zero),\n      trellis_opt_table: inputFieldChecked(form.trellis_opt_table, options.trellis_opt_table),\n      auto_subsample: inputFieldChecked(form.auto_subsample, options.auto_subsample),\n      separate_chroma_quality:\n        inputFieldChecked(form.separate_chroma_quality, options.separate_chroma_quality),\n      // .value\n      quality: inputFieldValueAsNumber(form.quality, options.quality),\n      chroma_quality: inputFieldValueAsNumber(form.chroma_quality, options.chroma_quality),\n      chroma_subsample: inputFieldValueAsNumber(form.chroma_subsample, options.chroma_subsample),\n      smoothing: inputFieldValueAsNumber(form.smoothing, options.smoothing),\n      color_space: inputFieldValueAsNumber(form.color_space, options.color_space),\n      quant_table: inputFieldValueAsNumber(form.quant_table, options.quant_table),\n      trellis_loops: inputFieldValueAsNumber(form.trellis_loops, options.trellis_loops),\n    };\n    this.props.onChange(newOptions);\n  }\n\n  render({ options }: Props, { showAdvanced }: State) {\n    // I'm rendering both lossy and lossless forms, as it becomes much easier when\n    // gathering the data.\n    return (\n      <form class={style.optionsSection} onSubmit={preventDefault}>\n        <div class={style.optionOneCell}>\n          <Range\n            name=\"quality\"\n            min=\"0\"\n            max=\"100\"\n            value={options.quality}\n            onInput={this.onChange}\n          >\n            Quality:\n          </Range>\n        </div>\n        <label class={style.optionInputFirst}>\n          <Checkbox\n            checked={showAdvanced}\n            onChange={linkState(this, 'showAdvanced')}\n          />\n          Show advanced settings\n        </label>\n        <Expander>\n          {showAdvanced ?\n            <div>\n              <label class={style.optionTextFirst}>\n                Channels:\n                <Select\n                  name=\"color_space\"\n                  value={options.color_space}\n                  onChange={this.onChange}\n                >\n                  <option value={MozJpegColorSpace.GRAYSCALE}>Grayscale</option>\n                  <option value={MozJpegColorSpace.RGB}>RGB</option>\n                  <option value={MozJpegColorSpace.YCbCr}>YCbCr</option>\n                </Select>\n              </label>\n              <Expander>\n                {options.color_space === MozJpegColorSpace.YCbCr ?\n                  <div>\n                    <label class={style.optionInputFirst}>\n                      <Checkbox\n                        name=\"auto_subsample\"\n                        checked={options.auto_subsample}\n                        onChange={this.onChange}\n                      />\n                      Auto subsample chroma\n                    </label>\n                    <Expander>\n                      {options.auto_subsample ? null :\n                        <div class={style.optionOneCell}>\n                          <Range\n                            name=\"chroma_subsample\"\n                            min=\"1\"\n                            max=\"4\"\n                            value={options.chroma_subsample}\n                            onInput={this.onChange}\n                          >\n                            Subsample chroma by:\n                          </Range>\n                        </div>\n                      }\n                    </Expander>\n                    <label class={style.optionInputFirst}>\n                      <Checkbox\n                        name=\"separate_chroma_quality\"\n                        checked={options.separate_chroma_quality}\n                        onChange={this.onChange}\n                      />\n                      Separate chroma quality\n                    </label>\n                    <Expander>\n                      {options.separate_chroma_quality ?\n                        <div class={style.optionOneCell}>\n                          <Range\n                            name=\"chroma_quality\"\n                            min=\"0\"\n                            max=\"100\"\n                            value={options.chroma_quality}\n                            onInput={this.onChange}\n                          >\n                            Chroma quality:\n                          </Range>\n                        </div>\n                        : null\n                      }\n                    </Expander>\n                  </div>\n                  : null\n                }\n              </Expander>\n              <label class={style.optionInputFirst}>\n                <Checkbox\n                  name=\"baseline\"\n                  checked={options.baseline}\n                  onChange={this.onChange}\n                />\n                Pointless spec compliance\n              </label>\n              <Expander>\n                {options.baseline ? null :\n                  <label class={style.optionInputFirst}>\n                    <Checkbox\n                      name=\"progressive\"\n                      checked={options.progressive}\n                      onChange={this.onChange}\n                    />\n                    Progressive rendering\n                  </label>\n                }\n              </Expander>\n              <Expander>\n                {options.baseline ?\n                  <label class={style.optionInputFirst}>\n                    <Checkbox\n                      name=\"optimize_coding\"\n                      checked={options.optimize_coding}\n                      onChange={this.onChange}\n                    />\n                    Optimize Huffman table\n                  </label>\n                  : null\n                }\n              </Expander>\n              <div class={style.optionOneCell}>\n                <Range\n                  name=\"smoothing\"\n                  min=\"0\"\n                  max=\"100\"\n                  value={options.smoothing}\n                  onInput={this.onChange}\n                >\n                  Smoothing:\n                </Range>\n              </div>\n              <label class={style.optionTextFirst}>\n                Quantization:\n                <Select\n                  name=\"quant_table\"\n                  value={options.quant_table}\n                  onChange={this.onChange}\n                >\n                  <option value=\"0\">JPEG Annex K</option>\n                  <option value=\"1\">Flat</option>\n                  <option value=\"2\">MSSIM-tuned Kodak</option>\n                  <option value=\"3\">ImageMagick</option>\n                  <option value=\"4\">PSNR-HVS-M-tuned Kodak</option>\n                  <option value=\"5\">Klein et al</option>\n                  <option value=\"6\">Watson et al</option>\n                  <option value=\"7\">Ahumada et al</option>\n                  <option value=\"8\">Peterson et al</option>\n                </Select>\n              </label>\n              <label class={style.optionInputFirst}>\n                <Checkbox\n                  name=\"trellis_multipass\"\n                  checked={options.trellis_multipass}\n                  onChange={this.onChange}\n                />\n                Trellis multipass\n              </label>\n              <Expander>\n                {options.trellis_multipass ?\n                  <label class={style.optionInputFirst}>\n                    <Checkbox\n                      name=\"trellis_opt_zero\"\n                      checked={options.trellis_opt_zero}\n                      onChange={this.onChange}\n                    />\n                    Optimize zero block runs\n                  </label>\n                  : null\n                }\n              </Expander>\n              <label class={style.optionInputFirst}>\n                <Checkbox\n                  name=\"trellis_opt_table\"\n                  checked={options.trellis_opt_table}\n                  onChange={this.onChange}\n                />\n                Optimize after trellis quantization\n              </label>\n              <div class={style.optionOneCell}>\n                <Range\n                  name=\"trellis_loops\"\n                  min=\"1\"\n                  max=\"50\"\n                  value={options.trellis_loops}\n                  onInput={this.onChange}\n                >\n                  Trellis quantization passes:\n                </Range>\n              </div>\n            </div>\n            : null\n          }\n        </Expander>\n      </form>\n    );\n  }\n}\n","import { h, Component } from 'preact';\nimport { bind } from '../../lib/initial-util';\nimport * as style from '../../components/Options/style.scss';\nimport Range from '../../components/range';\n\ninterface EncodeOptions {\n  quality: number;\n}\n\ntype Props = {\n  options: EncodeOptions,\n  onChange(newOptions: EncodeOptions): void,\n};\n\ninterface QualityOptionArg {\n  min?: number;\n  max?: number;\n  step?: number;\n}\n\nexport default function qualityOption(opts: QualityOptionArg = {}) {\n  const {\n    min = 0,\n    max = 100,\n    step = 1,\n  } = opts;\n\n  class QualityOptions extends Component<Props, {}> {\n    @bind\n    onChange(event: Event) {\n      const el = event.currentTarget as HTMLInputElement;\n      this.props.onChange({ quality: Number(el.value) });\n    }\n\n    render({ options }: Props) {\n      return (\n        <div class={style.optionsSection}>\n          <div class={style.optionOneCell}>\n            <Range\n              name=\"quality\"\n              min={min}\n              max={max}\n              step={step || 'any'}\n              value={options.quality}\n              onInput={this.onChange}\n            >\n              Quality:\n            </Range>\n          </div>\n        </div>\n      );\n    }\n  }\n\n  return QualityOptions;\n}\n","import qualityOption from '../generic/quality-option';\n\nexport default qualityOption({ min: 0, max: 1, step: 0.01 });\n","export enum WebPImageHint {\n  WEBP_HINT_DEFAULT, // default preset.\n  WEBP_HINT_PICTURE, // digital picture, like portrait, inner shot\n  WEBP_HINT_PHOTO,   // outdoor photograph, with natural lighting\n  WEBP_HINT_GRAPH,   // Discrete tone image (graph, map-tile etc).\n}\n\nexport interface EncodeOptions {\n  quality: number;\n  target_size: number;\n  target_PSNR: number;\n  method: number;\n  sns_strength: number;\n  filter_strength: number;\n  filter_sharpness: number;\n  filter_type: number;\n  partitions: number;\n  segments: number;\n  pass: number;\n  show_compressed: number;\n  preprocessing: number;\n  autofilter: number;\n  partition_limit: number;\n  alpha_compression: number;\n  alpha_filtering: number;\n  alpha_quality: number;\n  lossless: number;\n  exact: number;\n  image_hint: number;\n  emulate_jpeg_size: number;\n  thread_level: number;\n  low_memory: number;\n  near_lossless: number;\n  use_delta_palette: number;\n  use_sharp_yuv: number;\n}\nexport interface EncoderState { type: typeof type; options: EncodeOptions; }\n\nexport const type = 'webp';\nexport const label = 'WebP';\nexport const mimeType = 'image/webp';\nexport const extension = 'webp';\n// These come from struct WebPConfig in encode.h.\nexport const defaultOptions: EncodeOptions = {\n  quality: 75,\n  target_size: 0,\n  target_PSNR: 0,\n  method: 4,\n  sns_strength: 50,\n  filter_strength: 60,\n  filter_sharpness: 0,\n  filter_type: 1,\n  partitions: 0,\n  segments: 4,\n  pass: 1,\n  show_compressed: 0,\n  preprocessing: 0,\n  autofilter: 0,\n  partition_limit: 0,\n  alpha_compression: 1,\n  alpha_filtering: 1,\n  alpha_quality: 100,\n  lossless: 0,\n  exact: 0,\n  image_hint: 0,\n  emulate_jpeg_size: 0,\n  thread_level: 0,\n  low_memory: 0,\n  near_lossless: 100,\n  use_delta_palette: 0,\n  use_sharp_yuv: 0,\n};\n","import { h, Component } from 'preact';\nimport { bind } from '../../lib/initial-util';\nimport { inputFieldCheckedAsNumber, inputFieldValueAsNumber, preventDefault } from '../../lib/util';\nimport { EncodeOptions, WebPImageHint } from './encoder-meta';\nimport * as style from '../../components/Options/style.scss';\nimport Checkbox from '../../components/checkbox';\nimport Expander from '../../components/expander';\nimport Select from '../../components/select';\nimport Range from '../../components/range';\nimport linkState from 'linkstate';\n\ninterface Props {\n  options: EncodeOptions;\n  onChange(newOptions: EncodeOptions): void;\n}\n\ninterface State {\n  showAdvanced: boolean;\n}\n\n// From kLosslessPresets in config_enc.c\n// The format is [method, quality].\nconst losslessPresets:[number, number][] = [\n  [0, 0], [1, 20], [2, 25], [3, 30], [3, 50],\n  [4, 50], [4, 75], [4, 90], [5, 90], [6, 100],\n];\nconst losslessPresetDefault = 6;\n\nfunction determineLosslessQuality(quality: number, method: number): number {\n  const index = losslessPresets.findIndex(\n    ([presetMethod, presetQuality]) => presetMethod === method && presetQuality === quality,\n  );\n  if (index !== -1) return index;\n  // Quality doesn't match one of the presets.\n  // This can happen when toggling 'lossless'.\n  return losslessPresetDefault;\n}\n\nexport default class WebPEncoderOptions extends Component<Props, State> {\n  state: State = {\n    showAdvanced: false,\n  };\n\n  @bind\n  onChange(event: Event) {\n    const form = (event.currentTarget as HTMLInputElement).closest('form') as HTMLFormElement;\n    const lossless = inputFieldCheckedAsNumber(form.lossless);\n    const { options } = this.props;\n    const losslessPresetValue = inputFieldValueAsNumber(\n      form.lossless_preset, determineLosslessQuality(options.quality, options.method),\n    );\n\n    const newOptions: EncodeOptions = {\n      // Copy over options the form doesn't care about, eg emulate_jpeg_size\n      ...options,\n      // And now stuff from the form:\n      lossless,\n      // Special-cased inputs:\n      // In lossless mode, the quality is derived from the preset.\n      quality: lossless ?\n        losslessPresets[losslessPresetValue][1] :\n        inputFieldValueAsNumber(form.quality, options.quality),\n      // In lossless mode, the method is derived from the preset.\n      method: lossless ?\n        losslessPresets[losslessPresetValue][0] :\n        inputFieldValueAsNumber(form.method_input, options.method),\n      image_hint: inputFieldCheckedAsNumber(form.image_hint, options.image_hint) ?\n        WebPImageHint.WEBP_HINT_GRAPH :\n        WebPImageHint.WEBP_HINT_DEFAULT,\n      // .checked\n      exact: inputFieldCheckedAsNumber(form.exact, options.exact),\n      alpha_compression: inputFieldCheckedAsNumber(\n        form.alpha_compression, options.alpha_compression,\n      ),\n      autofilter: inputFieldCheckedAsNumber(form.autofilter, options.autofilter),\n      filter_type: inputFieldCheckedAsNumber(form.filter_type, options.filter_type),\n      use_sharp_yuv: inputFieldCheckedAsNumber(form.use_sharp_yuv, options.use_sharp_yuv),\n      // .value\n      near_lossless: 100 - inputFieldValueAsNumber(form.near_lossless, 100 - options.near_lossless),\n      alpha_quality: inputFieldValueAsNumber(form.alpha_quality, options.alpha_quality),\n      alpha_filtering: inputFieldValueAsNumber(form.alpha_filtering, options.alpha_filtering),\n      sns_strength: inputFieldValueAsNumber(form.sns_strength, options.sns_strength),\n      filter_strength: inputFieldValueAsNumber(form.filter_strength, options.filter_strength),\n      filter_sharpness:\n        7 - inputFieldValueAsNumber(form.filter_sharpness, 7 - options.filter_sharpness),\n      pass: inputFieldValueAsNumber(form.pass, options.pass),\n      preprocessing: inputFieldValueAsNumber(form.preprocessing, options.preprocessing),\n      segments: inputFieldValueAsNumber(form.segments, options.segments),\n      partitions: inputFieldValueAsNumber(form.partitions, options.partitions),\n    };\n    this.props.onChange(newOptions);\n  }\n\n  private _losslessSpecificOptions(options: EncodeOptions) {\n    return (\n      <div key=\"lossless\">\n        <div class={style.optionOneCell}>\n          <Range\n            name=\"lossless_preset\"\n            min=\"0\"\n            max=\"9\"\n            value={determineLosslessQuality(options.quality, options.method)}\n            onInput={this.onChange}\n          >\n            Effort:\n          </Range>\n        </div>\n        <div class={style.optionOneCell}>\n          <Range\n            name=\"near_lossless\"\n            min=\"0\"\n            max=\"100\"\n            value={'' + (100 - options.near_lossless)}\n            onInput={this.onChange}\n          >\n            Slight loss:\n          </Range>\n        </div>\n        <label class={style.optionInputFirst}>\n          {/*\n            Although there are 3 different kinds of image hint, webp only\n            seems to do something with the 'graph' type, and I don't really\n            understand what it does.\n          */}\n          <Checkbox\n            name=\"image_hint\"\n            checked={options.image_hint === WebPImageHint.WEBP_HINT_GRAPH}\n            onChange={this.onChange}\n          />\n          Discrete tone image\n        </label>\n      </div>\n    );\n  }\n\n  private _lossySpecificOptions(options: EncodeOptions) {\n    const { showAdvanced } = this.state;\n\n    return (\n      <div key=\"lossy\">\n        <div class={style.optionOneCell}>\n          <Range\n            name=\"method_input\"\n            min=\"0\"\n            max=\"6\"\n            value={options.method}\n            onInput={this.onChange}\n          >\n            Effort:\n          </Range>\n        </div>\n        <div class={style.optionOneCell}>\n          <Range\n            name=\"quality\"\n            min=\"0\"\n            max=\"100\"\n            step=\"0.1\"\n            value={options.quality}\n            onInput={this.onChange}\n          >\n            Quality:\n          </Range>\n        </div>\n        <label class={style.optionInputFirst}>\n          <Checkbox\n            checked={showAdvanced}\n            onChange={linkState(this, 'showAdvanced')}\n          />\n          Show advanced settings\n        </label>\n        <Expander>\n          {showAdvanced ?\n            <div>\n              <label class={style.optionInputFirst}>\n                <Checkbox\n                  name=\"alpha_compression\"\n                  checked={!!options.alpha_compression}\n                  onChange={this.onChange}\n                />\n                Compress alpha\n              </label>\n              <div class={style.optionOneCell}>\n                <Range\n                  name=\"alpha_quality\"\n                  min=\"0\"\n                  max=\"100\"\n                  value={options.alpha_quality}\n                  onInput={this.onChange}\n                >\n                  Alpha quality:\n                </Range>\n              </div>\n              <div class={style.optionOneCell}>\n                <Range\n                  name=\"alpha_filtering\"\n                  min=\"0\"\n                  max=\"2\"\n                  value={options.alpha_filtering}\n                  onInput={this.onChange}\n                >\n                  Alpha filter quality:\n                </Range>\n              </div>\n              <label class={style.optionInputFirst}>\n                <Checkbox\n                  name=\"autofilter\"\n                  checked={!!options.autofilter}\n                  onChange={this.onChange}\n                />\n                Auto adjust filter strength\n              </label>\n              <Expander>\n                {options.autofilter ? null :\n                  <div class={style.optionOneCell}>\n                    <Range\n                      name=\"filter_strength\"\n                      min=\"0\"\n                      max=\"100\"\n                      value={options.filter_strength}\n                      onInput={this.onChange}\n                    >\n                      Filter strength:\n                    </Range>\n                  </div>\n                }\n              </Expander>\n              <label class={style.optionInputFirst}>\n                <Checkbox\n                  name=\"filter_type\"\n                  checked={!!options.filter_type}\n                  onChange={this.onChange}\n                />\n                Strong filter\n              </label>\n              <div class={style.optionOneCell}>\n                <Range\n                  name=\"filter_sharpness\"\n                  min=\"0\"\n                  max=\"7\"\n                  value={7 - options.filter_sharpness}\n                  onInput={this.onChange}\n                >\n                  Filter sharpness:\n                </Range>\n              </div>\n              <label class={style.optionInputFirst}>\n                <Checkbox\n                  name=\"use_sharp_yuv\"\n                  checked={!!options.use_sharp_yuv}\n                  onChange={this.onChange}\n                />\n                Sharp RGB→YUV conversion\n              </label>\n              <div class={style.optionOneCell}>\n                <Range\n                  name=\"pass\"\n                  min=\"1\"\n                  max=\"10\"\n                  value={options.pass}\n                  onInput={this.onChange}\n                >\n                  Passes:\n                </Range>\n              </div>\n              <div class={style.optionOneCell}>\n                <Range\n                  name=\"sns_strength\"\n                  min=\"0\"\n                  max=\"100\"\n                  value={options.sns_strength}\n                  onInput={this.onChange}\n                >\n                  Spatial noise shaping:\n                </Range>\n              </div>\n              <label class={style.optionTextFirst}>\n                Preprocess:\n                <Select\n                  name=\"preprocessing\"\n                  value={options.preprocessing}\n                  onChange={this.onChange}\n                >\n                  <option value=\"0\">None</option>\n                  <option value=\"1\">Segment smooth</option>\n                  <option value=\"2\">Pseudo-random dithering</option>\n                </Select>\n              </label>\n              <div class={style.optionOneCell}>\n                <Range\n                  name=\"segments\"\n                  min=\"1\"\n                  max=\"4\"\n                  value={options.segments}\n                  onInput={this.onChange}\n                >\n                  Segments:\n                </Range>\n              </div>\n              <div class={style.optionOneCell}>\n                <Range\n                  name=\"partitions\"\n                  min=\"0\"\n                  max=\"3\"\n                  value={options.partitions}\n                  onInput={this.onChange}\n                >\n                  Partitions:\n                </Range>\n              </div>\n            </div>\n            : null\n          }\n        </Expander>\n      </div>\n    );\n  }\n\n  render({ options }: Props) {\n    // I'm rendering both lossy and lossless forms, as it becomes much easier when\n    // gathering the data.\n    return (\n      <form class={style.optionsSection} onSubmit={preventDefault}>\n        <label class={style.optionInputFirst}>\n          <Checkbox\n            name=\"lossless\"\n            checked={!!options.lossless}\n            onChange={this.onChange}\n          />\n          Lossless\n        </label>\n        {options.lossless\n          ? this._losslessSpecificOptions(options)\n          : this._lossySpecificOptions(options)\n        }\n        <label class={style.optionInputFirst}>\n          <Checkbox\n            name=\"exact\"\n            checked={!!options.exact}\n            onChange={this.onChange}\n          />\n          Preserve transparent data\n        </label>\n      </form>\n    );\n  }\n}\n","export interface EncodeOptions {\n  minQuantizer: number;\n  maxQuantizer: number;\n  minQuantizerAlpha: number;\n  maxQuantizerAlpha: number;\n  tileRowsLog2: number;\n  tileColsLog2: number;\n  speed: number;\n  subsample: number;\n}\n\nexport const type = 'avif';\nexport const label = 'AVIF';\nexport const mimeType = 'image/avif';\nexport const extension = 'avif';\nexport const defaultOptions: EncodeOptions = {\n  minQuantizer: 33,\n  maxQuantizer: 63,\n  minQuantizerAlpha: 33,\n  maxQuantizerAlpha: 63,\n  tileColsLog2: 0,\n  tileRowsLog2: 0,\n  speed: 8,\n  subsample: 1,\n};\n\nexport interface EncoderState { type: typeof type; options: EncodeOptions; }\n","import { h, Component } from 'preact';\nimport { preventDefault, shallowEqual } from '../../lib/util';\nimport { EncodeOptions, defaultOptions } from './encoder-meta';\nimport * as style from '../../components/Options/style.scss';\nimport Checkbox from '../../components/checkbox';\nimport Expander from '../../components/expander';\nimport Select from '../../components/select';\nimport Range from '../../components/range';\nimport linkState from 'linkstate';\n\ninterface Props {\n  options: EncodeOptions;\n  onChange(newOptions: EncodeOptions): void;\n}\n\ninterface State {\n  options: EncodeOptions;\n  lossless: boolean;\n  maxQuality: number;\n  minQuality: number;\n  separateAlpha: boolean;\n  losslessAlpha: boolean;\n  maxAlphaQuality: number;\n  minAlphaQuality: number;\n  showAdvanced: boolean;\n  grayscale: boolean;\n  subsample: number;\n  tileRows: number;\n  tileCols: number;\n  effort: number;\n}\n\nconst maxQuant = 63;\nconst maxSpeed = 10;\n\nexport default class AVIFEncoderOptions extends Component<Props, State> {\n  static getDerivedStateFromProps(props: Props, state: State): Partial<State> | undefined {\n    if (state.options && shallowEqual(state.options, props.options)) return;\n    const { options } = props;\n\n    const lossless = options.maxQuantizer === 0 && options.minQuantizer === 0;\n    const minQuantizerValue = lossless ? defaultOptions.minQuantizer : options.minQuantizer;\n    const maxQuantizerValue = lossless ? defaultOptions.maxQuantizer : options.maxQuantizer;\n    const losslessAlpha = options.maxQuantizerAlpha === 0 && options.minQuantizerAlpha === 0;\n    const minQuantizerAlphaValue = losslessAlpha ?\n      defaultOptions.minQuantizerAlpha : options.minQuantizerAlpha;\n    const maxQuantizerAlphaValue = losslessAlpha ?\n      defaultOptions.maxQuantizerAlpha : options.maxQuantizerAlpha;\n\n    // Create default form state from options\n    return {\n      options,\n      lossless,\n      losslessAlpha,\n      maxQuality: maxQuant - minQuantizerValue,\n      minQuality: maxQuant - maxQuantizerValue,\n      separateAlpha: options.maxQuantizer !== options.maxQuantizerAlpha ||\n        options.minQuantizer !== options.minQuantizerAlpha,\n      maxAlphaQuality: maxQuant - minQuantizerAlphaValue,\n      minAlphaQuality: maxQuant - maxQuantizerAlphaValue,\n      grayscale: options.subsample === 0,\n      subsample: options.subsample === 0 || lossless ? defaultOptions.subsample : options.subsample,\n      tileRows: options.tileRowsLog2,\n      tileCols: options.tileColsLog2,\n      effort: maxSpeed - options.speed,\n    };\n  }\n\n  // The rest of the defaults are set in getDerivedStateFromProps\n  state: State = {\n    showAdvanced: false,\n  } as State;\n\n  private _inputChangeCallbacks = new Map<string, (event: Event) => void>();\n\n  private _inputChange = (prop: keyof State, type: 'number' | 'boolean') => {\n    // Cache the callback for performance\n    if (!this._inputChangeCallbacks.has(prop)) {\n      this._inputChangeCallbacks.set(prop, (event: Event) => {\n        const formEl = event.target as HTMLInputElement | HTMLSelectElement;\n        const newVal = type === 'boolean' ?\n          'checked' in formEl ? formEl.checked : !!formEl.value :\n          Number(formEl.value);\n\n        const newState: Partial<State> = {\n          [prop]: newVal,\n        };\n\n        // Ensure that min cannot be greater than max\n        switch (prop) {\n          case 'maxQuality':\n            if (newVal < this.state.minQuality) {\n              newState.minQuality = newVal as number;\n            }\n            break;\n          case 'minQuality':\n            if (newVal > this.state.maxQuality) {\n              newState.maxQuality = newVal as number;\n            }\n            break;\n          case 'maxAlphaQuality':\n            if (newVal < this.state.minAlphaQuality) {\n              newState.minAlphaQuality = newVal as number;\n            }\n            break;\n          case 'minAlphaQuality':\n            if (newVal > this.state.maxAlphaQuality) {\n              newState.maxAlphaQuality = newVal as number;\n            }\n            break;\n        }\n\n        const optionState = {\n          ...this.state,\n          ...newState,\n        };\n\n        const maxQuantizer = optionState.lossless ? 0 : (maxQuant - optionState.minQuality);\n        const minQuantizer = optionState.lossless ? 0 : (maxQuant - optionState.maxQuality);\n\n        const newOptions: EncodeOptions = {\n          maxQuantizer,\n          minQuantizer,\n          maxQuantizerAlpha: optionState.separateAlpha ?\n            (optionState.losslessAlpha ? 0 : (maxQuant - optionState.minAlphaQuality)) :\n            maxQuantizer,\n          minQuantizerAlpha: optionState.separateAlpha ?\n            (optionState.losslessAlpha ? 0 : (maxQuant - optionState.maxAlphaQuality)) :\n            minQuantizer,\n          // Always set to 4:4:4 if lossless\n          subsample: optionState.grayscale ? 0 : optionState.lossless ? 3 : optionState.subsample,\n          tileColsLog2: optionState.tileCols,\n          tileRowsLog2: optionState.tileRows,\n          speed: maxSpeed - optionState.effort,\n        };\n\n        // Updating options, so we don't recalculate in getDerivedStateFromProps.\n        newState.options = newOptions;\n\n        this.setState(\n          // It isn't clear to me why I have to cast this :)\n          newState as State,\n        );\n\n        this.props.onChange(newOptions);\n      });\n    }\n\n    return this._inputChangeCallbacks.get(prop)!;\n  }\n\n  render(\n    _: Props,\n    {\n      effort, grayscale, lossless, losslessAlpha, maxAlphaQuality, maxQuality, minAlphaQuality,\n      minQuality, separateAlpha, showAdvanced, subsample, tileCols, tileRows,\n    }: State,\n  ) {\n    return (\n      <form class={style.optionsSection} onSubmit={preventDefault}>\n        <label class={style.optionInputFirst}>\n          <Checkbox\n            checked={lossless}\n            onChange={this._inputChange('lossless', 'boolean')}\n          />\n          Lossless\n        </label>\n        <Expander>\n          {!lossless && (\n            <div>\n              <div class={style.optionOneCell}>\n                <Range\n                  min=\"0\"\n                  max=\"62\"\n                  value={maxQuality}\n                  onInput={this._inputChange('maxQuality', 'number')}\n                >\n                  Max quality:\n                </Range>\n              </div>\n              <div class={style.optionOneCell}>\n                <Range\n                  min=\"0\"\n                  max=\"62\"\n                  value={minQuality}\n                  onInput={this._inputChange('minQuality', 'number')}\n                >\n                  Min quality:\n                </Range>\n              </div>\n            </div>\n          )}\n        </Expander>\n        <label class={style.optionInputFirst}>\n          <Checkbox\n            checked={separateAlpha}\n            onChange={this._inputChange('separateAlpha', 'boolean')}\n          />\n          Separate alpha quality\n        </label>\n        <Expander>\n        {separateAlpha && (\n            <div>\n              <label class={style.optionInputFirst}>\n                <Checkbox\n                  checked={losslessAlpha}\n                  onChange={this._inputChange('losslessAlpha', 'boolean')}\n                />\n                Lossless alpha\n              </label>\n              <Expander>\n                {!losslessAlpha &&\n                  <div>\n                    <div class={style.optionOneCell}>\n                      <Range\n                        min=\"0\"\n                        max=\"62\"\n                        value={maxAlphaQuality}\n                        onInput={this._inputChange('maxAlphaQuality', 'number')}\n                      >\n                        Max alpha quality:\n                      </Range>\n                    </div>\n                    <div class={style.optionOneCell}>\n                      <Range\n                        min=\"0\"\n                        max=\"62\"\n                        value={minAlphaQuality}\n                        onInput={this._inputChange('minAlphaQuality', 'number')}\n                      >\n                        Min alpha quality:\n                      </Range>\n                    </div>\n                  </div>\n                }\n              </Expander>\n            </div>\n          )}\n        </Expander>\n        <label class={style.optionInputFirst}>\n          <Checkbox\n            checked={showAdvanced}\n            onChange={linkState(this, 'showAdvanced')}\n          />\n          Show advanced settings\n        </label>\n        <Expander>\n          {showAdvanced &&\n            <div>\n              {/*<label class={style.optionInputFirst}>\n                <Checkbox\n                  data-set-state=\"grayscale\"\n                  checked={grayscale}\n                  onChange={this._inputChange('grayscale', 'boolean')}\n                />\n                Grayscale\n              </label>*/}\n              <Expander>\n                {!grayscale && !lossless &&\n                  <label class={style.optionTextFirst}>\n                    Subsample chroma:\n                    <Select\n                      data-set-state=\"subsample\"\n                      value={subsample}\n                      onChange={this._inputChange('subsample', 'number')}\n                    >\n                      <option value=\"1\">4:2:0</option>\n                      {/*<option value=\"2\">4:2:2</option>*/}\n                      <option value=\"3\">4:4:4</option>\n                    </Select>\n                  </label>\n                }\n              </Expander>\n              <div class={style.optionOneCell}>\n                <Range\n                  min=\"0\"\n                  max=\"6\"\n                  value={tileRows}\n                  onInput={this._inputChange('tileRows', 'number')}\n                >\n                  Log2 of tile rows:\n                </Range>\n              </div>\n              <div class={style.optionOneCell}>\n                <Range\n                  min=\"0\"\n                  max=\"6\"\n                  value={tileCols}\n                  onInput={this._inputChange('tileCols', 'number')}\n                >\n                  Log2 of tile cols:\n                </Range>\n              </div>\n            </div>\n          }\n        </Expander>\n        <div class={style.optionOneCell}>\n          <Range\n            min=\"0\"\n            max=\"10\"\n            value={effort}\n            onInput={this._inputChange('effort', 'number')}\n          >\n            Effort:\n          </Range>\n        </div>\n      </form>\n    );\n  }\n}\n","import qualityOption from '../generic/quality-option';\n\nexport default qualityOption({ min: 0, max: 1, step: 0.01 });\n","import { h, Component } from 'preact';\nimport { bind } from '../../lib/initial-util';\nimport { inputFieldValueAsNumber, konami, preventDefault } from '../../lib/util';\nimport { QuantizeOptions } from './processor-meta';\nimport * as style from '../../components/Options/style.scss';\nimport Expander from '../../components/expander';\nimport Select from '../../components/select';\nimport Range from '../../components/range';\n\nconst konamiPromise = konami();\n\ninterface Props {\n  options: QuantizeOptions;\n  onChange(newOptions: QuantizeOptions): void;\n}\n\ninterface State {\n  extendedSettings: boolean;\n}\n\nexport default class QuantizerOptions extends Component<Props, State> {\n  state: State = { extendedSettings: false };\n\n  componentDidMount() {\n    konamiPromise.then(() => {\n      this.setState({ extendedSettings: true });\n    });\n  }\n\n  @bind\n  onChange(event: Event) {\n    const form = (event.currentTarget as HTMLInputElement).closest('form') as HTMLFormElement;\n    const { options } = this.props;\n\n    const newOptions: QuantizeOptions = {\n      zx: inputFieldValueAsNumber(form.zx, options.zx),\n      maxNumColors: inputFieldValueAsNumber(form.maxNumColors, options.maxNumColors),\n      dither: inputFieldValueAsNumber(form.dither),\n    };\n    this.props.onChange(newOptions);\n  }\n\n  render({ options }: Props, { extendedSettings }: State) {\n    return (\n      <form class={style.optionsSection} onSubmit={preventDefault}>\n        <Expander>\n          {extendedSettings ?\n            <label class={style.optionTextFirst}>\n              Type:\n              <Select\n                name=\"zx\"\n                value={'' + options.zx}\n                onChange={this.onChange}\n              >\n                <option value=\"0\">Standard</option>\n                <option value=\"1\">ZX</option>\n              </Select>\n            </label>\n          : null}\n        </Expander>\n        <Expander>\n          {options.zx ? null :\n            <div class={style.optionOneCell}>\n              <Range\n                name=\"maxNumColors\"\n                min=\"2\"\n                max=\"256\"\n                value={options.maxNumColors}\n                onInput={this.onChange}\n              >\n                Colors:\n              </Range>\n            </div>\n          }\n        </Expander>\n        <div class={style.optionOneCell}>\n          <Range\n            name=\"dither\"\n            min=\"0\"\n            max=\"1\"\n            step=\"0.01\"\n            value={options.dither}\n            onInput={this.onChange}\n          >\n            Dithering:\n          </Range>\n        </div>\n      </form>\n    );\n  }\n}\n","type BrowserResizeMethods =\n  | 'browser-pixelated'\n  | 'browser-low'\n  | 'browser-medium'\n  | 'browser-high';\ntype WorkerResizeMethods =\n  | 'triangle'\n  | 'catrom'\n  | 'mitchell'\n  | 'lanczos3'\n  | 'hqx';\nconst workerResizeMethods: WorkerResizeMethods[] = [\n  'triangle',\n  'catrom',\n  'mitchell',\n  'lanczos3',\n  'hqx',\n];\n\nexport type ResizeOptions =\n  | BrowserResizeOptions\n  | WorkerResizeOptions\n  | VectorResizeOptions;\n\nexport interface ResizeOptionsCommon {\n  width: number;\n  height: number;\n  fitMethod: 'stretch' | 'contain';\n}\n\nexport interface BrowserResizeOptions extends ResizeOptionsCommon {\n  method: BrowserResizeMethods;\n}\n\nexport interface WorkerResizeOptions extends ResizeOptionsCommon {\n  method: WorkerResizeMethods;\n  premultiply: boolean;\n  linearRGB: boolean;\n}\n\nexport interface VectorResizeOptions extends ResizeOptionsCommon {\n  method: 'vector';\n}\n\n/**\n * Return whether a set of options are worker resize options.\n *\n * @param opts\n */\nexport function isWorkerOptions(\n  opts: ResizeOptions,\n): opts is WorkerResizeOptions {\n  return (workerResizeMethods as string[]).includes(opts.method);\n}\n\n/**\n * Return whether a set of options are from the HQ<n>X set\n *\n * @param opts\n */\nexport function isHqx(opts: ResizeOptions): opts is WorkerResizeOptions {\n  return opts.method === 'hqx';\n}\n\nexport const defaultOptions: ResizeOptions = {\n  // Width and height will always default to the image size.\n  // This is set elsewhere.\n  width: 1,\n  height: 1,\n  // This will be set to 'vector' if the input is SVG.\n  method: 'lanczos3',\n  fitMethod: 'stretch',\n  premultiply: true,\n  linearRGB: true,\n};\n","import { h, Component } from 'preact';\nimport linkState from 'linkstate';\nimport { bind, linkRef } from '../../lib/initial-util';\nimport {\n  inputFieldValueAsNumber, inputFieldValue, preventDefault, inputFieldChecked,\n} from '../../lib/util';\nimport { ResizeOptions, isWorkerOptions } from './processor-meta';\nimport * as style from '../../components/Options/style.scss';\nimport Checkbox from '../../components/checkbox';\nimport Expander from '../../components/expander';\nimport Select from '../../components/select';\n\ninterface Props {\n  isVector: Boolean;\n  inputWidth: number;\n  inputHeight: number;\n  options: ResizeOptions;\n  onChange(newOptions: ResizeOptions): void;\n}\n\ninterface State {\n  maintainAspect: boolean;\n}\n\nconst sizePresets = [0.25, 0.3333, 0.5, 1, 2, 3, 4];\n\nexport default class ResizerOptions extends Component<Props, State> {\n  state: State = {\n    maintainAspect: true,\n  };\n\n  private form?: HTMLFormElement;\n  private presetWidths: { [idx: number]: number } = {};\n  private presetHeights: { [idx: number]: number } = {};\n\n  constructor(props: Props) {\n    super(props);\n    this.generatePresetValues(props.inputWidth, props.inputHeight);\n  }\n\n  private reportOptions() {\n    const form = this.form!;\n    const width = form.width as HTMLInputElement;\n    const height = form.height as HTMLInputElement;\n    const { options } = this.props;\n\n    if (!width.checkValidity() || !height.checkValidity()) return;\n\n    const newOptions: ResizeOptions = {\n      width: inputFieldValueAsNumber(width),\n      height: inputFieldValueAsNumber(height),\n      method: form.resizeMethod.value,\n      premultiply: inputFieldChecked(form.premultiply, true),\n      linearRGB: inputFieldChecked(form.linearRGB, true),\n      // Casting, as the formfield only returns the correct values.\n      fitMethod: inputFieldValue(form.fitMethod, options.fitMethod) as ResizeOptions['fitMethod'],\n    };\n    this.props.onChange(newOptions);\n  }\n\n  @bind\n  private onChange() {\n    this.reportOptions();\n  }\n\n  private getAspect() {\n    return this.props.inputWidth / this.props.inputHeight;\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    if (!prevState.maintainAspect && this.state.maintainAspect) {\n      this.form!.height.value = Math.round(Number(this.form!.width.value) / this.getAspect());\n      this.reportOptions();\n    }\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (\n      this.props.inputWidth !== nextProps.inputWidth ||\n      this.props.inputHeight !== nextProps.inputHeight\n    ) {\n      this.generatePresetValues(nextProps.inputWidth, nextProps.inputHeight);\n    }\n  }\n\n  @bind\n  private onWidthInput() {\n    if (this.state.maintainAspect) {\n      const width = inputFieldValueAsNumber(this.form!.width);\n      this.form!.height.value = Math.round(width / this.getAspect());\n    }\n\n    this.reportOptions();\n  }\n\n  @bind\n  private onHeightInput() {\n    if (this.state.maintainAspect) {\n      const height = inputFieldValueAsNumber(this.form!.height);\n      this.form!.width.value = Math.round(height * this.getAspect());\n    }\n\n    this.reportOptions();\n  }\n\n  private generatePresetValues(width: number, height: number) {\n    for (const preset of sizePresets) {\n      this.presetWidths[preset] = Math.round(width * preset);\n      this.presetHeights[preset] = Math.round(height * preset);\n    }\n  }\n\n  private getPreset(): number | string {\n    const { width, height } = this.props.options;\n\n    for (const preset of sizePresets) {\n      if (\n        width === this.presetWidths[preset] &&\n        height === this.presetHeights[preset]\n      ) return preset;\n    }\n\n    return 'custom';\n  }\n\n  @bind\n  private onPresetChange(event: Event) {\n    const select = event.target as HTMLSelectElement;\n    if (select.value === 'custom') return;\n    const multiplier = Number(select.value);\n    (this.form!.width as HTMLInputElement).value =\n      Math.round(this.props.inputWidth * multiplier) + '';\n    (this.form!.height as HTMLInputElement).value =\n      Math.round(this.props.inputHeight * multiplier) + '';\n    this.reportOptions();\n  }\n\n  render({ options, isVector }: Props, { maintainAspect }: State) {\n    return (\n      <form ref={linkRef(this, 'form')} class={style.optionsSection} onSubmit={preventDefault}>\n        <label class={style.optionTextFirst}>\n          Method:\n          <Select\n            name=\"resizeMethod\"\n            value={options.method}\n            onChange={this.onChange}\n          >\n            {isVector && <option value=\"vector\">Vector</option>}\n            <option value=\"lanczos3\">Lanczos3</option>\n            <option value=\"mitchell\">Mitchell</option>\n            <option value=\"catrom\">Catmull-Rom</option>\n            <option value=\"triangle\">Triangle (bilinear)</option>\n            <option value=\"hqx\">hqx (pixel art)</option>\n            <option value=\"browser-pixelated\">Browser pixelated</option>\n            <option value=\"browser-low\">Browser low quality</option>\n            <option value=\"browser-medium\">Browser medium quality</option>\n            <option value=\"browser-high\">Browser high quality</option>\n          </Select>\n        </label>\n        <label class={style.optionTextFirst}>\n          Preset:\n          <Select value={this.getPreset()} onChange={this.onPresetChange}>\n            {sizePresets.map(preset =>\n              <option value={preset}>{preset * 100}%</option>,\n            )}\n            <option value=\"custom\">Custom</option>\n          </Select>\n        </label>\n        <label class={style.optionTextFirst}>\n          Width:\n          <input\n            required\n            class={style.textField}\n            name=\"width\"\n            type=\"number\"\n            min=\"1\"\n            value={'' + options.width}\n            onInput={this.onWidthInput}\n          />\n        </label>\n        <label class={style.optionTextFirst}>\n          Height:\n          <input\n            required\n            class={style.textField}\n            name=\"height\"\n            type=\"number\"\n            min=\"1\"\n            value={'' + options.height}\n            onInput={this.onHeightInput}\n          />\n        </label>\n        <Expander>\n          {isWorkerOptions(options) ?\n            <label class={style.optionInputFirst}>\n              <Checkbox\n                name=\"premultiply\"\n                checked={options.premultiply}\n                onChange={this.onChange}\n              />\n              Premultiply alpha channel\n            </label>\n            : null\n          }\n          {isWorkerOptions(options) ?\n            <label class={style.optionInputFirst}>\n              <Checkbox\n                name=\"linearRGB\"\n                checked={options.linearRGB}\n                onChange={this.onChange}\n              />\n              Linear RGB\n            </label>\n            : null\n          }\n        </Expander>\n        <label class={style.optionInputFirst}>\n          <Checkbox\n            name=\"maintainAspect\"\n            checked={maintainAspect}\n            onChange={linkState(this, 'maintainAspect')}\n          />\n          Maintain aspect ratio\n        </label>\n        <Expander>\n          {maintainAspect ? null :\n            <label class={style.optionTextFirst}>\n              Fit method:\n              <Select\n                name=\"fitMethod\"\n                value={options.fitMethod}\n                onChange={this.onChange}\n              >\n                <option value=\"stretch\">Stretch</option>\n                <option value=\"contain\">Contain</option>\n              </Select>\n            </label>\n          }\n        </Expander>\n      </form>\n    );\n  }\n}\n","export interface EncodeOptions {}\nexport interface EncoderState { type: typeof type; options: EncodeOptions; }\n\nexport const type = 'identity';\nexport const label = 'Original image';\nexport const defaultOptions: EncodeOptions = {};\n","export interface EncodeOptions {\n  level: number;\n}\nexport interface EncoderState { type: typeof type; options: EncodeOptions; }\n\nexport const type = 'png';\nexport const label = 'OxiPNG';\nexport const mimeType = 'image/png';\nexport const extension = 'png';\n\nexport const defaultOptions: EncodeOptions = {\n  level: 2,\n};\n","import * as identity from './identity/encoder-meta';\nimport * as oxiPNG from './oxipng/encoder-meta';\nimport * as mozJPEG from './mozjpeg/encoder-meta';\nimport * as webP from './webp/encoder-meta';\nimport * as avif from './avif/encoder-meta';\nimport * as browserPNG from './browser-png/encoder-meta';\nimport * as browserJPEG from './browser-jpeg/encoder-meta';\nimport * as browserWebP from './browser-webp/encoder-meta';\nimport * as browserGIF from './browser-gif/encoder-meta';\nimport * as browserTIFF from './browser-tiff/encoder-meta';\nimport * as browserJP2 from './browser-jp2/encoder-meta';\nimport * as browserBMP from './browser-bmp/encoder-meta';\nimport * as browserPDF from './browser-pdf/encoder-meta';\n\nexport interface EncoderSupportMap {\n  [key: string]: boolean;\n}\n\nexport type EncoderState =\n  identity.EncoderState |\n  oxiPNG.EncoderState |\n  mozJPEG.EncoderState |\n  webP.EncoderState |\n  avif.EncoderState |\n  browserPNG.EncoderState |\n  browserJPEG.EncoderState |\n  browserWebP.EncoderState |\n  browserGIF.EncoderState |\n  browserTIFF.EncoderState |\n  browserJP2.EncoderState |\n  browserBMP.EncoderState |\n  browserPDF.EncoderState;\n\nexport type EncoderOptions =\n  identity.EncodeOptions |\n  oxiPNG.EncodeOptions |\n  mozJPEG.EncodeOptions |\n  webP.EncodeOptions |\n  avif.EncodeOptions |\n  browserPNG.EncodeOptions |\n  browserJPEG.EncodeOptions |\n  browserWebP.EncodeOptions |\n  browserGIF.EncodeOptions |\n  browserTIFF.EncodeOptions |\n  browserJP2.EncodeOptions |\n  browserBMP.EncodeOptions |\n  browserPDF.EncodeOptions;\n\nexport type EncoderType = keyof typeof encoderMap;\n\nexport const encoderMap = {\n  [identity.type]: identity,\n  [oxiPNG.type]: oxiPNG,\n  [mozJPEG.type]: mozJPEG,\n  [webP.type]: webP,\n  [avif.type]: avif,\n  [browserPNG.type]: browserPNG,\n  [browserJPEG.type]: browserJPEG,\n  [browserWebP.type]: browserWebP,\n  // Safari & Firefox only:\n  [browserBMP.type]: browserBMP,\n  // Safari only:\n  [browserGIF.type]: browserGIF,\n  [browserTIFF.type]: browserTIFF,\n  [browserJP2.type]: browserJP2,\n  [browserPDF.type]: browserPDF,\n};\n\nexport const encoders = Array.from(Object.values(encoderMap));\n\n/** Does this browser support a given encoder? Indexed by label */\nexport const encodersSupported = Promise.resolve().then(async () => {\n  const encodersSupported: EncoderSupportMap = {};\n\n  await Promise.all(encoders.map(async (encoder) => {\n    // If the encoder provides a featureTest, call it, otherwise assume supported.\n    const isSupported = !('featureTest' in encoder) || await encoder.featureTest();\n    encodersSupported[encoder.type] = isSupported;\n  }));\n\n  return encodersSupported;\n});\n","import { h, Component } from 'preact';\n\nimport * as style from './style.scss';\nimport { bind } from '../../lib/initial-util';\nimport { cleanSet, cleanMerge } from '../../lib/clean-modify';\nimport OxiPNGEncoderOptions from '../../codecs/oxipng/options';\nimport MozJpegEncoderOptions from '../../codecs/mozjpeg/options';\nimport BrowserJPEGEncoderOptions from '../../codecs/browser-jpeg/options';\nimport WebPEncoderOptions from '../../codecs/webp/options';\nimport AvifEncoderOptions from '../../codecs/avif/options';\nimport BrowserWebPEncoderOptions from '../../codecs/browser-webp/options';\n\nimport QuantizerOptionsComponent from '../../codecs/imagequant/options';\nimport ResizeOptionsComponent from '../../codecs/resize/options';\n\nimport * as identity from '../../codecs/identity/encoder-meta';\nimport * as oxiPNG from '../../codecs/oxipng/encoder-meta';\nimport * as mozJPEG from '../../codecs/mozjpeg/encoder-meta';\nimport * as webP from '../../codecs/webp/encoder-meta';\nimport * as avif from '../../codecs/avif/encoder-meta';\nimport * as browserPNG from '../../codecs/browser-png/encoder-meta';\nimport * as browserJPEG from '../../codecs/browser-jpeg/encoder-meta';\nimport * as browserWebP from '../../codecs/browser-webp/encoder-meta';\nimport * as browserGIF from '../../codecs/browser-gif/encoder-meta';\nimport * as browserTIFF from '../../codecs/browser-tiff/encoder-meta';\nimport * as browserJP2 from '../../codecs/browser-jp2/encoder-meta';\nimport * as browserBMP from '../../codecs/browser-bmp/encoder-meta';\nimport * as browserPDF from '../../codecs/browser-pdf/encoder-meta';\nimport {\n  EncoderState,\n  EncoderType,\n  EncoderOptions,\n  encoders,\n  encodersSupported,\n  EncoderSupportMap,\n} from '../../codecs/encoders';\nimport { QuantizeOptions } from '../../codecs/imagequant/processor-meta';\nimport { ResizeOptions } from '../../codecs/resize/processor-meta';\nimport { PreprocessorState } from '../../codecs/preprocessors';\nimport { SourceImage } from '../compress';\nimport Checkbox from '../checkbox';\nimport Expander from '../expander';\nimport Select from '../select';\n\nconst encoderOptionsComponentMap: {\n  [x: string]: (new (...args: any[]) => Component<any, any>) | undefined;\n} = {\n  [identity.type]: undefined,\n  [oxiPNG.type]: OxiPNGEncoderOptions,\n  [mozJPEG.type]: MozJpegEncoderOptions,\n  [webP.type]: WebPEncoderOptions,\n  [avif.type]: AvifEncoderOptions,\n  [browserPNG.type]: undefined,\n  [browserJPEG.type]: BrowserJPEGEncoderOptions,\n  [browserWebP.type]: BrowserWebPEncoderOptions,\n  [browserBMP.type]: undefined,\n  // Only Safari supports the rest, and it doesn't support quality settings.\n  [browserGIF.type]: undefined,\n  [browserTIFF.type]: undefined,\n  [browserJP2.type]: undefined,\n  [browserPDF.type]: undefined,\n};\n\ninterface Props {\n  mobileView: boolean;\n  source?: SourceImage;\n  encoderState: EncoderState;\n  preprocessorState: PreprocessorState;\n  onEncoderTypeChange(newType: EncoderType): void;\n  onEncoderOptionsChange(newOptions: EncoderOptions): void;\n  onPreprocessorOptionsChange(newOptions: PreprocessorState): void;\n}\n\ninterface State {\n  encoderSupportMap?: EncoderSupportMap;\n}\n\nexport default class Options extends Component<Props, State> {\n  state: State = {\n    encoderSupportMap: undefined,\n  };\n\n  constructor() {\n    super();\n    encodersSupported.then(encoderSupportMap => this.setState({ encoderSupportMap }));\n  }\n\n  @bind\n  private onEncoderTypeChange(event: Event) {\n    const el = event.currentTarget as HTMLSelectElement;\n\n    // The select element only has values matching encoder types,\n    // so 'as' is safe here.\n    const type = el.value as EncoderType;\n    this.props.onEncoderTypeChange(type);\n  }\n\n  @bind\n  private onPreprocessorEnabledChange(event: Event) {\n    const el = event.currentTarget as HTMLInputElement;\n    const preprocessor = el.name.split('.')[0] as keyof PreprocessorState;\n\n    this.props.onPreprocessorOptionsChange(\n      cleanSet(this.props.preprocessorState, `${preprocessor}.enabled`, el.checked),\n    );\n  }\n\n  @bind\n  private onQuantizerOptionsChange(opts: QuantizeOptions) {\n    this.props.onPreprocessorOptionsChange(\n      cleanMerge(this.props.preprocessorState, 'quantizer', opts),\n    );\n  }\n\n  @bind\n  private onResizeOptionsChange(opts: ResizeOptions) {\n    this.props.onPreprocessorOptionsChange(\n      cleanMerge(this.props.preprocessorState, 'resize', opts),\n    );\n  }\n\n  render(\n    {\n      source,\n      encoderState,\n      preprocessorState,\n      onEncoderOptionsChange,\n    }: Props,\n    { encoderSupportMap }: State,\n  ) {\n    // tslint:disable variable-name\n    const EncoderOptionComponent = encoderOptionsComponentMap[encoderState.type];\n\n    return (\n      <div class={style.optionsScroller}>\n        <Expander>\n          {encoderState.type === identity.type ? null :\n            <div>\n              <h3 class={style.optionsTitle}>Edit</h3>\n              <label class={style.sectionEnabler}>\n                <Checkbox\n                  name=\"resize.enable\"\n                  checked={!!preprocessorState.resize.enabled}\n                  onChange={this.onPreprocessorEnabledChange}\n                />\n                Resize\n              </label>\n              <Expander>\n                {preprocessorState.resize.enabled ?\n                  <ResizeOptionsComponent\n                    isVector={Boolean(source && source.vectorImage)}\n                    inputWidth={source ? source.processed.width : 1}\n                    inputHeight={source ? source.processed.height : 1}\n                    options={preprocessorState.resize}\n                    onChange={this.onResizeOptionsChange}\n                  />\n                : null}\n              </Expander>\n\n              <label class={style.sectionEnabler}>\n                <Checkbox\n                  name=\"quantizer.enable\"\n                  checked={!!preprocessorState.quantizer.enabled}\n                  onChange={this.onPreprocessorEnabledChange}\n                />\n                Reduce palette\n              </label>\n              <Expander>\n                {preprocessorState.quantizer.enabled ?\n                  <QuantizerOptionsComponent\n                    options={preprocessorState.quantizer}\n                    onChange={this.onQuantizerOptionsChange}\n                  />\n                : null}\n              </Expander>\n            </div>\n          }\n        </Expander>\n\n        <h3 class={style.optionsTitle}>Compress</h3>\n\n        <section class={`${style.optionOneCell} ${style.optionsSection}`}>\n          {encoderSupportMap ?\n            <Select value={encoderState.type} onChange={this.onEncoderTypeChange} large>\n              {encoders.filter(encoder => encoderSupportMap[encoder.type]).map(encoder => (\n                // tslint:disable-next-line:jsx-key\n                <option value={encoder.type}>{encoder.label}</option>\n              ))}\n            </Select>\n            :\n            <Select large><option>Loading…</option></Select>\n          }\n        </section>\n\n        <Expander>\n          {EncoderOptionComponent ?\n            <EncoderOptionComponent\n              options={\n                // Casting options, as encoderOptionsComponentMap[encodeData.type] ensures\n                // the correct type, but typescript isn't smart enough.\n                encoderState.options as any\n              }\n              onChange={onEncoderOptionsChange}\n            />\n          : null}\n        </Expander>\n      </div>\n    );\n  }\n}\n","import { EncoderState } from '../../codecs/encoders';\nimport { Fileish } from '../../lib/initial-util';\nimport { shallowEqual } from '../../lib/util';\nimport { PreprocessorState } from '../../codecs/preprocessors';\n\nimport * as identity from '../../codecs/identity/encoder-meta';\n\ninterface CacheResult {\n  preprocessed: ImageData;\n  data: ImageData;\n  file: Fileish;\n}\n\ninterface CacheEntry extends CacheResult {\n  preprocessorState: PreprocessorState;\n  encoderState: EncoderState;\n  sourceData: ImageData;\n}\n\nconst SIZE = 5;\n\nexport default class ResultCache {\n  private readonly _entries: CacheEntry[] = [];\n\n  add(entry: CacheEntry) {\n    if (entry.encoderState.type === identity.type) throw Error('Cannot cache identity encodes');\n    // Add the new entry to the start\n    this._entries.unshift(entry);\n    // Remove the last entry if we're now bigger than SIZE\n    if (this._entries.length > SIZE) this._entries.pop();\n  }\n\n  match(\n    sourceData: ImageData,\n    preprocessorState: PreprocessorState,\n    encoderState: EncoderState,\n  ): CacheResult | undefined {\n    const matchingIndex = this._entries.findIndex((entry) => {\n      // Check for quick exits:\n      if (entry.sourceData !== sourceData) return false;\n      if (entry.encoderState.type !== encoderState.type) return false;\n\n      // Check that each set of options in the preprocessor are the same\n      for (const prop in preprocessorState) {\n        if (\n          !shallowEqual(\n            (preprocessorState as any)[prop],\n            (entry.preprocessorState as any)[prop],\n          )\n        ) return false;\n      }\n\n      // Check detailed encoder options\n      if (!shallowEqual(encoderState.options, entry.encoderState.options)) return false;\n\n      return true;\n    });\n\n    if (matchingIndex === -1) return undefined;\n\n    const matchingEntry = this._entries[matchingIndex];\n\n    if (matchingIndex !== 0) {\n      // Move the matched result to 1st position (LRU)\n      this._entries.splice(matchingIndex, 1);\n      this._entries.unshift(matchingEntry);\n    }\n\n    return {\n      data: matchingEntry.data,\n      preprocessed: matchingEntry.preprocessed,\n      file: matchingEntry.file,\n    };\n  }\n}\n","export interface QuantizeOptions {\n  zx: number;\n  maxNumColors: number;\n  dither: number;\n}\n\nexport const defaultOptions: QuantizeOptions = {\n  zx: 0,\n  maxNumColors: 256,\n  dither: 1.0,\n};\n","import {\n  QuantizeOptions, defaultOptions as quantizerDefaultOptions,\n} from './imagequant/processor-meta';\nimport { ResizeOptions, defaultOptions as resizeDefaultOptions } from './resize/processor-meta';\n\ninterface Enableable {\n  enabled: boolean;\n}\nexport interface PreprocessorState {\n  quantizer: Enableable & QuantizeOptions;\n  resize: Enableable & ResizeOptions;\n}\n\nexport const defaultPreprocessorState: PreprocessorState = {\n  quantizer: {\n    enabled: false,\n    ...quantizerDefaultOptions,\n  },\n  resize: {\n    enabled: false,\n    ...resizeDefaultOptions,\n  },\n};\n","import { builtinDecode, sniffMimeType, canDecodeImageType } from '../lib/util';\nimport Processor from './processor';\n\nexport async function decodeImage(blob: Blob, processor: Processor): Promise<ImageData> {\n  const mimeType = await sniffMimeType(blob);\n  const canDecode = await canDecodeImageType(mimeType);\n\n  try {\n    if (!canDecode) {\n      if (mimeType === 'image/avif') return await processor.avifDecode(blob);\n      if (mimeType === 'image/webp') return await processor.webpDecode(blob);\n      // If it's not one of those types, fall through and try built-in decoding for a laugh.\n    }\n    return await builtinDecode(blob);\n  } catch (err) {\n    throw Error(\"Couldn't decode image\");\n  }\n}\n","import * as style from './styles.css';\nimport { transitionHeight } from '../../../../lib/util';\n\ninterface CloseAllOptions {\n  exceptFirst?: boolean;\n}\n\nconst openOneOnlyAttr = 'open-one-only';\n\nfunction getClosestHeading(el: Element): HTMLElement | undefined {\n  // Look for the child of multi-panel, but stop at interactive elements like links & buttons\n  const closestEl = el.closest('multi-panel > *, a, button');\n  if (closestEl && closestEl.classList.contains(style.panelHeading)) {\n    return closestEl as HTMLElement;\n  }\n  return undefined;\n}\n\nasync function close(heading: HTMLElement) {\n  const content = heading.nextElementSibling as HTMLElement;\n\n  // if there is no content, nothing to expand\n  if (!content) return;\n\n  const from = content.getBoundingClientRect().height;\n\n  heading.removeAttribute('content-expanded');\n  content.setAttribute('aria-expanded', 'false');\n\n  // Wait a microtask so other calls to open/close can get the final sizes.\n  await null;\n\n  await transitionHeight(content, {\n    from,\n    to: 0,\n    duration: 300,\n  });\n\n  content.style.height = '';\n}\n\nasync function open(heading: HTMLElement) {\n  const content = heading.nextElementSibling as HTMLElement;\n\n  // if there is no content, nothing to expand\n  if (!content) return;\n\n  const from = content.getBoundingClientRect().height;\n\n  heading.setAttribute('content-expanded', '');\n  content.setAttribute('aria-expanded', 'true');\n\n  const to = content.getBoundingClientRect().height;\n\n  // Wait a microtask so other calls to open/close can get the final sizes.\n  await null;\n\n  await transitionHeight(content, {\n    from, to,\n    duration: 300,\n  });\n\n  content.style.height = '';\n}\n\n/**\n * A multi-panel view that the user can add any number of 'panels'.\n * 'a panel' consists of two elements. Even index element becomes heading,\n * and odd index element becomes the expandable content.\n */\nexport default class MultiPanel extends HTMLElement {\n  static get observedAttributes() { return [openOneOnlyAttr]; }\n\n  constructor() {\n    super();\n\n    // add EventListeners\n    this.addEventListener('click', this._onClick);\n    this.addEventListener('keydown', this._onKeyDown);\n\n    // Watch for children changes.\n    new MutationObserver(() => this._childrenChange())\n      .observe(this, { childList: true });\n  }\n\n  connectedCallback() {\n    this._childrenChange();\n  }\n\n  attributeChangedCallback(name: string, oldValue: string | null, newValue: string | null) {\n    if (name === openOneOnlyAttr && newValue === null) {\n      this._closeAll({ exceptFirst: true });\n    }\n  }\n\n  // Click event handler\n  private _onClick(event: MouseEvent) {\n    const el = event.target as HTMLElement;\n    const heading = getClosestHeading(el);\n    if (!heading) return;\n    this._toggle(heading);\n  }\n\n  // KeyDown event handler\n  private _onKeyDown(event: KeyboardEvent) {\n    const selectedEl = document.activeElement!;\n    const heading = getClosestHeading(selectedEl);\n\n    // if keydown event is not on heading element, ignore\n    if (!heading) return;\n\n    // if something inside of heading has focus, ignore\n    if (selectedEl !== heading) return;\n\n    // don’t handle modifier shortcuts used by assistive technology.\n    if (event.altKey) return;\n\n    let newHeading: HTMLElement | undefined;\n\n    switch (event.key) {\n      case 'ArrowLeft':\n      case 'ArrowUp':\n        newHeading = this._prevHeading();\n        break;\n\n      case 'ArrowRight':\n      case 'ArrowDown':\n        newHeading = this._nextHeading();\n        break;\n\n      case 'Home':\n        newHeading = this._firstHeading();\n        break;\n\n      case 'End':\n        newHeading = this._lastHeading();\n        break;\n\n      // this has 3 cases listed to support IEs and FF before 37\n      case 'Enter':\n      case ' ':\n      case 'Spacebar':\n        this._toggle(heading);\n        break;\n\n      // Any other key press is ignored and passed back to the browser.\n      default:\n        return;\n    }\n\n    event.preventDefault();\n    if (newHeading) {\n      selectedEl.setAttribute('tabindex', '-1');\n      newHeading.setAttribute('tabindex', '0');\n      newHeading.focus();\n    }\n  }\n\n  private _toggle(heading: HTMLElement) {\n    if (!heading) return;\n\n    // toggle expanded and aria-expanded attributes\n    if (heading.hasAttribute('content-expanded')) {\n      close(heading);\n    } else {\n      if (this.openOneOnly) this._closeAll();\n      open(heading);\n    }\n  }\n\n  private _closeAll(options: CloseAllOptions = {}): void {\n    const { exceptFirst = false } = options;\n    let els = [...this.children].filter(el => el.matches('[content-expanded]')) as HTMLElement[];\n\n    if (exceptFirst) {\n      els = els.slice(1);\n    }\n\n    for (const el of els) close(el);\n  }\n\n  // children of multi-panel should always be even number (heading/content pair)\n  private _childrenChange() {\n    let preserveTabIndex = false;\n    let heading = this.firstElementChild;\n\n    while (heading) {\n      const content = heading.nextElementSibling;\n      const randomId = Math.random().toString(36).substr(2, 9);\n\n      // if at the end of this loop, runout of element for content,\n      // it means it has odd number of elements. log error and set heading to end the loop.\n      if (!content) {\n        console.error('<multi-panel> requires an even number of element children.');\n        break;\n      }\n\n      // When odd number of elements were inserted in the middle,\n      // what was heading before may become content after the insertion.\n      // Remove classes and attributes to prepare for this change.\n      heading.classList.remove(style.panelContent);\n      content.classList.remove(style.panelHeading);\n      heading.removeAttribute('aria-expanded');\n      heading.removeAttribute('content-expanded');\n\n      // If appreciable, remove tabindex from content which used to be header.\n      content.removeAttribute('tabindex');\n\n      // Assign heading and content classes\n      heading.classList.add(style.panelHeading);\n      content.classList.add(style.panelContent);\n\n      // Assign ids and aria-X for heading/content pair.\n      heading.id = `panel-heading-${randomId}`;\n      heading.setAttribute('aria-controls', `panel-content-${randomId}`);\n      content.id = `panel-content-${randomId}`;\n      content.setAttribute('aria-labelledby', `panel-heading-${randomId}`);\n\n      // If tabindex 0 is assigned to a heading, flag to preserve tab index position.\n      // Otherwise, make sure tabindex -1 is set to heading elements.\n      if (heading.getAttribute('tabindex') === '0') {\n        preserveTabIndex = true;\n      } else {\n        heading.setAttribute('tabindex', '-1');\n      }\n\n      // It's possible that the heading & content expanded attributes are now out of sync. Resync\n      // them using the heading as the source of truth.\n      content.setAttribute(\n        'aria-expanded',\n        heading.hasAttribute('content-expanded') ? 'true' : 'false',\n      );\n\n      // next sibling of content = next heading\n      heading = content.nextElementSibling;\n    }\n\n    // if no flag, make 1st heading as tabindex 0 (otherwise keep previous tab index position).\n    if (!preserveTabIndex && this.firstElementChild) {\n      this.firstElementChild.setAttribute('tabindex', '0');\n    }\n\n    // In case we're openOneOnly, and an additional open item has been added:\n    if (this.openOneOnly) this._closeAll({ exceptFirst: true });\n  }\n\n  // returns heading that is before currently selected one.\n  private _prevHeading() {\n    // activeElement would be the currently selected heading\n    // 2 elements before that would be the previous heading unless it is the first element.\n    if (this.firstElementChild === document.activeElement) {\n      return this.firstElementChild as HTMLElement;\n    }\n    // previous Element of active Element is previous Content,\n    // previous Element of previous Content is previousHeading\n    const previousContent = document.activeElement!.previousElementSibling;\n    if (previousContent) {\n      return previousContent.previousElementSibling as HTMLElement;\n    }\n  }\n\n  // returns heading that is after currently selected one.\n  private _nextHeading() {\n    // activeElement would be the currently selected heading\n    // 2 elemements after that would be the next heading.\n    const nextContent = document.activeElement!.nextElementSibling;\n    if (nextContent) {\n      return nextContent.nextElementSibling as HTMLElement;\n    }\n  }\n\n  // returns first heading in multi-panel.\n  private _firstHeading() {\n    // first element is always first heading\n    return this.firstElementChild as HTMLElement;\n  }\n\n  // returns last heading in multi-panel.\n  private _lastHeading() {\n    // if the last element is heading, return last element\n    const lastEl = this.lastElementChild as HTMLElement;\n    if (lastEl && lastEl.classList.contains(style.panelHeading)) {\n      return lastEl;\n    }\n    // otherwise return 2nd from the last\n    const lastContent = this.lastElementChild;\n    if (lastContent) {\n      return lastContent.previousElementSibling as HTMLElement;\n    }\n  }\n\n  /**\n   * If true, only one panel can be open at once. When one opens, others close.\n   */\n  get openOneOnly() {\n    return this.hasAttribute(openOneOnlyAttr);\n  }\n\n  set openOneOnly(val: boolean) {\n    if (val) {\n      this.setAttribute(openOneOnlyAttr, '');\n    } else {\n      this.removeAttribute(openOneOnlyAttr);\n    }\n  }\n}\n\ncustomElements.define('multi-panel', MultiPanel);\n","import { h, Component } from 'preact';\nimport * as prettyBytes from 'pretty-bytes';\nimport * as style from './style.scss';\n\ninterface Props {\n  blob: Blob;\n  compareTo?: Blob;\n}\n\ninterface State {}\n\nexport default class FileSize extends Component<Props, State> {\n  render({ blob, compareTo }: Props) {\n    let comparison: JSX.Element | undefined;\n\n    if (compareTo) {\n      const delta = blob.size / compareTo.size;\n      if (delta > 1) {\n        const percent = Math.round((delta - 1) * 100) + '%';\n        comparison = (\n          <span class={`${style.sizeDelta} ${style.sizeIncrease}`}>\n            {percent === '0%' ? 'slightly' : percent} bigger\n          </span>\n        );\n      } else if (delta < 1) {\n        const percent = Math.round((1 - delta) * 100) + '%';\n        comparison = (\n          <span class={`${style.sizeDelta} ${style.sizeDecrease}`}>\n            {percent === '0%' ? 'slightly' : percent} smaller\n          </span>\n        );\n      } else {\n        comparison = (\n          <span class={style.sizeDelta}>no change</span>\n        );\n      }\n    }\n\n    return <span>{prettyBytes(blob.size)} {comparison}</span>;\n  }\n}\n","import { h, Component, ComponentChildren, ComponentChild } from 'preact';\n\nimport * as style from './style.scss';\nimport FileSize from './FileSize';\nimport { DownloadIcon, CopyAcrossIcon, CopyAcrossIconProps } from '../../lib/icons';\nimport '../custom-els/LoadingSpinner';\nimport { SourceImage } from '../compress';\nimport { Fileish, bind } from '../../lib/initial-util';\n\ninterface Props {\n  loading: boolean;\n  source?: SourceImage;\n  imageFile?: Fileish;\n  downloadUrl?: string;\n  children: ComponentChildren;\n  copyDirection: CopyAcrossIconProps['copyDirection'];\n  buttonPosition: keyof typeof buttonPositionClass;\n  onCopyToOtherClick(): void;\n}\n\ninterface State {\n  showLoadingState: boolean;\n}\n\nconst buttonPositionClass = {\n  'stack-right': style.stackRight,\n  'download-right': style.downloadRight,\n  'download-left': style.downloadLeft,\n};\n\nconst loadingReactionDelay = 500;\n\nexport default class Results extends Component<Props, State> {\n  state: State = {\n    showLoadingState: false,\n  };\n\n  /** The timeout ID between entering the loading state, and changing UI */\n  private loadingTimeoutId: number = 0;\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    if (prevProps.loading && !this.props.loading) {\n      // Just stopped loading\n      clearTimeout(this.loadingTimeoutId);\n      this.setState({ showLoadingState: false });\n    } else if (!prevProps.loading && this.props.loading) {\n      // Just started loading\n      this.loadingTimeoutId = self.setTimeout(\n        () => this.setState({ showLoadingState: true }),\n        loadingReactionDelay,\n      );\n    }\n  }\n\n  @bind\n  private onCopyToOtherClick(event: Event) {\n    event.preventDefault();\n    this.props.onCopyToOtherClick();\n  }\n\n  @bind\n  onDownload() {\n    // GA can’t do floats. So we round to ints. We're deliberately rounding to nearest kilobyte to\n    // avoid cases where exact image sizes leak something interesting about the user.\n    const before = Math.round(this.props.source!.file.size / 1024);\n    const after = Math.round(this.props.imageFile!.size / 1024);\n    const change = Math.round(after / before * 1000);\n\n    ga('send', 'event', 'compression', 'download', {\n      metric1: before,\n      metric2: after,\n      metric3: change,\n    });\n  }\n\n  render(\n    { source, imageFile, downloadUrl, children, copyDirection, buttonPosition }: Props,\n    { showLoadingState }: State,\n  ) {\n\n    return (\n      <div class={`${style.results} ${buttonPositionClass[buttonPosition]}`}>\n        <div class={style.resultData}>\n          {(children as ComponentChild[])[0]\n            ? <div class={style.resultTitle}>{children}</div>\n            : null\n          }\n          {!imageFile || showLoadingState ? 'Working…' :\n            <FileSize\n              blob={imageFile}\n              compareTo={(source && imageFile !== source.file) ? source.file : undefined}\n            />\n          }\n        </div>\n\n        <button\n          class={style.copyToOther}\n          title=\"Copy settings to other side\"\n          onClick={this.onCopyToOtherClick}\n        >\n          <CopyAcrossIcon class={style.copyIcon} copyDirection={copyDirection} />\n        </button>\n\n        <div class={style.download}>\n          {(downloadUrl && imageFile) && (\n            <a\n              class={`${style.downloadLink} ${showLoadingState ? style.downloadLinkDisable : ''}`}\n              href={downloadUrl}\n              download={imageFile.name}\n              title=\"Download\"\n              onClick={this.onDownload}\n            >\n              <DownloadIcon class={style.downloadIcon} />\n            </a>\n          )}\n          {showLoadingState && <loading-spinner class={style.spinner} />}\n        </div>\n      </div>\n    );\n  }\n}\n","export interface RotateOptions {\n  rotate: 0 | 90 | 180 | 270;\n}\n\nexport const defaultOptions: RotateOptions = { rotate: 0 };\n\nexport interface RotateModuleInstance {\n  exports: {\n    memory: WebAssembly.Memory;\n    rotate(width: number, height: number, rotate: 0 | 90 | 180 | 270): void;\n  };\n}\n","import { defaultOptions as rotateDefaultOptions } from './rotate/processor-meta';\n\nexport interface InputProcessorState {\n  rotate: import('./rotate/processor-meta').RotateOptions;\n}\n\nexport const defaultInputProcessorState: InputProcessorState = {\n  rotate: rotateDefaultOptions,\n};\n","import { h, Component } from 'preact';\n\nimport { bind, Fileish } from '../../lib/initial-util';\nimport { blobToImg, drawableToImageData, blobToText } from '../../lib/util';\nimport * as style from './style.scss';\nimport Output from '../Output';\nimport Options from '../Options';\nimport ResultCache from './result-cache';\nimport * as identity from '../../codecs/identity/encoder-meta';\nimport * as oxiPNG from '../../codecs/oxipng/encoder-meta';\nimport * as mozJPEG from '../../codecs/mozjpeg/encoder-meta';\nimport * as webP from '../../codecs/webp/encoder-meta';\nimport * as avif from '../../codecs/avif/encoder-meta';\nimport * as browserPNG from '../../codecs/browser-png/encoder-meta';\nimport * as browserJPEG from '../../codecs/browser-jpeg/encoder-meta';\nimport * as browserWebP from '../../codecs/browser-webp/encoder-meta';\nimport * as browserGIF from '../../codecs/browser-gif/encoder-meta';\nimport * as browserTIFF from '../../codecs/browser-tiff/encoder-meta';\nimport * as browserJP2 from '../../codecs/browser-jp2/encoder-meta';\nimport * as browserBMP from '../../codecs/browser-bmp/encoder-meta';\nimport * as browserPDF from '../../codecs/browser-pdf/encoder-meta';\nimport { EncoderState, EncoderType, EncoderOptions, encoderMap } from '../../codecs/encoders';\nimport { PreprocessorState, defaultPreprocessorState } from '../../codecs/preprocessors';\nimport { decodeImage } from '../../codecs/decoders';\nimport { cleanMerge, cleanSet } from '../../lib/clean-modify';\nimport Processor from '../../codecs/processor';\nimport {\n  BrowserResizeOptions, isWorkerOptions as isWorkerResizeOptions, isHqx, WorkerResizeOptions,\n} from '../../codecs/resize/processor-meta';\nimport './custom-els/MultiPanel';\nimport Results from '../results';\nimport { ExpandIcon, CopyAcrossIconProps } from '../../lib/icons';\nimport SnackBarElement from '../../lib/SnackBar';\nimport { InputProcessorState, defaultInputProcessorState } from '../../codecs/input-processors';\n\nexport interface SourceImage {\n  file: File | Fileish;\n  decoded: ImageData;\n  processed: ImageData;\n  vectorImage?: HTMLImageElement;\n  inputProcessorState: InputProcessorState;\n}\n\ninterface SideSettings {\n  preprocessorState: PreprocessorState;\n  encoderState: EncoderState;\n}\n\ninterface Side {\n  preprocessed?: ImageData;\n  file?: Fileish;\n  downloadUrl?: string;\n  data?: ImageData;\n  latestSettings: SideSettings;\n  encodedSettings?: SideSettings;\n  loading: boolean;\n  /** Counter of the latest bmp currently encoding */\n  loadingCounter: number;\n  /** Counter of the latest bmp encoded */\n  loadedCounter: number;\n}\n\ninterface Props {\n  file: File | Fileish;\n  showSnack: SnackBarElement['showSnackbar'];\n  onBack: () => void;\n}\n\ninterface State {\n  source?: SourceImage;\n  sides: [Side, Side];\n  /** Source image load */\n  loading: boolean;\n  loadingCounter: number;\n  error?: string;\n  mobileView: boolean;\n}\n\ninterface UpdateImageOptions {\n  skipPreprocessing?: boolean;\n}\n\nasync function processInput(\n  data: ImageData,\n  inputProcessData: InputProcessorState,\n  processor: Processor,\n) {\n  let processedData = data;\n\n  if (inputProcessData.rotate.rotate !== 0) {\n    processedData = await processor.rotate(processedData, inputProcessData.rotate);\n  }\n\n  return processedData;\n}\n\nasync function preprocessImage(\n  source: SourceImage,\n  preprocessData: PreprocessorState,\n  processor: Processor,\n): Promise<ImageData> {\n  let result = source.processed;\n\n  if (preprocessData.resize.enabled) {\n    if (preprocessData.resize.method === 'vector' && source.vectorImage) {\n      result = processor.vectorResize(\n        source.vectorImage,\n        preprocessData.resize,\n      );\n    } else if (isHqx(preprocessData.resize)) {\n      // Hqx can only do x2, x3 or x4.\n      result = await processor.workerResize(result, preprocessData.resize);\n      // If the target size is not a clean x2, x3 or x4, use Catmull-Rom\n      // for the remaining scaling.\n      const pixelOpts = { ...preprocessData.resize, method: 'catrom' };\n      result = await processor.workerResize(result, pixelOpts as WorkerResizeOptions);\n    } else if (isWorkerResizeOptions(preprocessData.resize)) {\n      result = await processor.workerResize(result, preprocessData.resize);\n    } else {\n      result = processor.resize(result, preprocessData.resize as BrowserResizeOptions);\n    }\n  }\n  if (preprocessData.quantizer.enabled) {\n    result = await processor.imageQuant(result, preprocessData.quantizer);\n  }\n  return result;\n}\n\nasync function compressImage(\n  image: ImageData,\n  encodeData: EncoderState,\n  sourceFilename: string,\n  processor: Processor,\n): Promise<Fileish> {\n  const compressedData = await (() => {\n    switch (encodeData.type) {\n      case oxiPNG.type: return processor.oxiPngEncode(image, encodeData.options);\n      case mozJPEG.type: return processor.mozjpegEncode(image, encodeData.options);\n      case webP.type: return processor.webpEncode(image, encodeData.options);\n      case avif.type: return processor.avifEncode(image, encodeData.options);\n      case browserPNG.type: return processor.browserPngEncode(image);\n      case browserJPEG.type: return processor.browserJpegEncode(image, encodeData.options);\n      case browserWebP.type: return processor.browserWebpEncode(image, encodeData.options);\n      case browserGIF.type: return processor.browserGifEncode(image);\n      case browserTIFF.type: return processor.browserTiffEncode(image);\n      case browserJP2.type: return processor.browserJp2Encode(image);\n      case browserBMP.type: return processor.browserBmpEncode(image);\n      case browserPDF.type: return processor.browserPdfEncode(image);\n      default: throw Error(`Unexpected encoder ${JSON.stringify(encodeData)}`);\n    }\n  })();\n\n  const encoder = encoderMap[encodeData.type];\n\n  return new Fileish(\n    [compressedData],\n    sourceFilename.replace(/.[^.]*$/, `.${encoder.extension}`),\n    { type: encoder.mimeType },\n  );\n}\n\nfunction stateForNewSourceData(state: State, newSource: SourceImage): State {\n  let newState = { ...state };\n\n  for (const i of [0, 1]) {\n    // Ditch previous encodings\n    const downloadUrl = state.sides[i].downloadUrl;\n    if (downloadUrl) URL.revokeObjectURL(downloadUrl);\n\n    newState = cleanMerge(state, `sides.${i}`, {\n      preprocessed: undefined,\n      file: undefined,\n      downloadUrl: undefined,\n      data: undefined,\n      encodedSettings: undefined,\n    });\n  }\n\n  return newState;\n}\n\nasync function processSvg(blob: Blob): Promise<HTMLImageElement> {\n  // Firefox throws if you try to draw an SVG to canvas that doesn't have width/height.\n  // In Chrome it loads, but drawImage behaves weirdly.\n  // This function sets width/height if it isn't already set.\n  const parser = new DOMParser();\n  const text = await blobToText(blob);\n  const document = parser.parseFromString(text, 'image/svg+xml');\n  const svg = document.documentElement!;\n\n  if (svg.hasAttribute('width') && svg.hasAttribute('height')) {\n    return blobToImg(blob);\n  }\n\n  const viewBox = svg.getAttribute('viewBox');\n  if (viewBox === null) throw Error('SVG must have width/height or viewBox');\n\n  const viewboxParts = viewBox.split(/\\s+/);\n  svg.setAttribute('width', viewboxParts[2]);\n  svg.setAttribute('height', viewboxParts[3]);\n\n  const serializer = new XMLSerializer();\n  const newSource = serializer.serializeToString(document);\n  return blobToImg(new Blob([newSource], { type: 'image/svg+xml' }));\n}\n\n// These are only used in the mobile view\nconst resultTitles = ['Top', 'Bottom'];\n// These are only used in the desktop view\nconst buttonPositions =\n  ['download-left', 'download-right'] as ('download-left' | 'download-right')[];\n\nconst originalDocumentTitle = document.title;\n\nexport default class Compress extends Component<Props, State> {\n  widthQuery = window.matchMedia('(max-width: 599px)');\n\n  state: State = {\n    source: undefined,\n    loading: false,\n    loadingCounter: 0,\n    sides: [\n      {\n        latestSettings: {\n          preprocessorState: defaultPreprocessorState,\n          encoderState: { type: identity.type, options: identity.defaultOptions },\n        },\n        loadingCounter: 0,\n        loadedCounter: 0,\n        loading: false,\n      },\n      {\n        latestSettings: {\n          preprocessorState: defaultPreprocessorState,\n          encoderState: { type: mozJPEG.type, options: mozJPEG.defaultOptions },\n        },\n        loadingCounter: 0,\n        loadedCounter: 0,\n        loading: false,\n      },\n    ],\n    mobileView: this.widthQuery.matches,\n  };\n\n  private readonly encodeCache = new ResultCache();\n  private readonly leftProcessor = new Processor();\n  private readonly rightProcessor = new Processor();\n  // For debouncing calls to updateImage for each side.\n  private readonly updateImageTimeoutIds: [number?, number?] = [undefined, undefined];\n\n  constructor(props: Props) {\n    super(props);\n    this.widthQuery.addListener(this.onMobileWidthChange);\n    this.updateFile(props.file);\n\n    import('../../lib/sw-bridge').then(({ mainAppLoaded }) => mainAppLoaded());\n  }\n\n  @bind\n  private onMobileWidthChange() {\n    this.setState({ mobileView: this.widthQuery.matches });\n  }\n\n  private onEncoderTypeChange(index: 0 | 1, newType: EncoderType): void {\n    this.setState({\n      sides: cleanSet(this.state.sides, `${index}.latestSettings.encoderState`, {\n        type: newType,\n        options: encoderMap[newType].defaultOptions,\n      }),\n    });\n  }\n\n  private onPreprocessorOptionsChange(index: 0 | 1, options: PreprocessorState): void {\n    this.setState({\n      sides: cleanSet(this.state.sides, `${index}.latestSettings.preprocessorState`, options),\n    });\n  }\n\n  private onEncoderOptionsChange(index: 0 | 1, options: EncoderOptions): void {\n    this.setState({\n      sides: cleanSet(this.state.sides, `${index}.latestSettings.encoderState.options`, options),\n    });\n  }\n\n  private updateDocumentTitle(filename: string = ''): void {\n    document.title = filename ? `${filename} - ${originalDocumentTitle}` : originalDocumentTitle;\n  }\n\n  componentWillReceiveProps(nextProps: Props): void {\n    if (nextProps.file !== this.props.file) {\n      this.updateFile(nextProps.file);\n    }\n  }\n\n  componentWillUnmount(): void {\n    this.updateDocumentTitle();\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State): void {\n    const { source, sides } = this.state;\n\n    const sourceDataChanged =\n      // Has the source object become set/unset?\n      !!source !== !!prevState.source ||\n      // Or has the processed data changed?\n      (source && prevState.source && source.processed !== prevState.source.processed);\n\n    for (const [i, side] of sides.entries()) {\n      const prevSettings = prevState.sides[i].latestSettings;\n      const encoderChanged = side.latestSettings.encoderState !== prevSettings.encoderState;\n      const preprocessorChanged =\n        side.latestSettings.preprocessorState !== prevSettings.preprocessorState;\n\n      // The image only needs updated if the encoder/preprocessor settings have changed, or the\n      // source has changed.\n      if (sourceDataChanged || encoderChanged || preprocessorChanged) {\n        this.queueUpdateImage(i, {\n          skipPreprocessing: !sourceDataChanged && !preprocessorChanged,\n        });\n      }\n    }\n  }\n\n  private async onCopyToOtherClick(index: 0 | 1) {\n    const otherIndex = (index + 1) % 2;\n    const oldSettings = this.state.sides[otherIndex];\n    const newSettings = { ...this.state.sides[index] };\n\n    // Create a new object URL for the new settings. This avoids both sides sharing a URL, which\n    // means it can be safely revoked without impacting the other side.\n    if (newSettings.file) newSettings.downloadUrl = URL.createObjectURL(newSettings.file);\n\n    this.setState({\n      sides: cleanSet(this.state.sides, otherIndex, newSettings),\n    });\n\n    const result = await this.props.showSnack('Settings copied across', {\n      timeout: 5000,\n      actions: ['undo', 'dismiss'],\n    });\n\n    if (result !== 'undo') return;\n\n    this.setState({\n      sides: cleanSet(this.state.sides, otherIndex, oldSettings),\n    });\n  }\n\n  @bind\n  private async onInputProcessorChange(options: InputProcessorState): Promise<void> {\n    const source = this.state.source;\n    if (!source) return;\n\n    const oldRotate = source.inputProcessorState.rotate.rotate;\n    const newRotate = options.rotate.rotate;\n    const orientationChanged = oldRotate % 180 !== newRotate % 180;\n    const loadingCounter = this.state.loadingCounter + 1;\n    // Either processor is good enough here.\n    const processor = this.leftProcessor;\n\n    this.setState({\n      loadingCounter, loading: true,\n      source: cleanSet(source, 'inputProcessorState', options),\n    });\n\n    // Abort any current encode jobs, as they're redundant now.\n    this.leftProcessor.abortCurrent();\n    this.rightProcessor.abortCurrent();\n\n    try {\n      const processed = await processInput(source.decoded, options, processor);\n\n      // Another file has been opened/processed before this one processed.\n      if (this.state.loadingCounter !== loadingCounter) return;\n\n      let newState = { ...this.state, loading: false };\n      newState = cleanSet(newState, 'source.processed', processed);\n      newState = stateForNewSourceData(newState, newState.source!);\n\n      if (orientationChanged) {\n        // If orientation has changed, we should flip the resize values.\n        for (const i of [0, 1]) {\n          const resizeSettings = newState.sides[i].latestSettings.preprocessorState.resize;\n          newState = cleanMerge(newState, `sides.${i}.latestSettings.preprocessorState.resize`, {\n            width: resizeSettings.height,\n            height: resizeSettings.width,\n          });\n        }\n      }\n      this.setState(newState);\n    } catch (err) {\n      if (err.name === 'AbortError') return;\n      console.error(err);\n      // Another file has been opened/processed before this one processed.\n      if (this.state.loadingCounter !== loadingCounter) return;\n      this.props.showSnack('Processing error');\n      this.setState({ loading: false });\n    }\n  }\n\n  @bind\n  private async updateFile(file: File | Fileish) {\n    const loadingCounter = this.state.loadingCounter + 1;\n    // Either processor is good enough here.\n    const processor = this.leftProcessor;\n\n    this.setState({ loadingCounter, loading: true });\n\n    // Abort any current encode jobs, as they're redundant now.\n    this.leftProcessor.abortCurrent();\n    this.rightProcessor.abortCurrent();\n\n    try {\n      let decoded: ImageData;\n      let vectorImage: HTMLImageElement | undefined;\n\n      // Special-case SVG. We need to avoid createImageBitmap because of\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=606319.\n      // Also, we cache the HTMLImageElement so we can perform vector resizing later.\n      if (file.type.startsWith('image/svg+xml')) {\n        vectorImage = await processSvg(file);\n        decoded = drawableToImageData(vectorImage);\n      } else {\n        // Either processor is good enough here.\n        decoded = await decodeImage(file, processor);\n      }\n\n      const processed = await processInput(decoded, defaultInputProcessorState, processor);\n\n      // Another file has been opened/processed before this one processed.\n      if (this.state.loadingCounter !== loadingCounter) return;\n\n      let newState: State = {\n        ...this.state,\n        source: {\n          decoded, file, vectorImage, processed,\n          inputProcessorState: defaultInputProcessorState,\n        },\n        loading: false,\n      };\n\n      newState = stateForNewSourceData(newState, newState.source!);\n\n      for (const i of [0, 1]) {\n        // Default resize values come from the image:\n        newState = cleanMerge(newState, `sides.${i}.latestSettings.preprocessorState.resize`, {\n          width: processed.width,\n          height: processed.height,\n          method: vectorImage ? 'vector' : 'lanczos3',\n        });\n      }\n\n      this.updateDocumentTitle(file.name);\n      this.setState(newState);\n    } catch (err) {\n      if (err.name === 'AbortError') return;\n      console.error(err);\n      // Another file has been opened/processed before this one processed.\n      if (this.state.loadingCounter !== loadingCounter) return;\n      this.props.showSnack('Invalid image');\n      this.setState({ loading: false });\n    }\n  }\n\n  /**\n   * Debounce the heavy lifting of updateImage.\n   * Otherwise, the thrashing causes jank, and sometimes crashes iOS Safari.\n   */\n  private queueUpdateImage(index: number, options: UpdateImageOptions = {}): void {\n    // Call updateImage after this delay, unless queueUpdateImage is called again, in which case the\n    // timeout is reset.\n    const delay = 100;\n\n    clearTimeout(this.updateImageTimeoutIds[index]);\n\n    this.updateImageTimeoutIds[index] = self.setTimeout(\n      () => {\n        this.updateImage(index, options).catch((err) => {\n          console.error(err);\n        });\n      },\n      delay,\n    );\n  }\n\n  private async updateImage(index: number, options: UpdateImageOptions = {}): Promise<void> {\n    const {\n      skipPreprocessing = false,\n    } = options;\n    const { source } = this.state;\n    if (!source) return;\n\n    // Each time we trigger an async encode, the counter changes.\n    const loadingCounter = this.state.sides[index].loadingCounter + 1;\n\n    let sides = cleanMerge(this.state.sides, index, {\n      loadingCounter,\n      loading: true,\n    });\n\n    this.setState({ sides });\n\n    const side = sides[index];\n    const settings = side.latestSettings;\n\n    let file: File | Fileish | undefined;\n    let preprocessed: ImageData | undefined;\n    let data: ImageData | undefined;\n    const cacheResult = this.encodeCache.match(\n      source.processed, settings.preprocessorState, settings.encoderState,\n    );\n    const processor = (index === 0) ? this.leftProcessor : this.rightProcessor;\n\n    // Abort anything the processor is currently doing.\n    // Although the processor will abandon current tasks when a new one is called,\n    // we might not call another task here. Eg, we might get the result from the cache.\n    processor.abortCurrent();\n\n    if (cacheResult) {\n      ({ file, preprocessed, data } = cacheResult);\n    } else {\n      try {\n        // Special case for identity\n        if (settings.encoderState.type === identity.type) {\n          file = source.file;\n          data = source.processed;\n        } else {\n          preprocessed = (skipPreprocessing && side.preprocessed)\n            ? side.preprocessed\n            : await preprocessImage(source, settings.preprocessorState, processor);\n\n          file = await compressImage(\n            preprocessed, settings.encoderState, source.file.name, processor,\n          );\n          data = await decodeImage(file, processor);\n\n          this.encodeCache.add({\n            data,\n            preprocessed,\n            file,\n            sourceData: source.processed,\n            encoderState: settings.encoderState,\n            preprocessorState: settings.preprocessorState,\n          });\n        }\n      } catch (err) {\n        if (err.name === 'AbortError') return;\n        this.props.showSnack(`Processing error (type=${settings.encoderState.type}): ${err}`);\n        throw err;\n      }\n    }\n\n    const latestData = this.state.sides[index];\n    // If a later encode has landed before this one, return.\n    if (loadingCounter < latestData.loadedCounter) {\n      return;\n    }\n\n    if (latestData.downloadUrl) URL.revokeObjectURL(latestData.downloadUrl);\n\n    sides = cleanMerge(this.state.sides, index, {\n      file,\n      data,\n      preprocessed,\n      downloadUrl: URL.createObjectURL(file),\n      loading: sides[index].loadingCounter !== loadingCounter,\n      loadedCounter: loadingCounter,\n      encodedSettings: settings,\n    });\n\n    this.setState({ sides });\n  }\n\n  render({ onBack }: Props, { loading, sides, source, mobileView }: State) {\n    const [leftSide, rightSide] = sides;\n    const [leftImageData, rightImageData] = sides.map(i => i.data);\n\n    const options = sides.map((side, index) => (\n      // tslint:disable-next-line:jsx-key\n      <Options\n        source={source}\n        mobileView={mobileView}\n        preprocessorState={side.latestSettings.preprocessorState}\n        encoderState={side.latestSettings.encoderState}\n        onEncoderTypeChange={this.onEncoderTypeChange.bind(this, index as 0|1)}\n        onEncoderOptionsChange={this.onEncoderOptionsChange.bind(this, index as 0|1)}\n        onPreprocessorOptionsChange={this.onPreprocessorOptionsChange.bind(this, index as 0|1)}\n      />\n    ));\n\n    const copyDirections =\n      (mobileView ? ['down', 'up'] : ['right', 'left']) as CopyAcrossIconProps['copyDirection'][];\n\n    const results = sides.map((side, index) => (\n      // tslint:disable-next-line:jsx-key\n      <Results\n        downloadUrl={side.downloadUrl}\n        imageFile={side.file}\n        source={source}\n        loading={loading || side.loading}\n        copyDirection={copyDirections[index]}\n        onCopyToOtherClick={this.onCopyToOtherClick.bind(this, index as 0|1)}\n        buttonPosition={mobileView ? 'stack-right' : buttonPositions[index]}\n      >\n        {!mobileView ? null : [\n          <ExpandIcon class={style.expandIcon} key=\"expand-icon\"/>,\n          `${resultTitles[index]} (${encoderMap[side.latestSettings.encoderState.type].label})`,\n        ]}\n      </Results>\n    ));\n\n    // For rendering, we ideally want the settings that were used to create the data, not the latest\n    // settings.\n    const leftDisplaySettings = leftSide.encodedSettings || leftSide.latestSettings;\n    const rightDisplaySettings = rightSide.encodedSettings || rightSide.latestSettings;\n    const leftImgContain = leftDisplaySettings.preprocessorState.resize.enabled &&\n      leftDisplaySettings.preprocessorState.resize.fitMethod === 'contain';\n    const rightImgContain = rightDisplaySettings.preprocessorState.resize.enabled &&\n      rightDisplaySettings.preprocessorState.resize.fitMethod === 'contain';\n\n    return (\n      <div class={style.compress}>\n        <Output\n          source={source}\n          mobileView={mobileView}\n          leftCompressed={leftImageData}\n          rightCompressed={rightImageData}\n          leftImgContain={leftImgContain}\n          rightImgContain={rightImgContain}\n          onBack={onBack}\n          inputProcessorState={source && source.inputProcessorState}\n          onInputProcessorChange={this.onInputProcessorChange}\n        />\n        {mobileView\n          ? (\n            <div class={style.options}>\n              <multi-panel class={style.multiPanel} open-one-only>\n                {results[0]}\n                {options[0]}\n                {results[1]}\n                {options[1]}\n              </multi-panel>\n            </div>\n          ) : ([\n            <div class={style.options} key=\"options0\">\n              {options[0]}\n              {results[0]}\n            </div>,\n            <div class={style.options} key=\"options1\">\n              {options[1]}\n              {results[1]}\n            </div>,\n          ])\n        }\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}