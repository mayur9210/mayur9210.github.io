{"version":3,"sources":["webpack:///./node_modules/wasm-feature-detect/dist/esm/index.js","webpack:///./codecs/oxipng/index.ts","webpack:///./src/codecs/oxipng/encoder.ts"],"names":["__webpack_require__","d","__webpack_exports__","threads","async","MessageChannel","Promise","resolve","then","e","Error","code","port1","postMessage","SharedArrayBuffer","WebAssembly","validate","Uint8Array","oxipng","Object","esm","bind","default","compress","data","options","optimise","level","buffer"],"mappings":"sDAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAO,MAA86CA,EAAQ,IAAI,OAACC,IAAU,IAAI,OAAM,IAAK,oBAAoBC,eAAeA,qBAAqBC,QAAAC,UAAAC,KAAA,eAAAC,EAAA,IAAAC,MAAA,6CAAAD,EAAAE,KAAA,mBAAAF,IAAyBD,KAAKC,GAAGA,EAAEJ,kBAAkBO,MAAMC,YAAY,IAAIC,kBAAkB,IAAIC,YAAYC,SAASP,GAAG,MAAMA,GAAG,OAAM,IAA1N,CAAgO,IAAIQ,WAAW,CAAC,EAAE,GAAG,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,GAAG,EAAE,EAAE,GAAG,O,kDCSvvD,IAAAC,EAPfd,iBACE,aAAUe,OAAAC,EAAA,EAAAD,UACMnB,EAAAS,EAAA,IAAAD,KAAAR,EAAAqB,KAAA,WAAmBC,QAE5BtB,EAAAS,EAAA,IAAAD,KAAAR,EAAAqB,KAAA,UAGM,GCNRjB,eAAemB,EAASC,EAAmBC,GAChD,aAAcP,GAAWQ,SAAS,IAAIT,WAAWO,GAAOC,EAAQE,OAAOC,OAJzE5B,EAAAC,EAAAC,EAAA,6BAAAqB","file":"process-oxipng.72352.worker.js","sourcesContent":["export const bigInt=()=>(async e=>{try{return(await WebAssembly.instantiate(e)).instance.exports.b(BigInt(0))===BigInt(0)}catch(e){return!1}})(new Uint8Array([0,97,115,109,1,0,0,0,1,6,1,96,1,126,1,126,3,2,1,0,7,5,1,1,98,0,0,10,6,1,4,0,32,0,11])),bulkMemory=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,3,1,0,1,10,14,1,12,0,65,0,65,0,65,0,252,10,0,0,11])),exceptions=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,6,64,7,26,11,11])),multiValue=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,6,1,96,0,2,127,127,3,2,1,0,10,8,1,6,0,65,0,65,0,11])),mutableGlobals=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,2,8,1,1,97,1,98,3,127,1,6,6,1,127,1,65,0,11,7,5,1,1,97,3,1])),referenceTypes=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,7,1,5,0,208,112,26,11])),saturatedFloatToInt=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,12,1,10,0,67,0,0,0,0,252,0,26,11])),signExtensions=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,8,1,6,0,65,0,192,26,11])),simd=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])),tailCall=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,6,1,4,0,18,0,11])),threads=()=>(async e=>{try{return(new(\"undefined\"!=typeof MessageChannel?MessageChannel:await import(\"worker_threads\").then(e=>e.MessageChannel))).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(e)}catch(e){return!1}})(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]));\n","import { threads } from 'wasm-feature-detect';\n\nasync function init() {\n  if (await threads()) {\n    return (await import('./spawn')).default;\n  }\n  return import('./pkg');\n}\n\nexport default init();\n","import optimiser from '../../../codecs/oxipng';\nimport { EncodeOptions } from './encoder-meta';\n\nexport async function compress(data: ArrayBuffer, options: EncodeOptions): Promise<ArrayBuffer> {\n  return (await optimiser).optimise(new Uint8Array(data), options.level).buffer;\n}\n"],"sourceRoot":""}